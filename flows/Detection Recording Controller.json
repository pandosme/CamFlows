[
    {
        "id": "0ac396398ba6bce7",
        "type": "tab",
        "label": "Detection Recording Controller",
        "disabled": false,
        "info": "",
        "env": []
    },
    {
        "id": "94e86c2cb22bb290",
        "type": "group",
        "z": "0ac396398ba6bce7",
        "name": "Dashboard",
        "style": {
            "stroke": "#000000",
            "fill": "#bfdbef",
            "label": true,
            "color": "#000000"
        },
        "nodes": [
            "e9928706275f3e2b",
            "d57b9c54e00269ed",
            "d8de1951951fd651",
            "cae2caf9a0a901d5",
            "19f3feaefe9eadb8",
            "a484c050c055dc86",
            "27fef1dac85c0e25",
            "b95e554b09f19e87",
            "58c641038c28db4d",
            "95ef875df544f0a7",
            "4981e3ae4fe7dcb4",
            "b0dafec5f0806e99",
            "bc5b5c6e6e79f226",
            "bd63ed657b201631",
            "cf06b19f59f2bbfd",
            "635add4c3e683940",
            "c6e35cb7c8055810",
            "15b2061fc694f812",
            "27bd49271d139fee",
            "884cd560a24961d5",
            "9aecaea1a1f8937e",
            "87e2476aac5b636d",
            "b3731c029ac366d6",
            "b08614c7fd97b349",
            "21caf6692ea46fad",
            "e1c0246be468a819",
            "e624b6b1f65b3511",
            "d68362bcc9fc2d98",
            "df5674f854741738",
            "73a704c70c735d00",
            "20a516b4c7d9438f",
            "f8486ffd59974cd0",
            "8f01b96663574f2b",
            "1090cd4187cf762d",
            "f9dd4fa130744384",
            "8994f7e02f1ccd70",
            "5e8988930f2d0897",
            "0005fc39e141213a",
            "24218be0b91b9734",
            "84fa3e1114958d32",
            "2ce55bbb3a991498",
            "984dc6f1c0ec8afd",
            "38c5a852b5640e80"
        ],
        "x": 254,
        "y": 739,
        "w": 992,
        "h": 782
    },
    {
        "id": "34c7a1519ba616fa",
        "type": "group",
        "z": "0ac396398ba6bce7",
        "name": "Recording Method",
        "style": {
            "label": true
        },
        "nodes": [
            "b1111b2652e96bf6",
            "fe882694ee49fa50",
            "e64dd8c685b8391c",
            "351fa805ddaaf7b9",
            "2a4ece199118360b",
            "e1bcba3ded9a6277",
            "642e3e9c7513041b",
            "4e1d2678e05b623e",
            "f48362a9c2a53573",
            "4cfe87d72802fe07",
            "3d9184a6ebecf7e5",
            "1f9d25517145abb4"
        ],
        "x": 254,
        "y": 499,
        "w": 822,
        "h": 202
    },
    {
        "id": "cab3b38bad09e5c1",
        "type": "group",
        "z": "0ac396398ba6bce7",
        "name": "Detection / Trigger",
        "style": {
            "label": true
        },
        "nodes": [
            "704656b901fe94ca",
            "60032f6ab17d898a",
            "ca114ec07cb8c14a",
            "21fa83f8bda58ea8",
            "464dd830bc790782"
        ],
        "x": 254,
        "y": 299,
        "w": 792,
        "h": 162
    },
    {
        "id": "2705dbcb080872fd",
        "type": "group",
        "z": "0ac396398ba6bce7",
        "name": "Init",
        "style": {
            "label": true
        },
        "nodes": [
            "db23fe7a2459b9c8",
            "030b13b36bc1223f",
            "6219a8708b3566ee",
            "29f58521b2d53d65",
            "7f6e845b4438f9ea",
            "74c45ff921303e03",
            "868526529f2dd187"
        ],
        "x": 254,
        "y": 99,
        "w": 792,
        "h": 162
    },
    {
        "id": "58c641038c28db4d",
        "type": "junction",
        "z": "0ac396398ba6bce7",
        "g": "94e86c2cb22bb290",
        "x": 1080,
        "y": 1240,
        "wires": [
            [
                "1f0c73f6262ddfde"
            ]
        ]
    },
    {
        "id": "b3731c029ac366d6",
        "type": "junction",
        "z": "0ac396398ba6bce7",
        "g": "94e86c2cb22bb290",
        "x": 280,
        "y": 860,
        "wires": [
            [
                "8f01b96663574f2b",
                "73a704c70c735d00",
                "8994f7e02f1ccd70",
                "24218be0b91b9734",
                "b08614c7fd97b349",
                "e624b6b1f65b3511",
                "b0dafec5f0806e99"
            ]
        ]
    },
    {
        "id": "3d9184a6ebecf7e5",
        "type": "junction",
        "z": "0ac396398ba6bce7",
        "g": "34c7a1519ba616fa",
        "x": 280,
        "y": 540,
        "wires": [
            [
                "351fa805ddaaf7b9",
                "e1bcba3ded9a6277"
            ]
        ]
    },
    {
        "id": "1f9d25517145abb4",
        "type": "junction",
        "z": "0ac396398ba6bce7",
        "g": "34c7a1519ba616fa",
        "x": 280,
        "y": 580,
        "wires": [
            [
                "2a4ece199118360b",
                "642e3e9c7513041b"
            ]
        ]
    },
    {
        "id": "704656b901fe94ca",
        "type": "trigger",
        "z": "0ac396398ba6bce7",
        "g": "cab3b38bad09e5c1",
        "name": "",
        "op1": "true",
        "op2": "false",
        "op1type": "bool",
        "op2type": "bool",
        "duration": "5",
        "extend": true,
        "overrideDelay": false,
        "units": "s",
        "reset": "",
        "bytopic": "all",
        "topic": "topic",
        "outputs": 2,
        "x": 960,
        "y": 380,
        "wires": [
            [
                "ee659b6e8f153493"
            ],
            [
                "06fbaef0b56055cd"
            ]
        ]
    },
    {
        "id": "b1111b2652e96bf6",
        "type": "function",
        "z": "0ac396398ba6bce7",
        "g": "34c7a1519ba616fa",
        "name": "http://[recorder]/record/startStart Request",
        "func": "msg.url = \"http://rec.juhlin.me/record/start\" ;\n\nmsg.payload = {\n    serial: flow.get(\"camera\").serial,\n    buffer: flow.get(\"bufferTime\") || 5,\n    tag: \"Detection\",\n    method: \"FMR\"\n}\n\nreturn msg;",
        "outputs": 1,
        "timeout": 0,
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "libs": [],
        "x": 660,
        "y": 540,
        "wires": [
            [
                "e64dd8c685b8391c"
            ]
        ]
    },
    {
        "id": "fe882694ee49fa50",
        "type": "function",
        "z": "0ac396398ba6bce7",
        "g": "34c7a1519ba616fa",
        "name": "http://[recorder]/record/startStart Request",
        "func": "msg.url = \"http://rec.juhlin.me/record/stop\" ;\n\nmsg.payload = {\n    serial: flow.get(\"camera\").serial,\n    buffer: 7,\n    tag: \"Detection\",\n    method: \"FMR\"\n}\n\nreturn msg;",
        "outputs": 1,
        "timeout": 0,
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "libs": [],
        "x": 660,
        "y": 580,
        "wires": [
            [
                "e64dd8c685b8391c"
            ]
        ]
    },
    {
        "id": "e64dd8c685b8391c",
        "type": "http request",
        "z": "0ac396398ba6bce7",
        "g": "34c7a1519ba616fa",
        "name": "",
        "method": "POST",
        "ret": "obj",
        "paytoqs": "ignore",
        "url": "",
        "tls": "",
        "persist": false,
        "proxy": "",
        "insecureHTTPParser": false,
        "authType": "",
        "senderr": false,
        "headers": [],
        "x": 980,
        "y": 540,
        "wires": [
            [
                "4af5bf0c04ba4b7e"
            ]
        ]
    },
    {
        "id": "4af5bf0c04ba4b7e",
        "type": "debug",
        "z": "0ac396398ba6bce7",
        "name": "debug 21",
        "active": false,
        "tosidebar": true,
        "console": false,
        "tostatus": false,
        "complete": "false",
        "statusVal": "",
        "statusType": "auto",
        "x": 1190,
        "y": 540,
        "wires": []
    },
    {
        "id": "db23fe7a2459b9c8",
        "type": "catch",
        "z": "0ac396398ba6bce7",
        "g": "2705dbcb080872fd",
        "name": "",
        "scope": null,
        "uncaught": false,
        "x": 360,
        "y": 180,
        "wires": [
            [
                "868526529f2dd187"
            ]
        ]
    },
    {
        "id": "030b13b36bc1223f",
        "type": "ui_toast",
        "z": "0ac396398ba6bce7",
        "g": "2705dbcb080872fd",
        "position": "dialog",
        "displayTime": "3",
        "highlight": "",
        "sendall": true,
        "outputs": 1,
        "ok": "OK",
        "cancel": "",
        "raw": false,
        "className": "",
        "topic": "",
        "name": "",
        "x": 770,
        "y": 180,
        "wires": [
            []
        ]
    },
    {
        "id": "8b6ee79f897cc28a",
        "type": "link in",
        "z": "0ac396398ba6bce7",
        "name": "link in 9",
        "links": [
            "f6164021f29559b5",
            "e13017242ba581b3",
            "7307295e0c7b7a1d",
            "d38073e88f076298",
            "251353d825ba4f57",
            "1f0c73f6262ddfde"
        ],
        "x": 215,
        "y": 1200,
        "wires": [
            [
                "e9928706275f3e2b"
            ]
        ]
    },
    {
        "id": "14989808a5992868",
        "type": "link in",
        "z": "0ac396398ba6bce7",
        "name": "link in 10",
        "links": [
            "c3dd23ad9b62caf6",
            "64d0beb8e1423bb7"
        ],
        "x": 215,
        "y": 1360,
        "wires": [
            [
                "a484c050c055dc86"
            ]
        ]
    },
    {
        "id": "bc5b5c6e6e79f226",
        "type": "Axis device",
        "z": "0ac396398ba6bce7",
        "g": "94e86c2cb22bb290",
        "name": "",
        "preset": "c32d3049700de36c",
        "action": "Device Info",
        "cgi": "",
        "data": "",
        "options": "",
        "filename": "",
        "x": 610,
        "y": 780,
        "wires": [
            [
                "bd63ed657b201631"
            ]
        ]
    },
    {
        "id": "bd63ed657b201631",
        "type": "change",
        "z": "0ac396398ba6bce7",
        "g": "94e86c2cb22bb290",
        "name": "",
        "rules": [
            {
                "t": "set",
                "p": "device",
                "pt": "flow",
                "to": "payload",
                "tot": "msg"
            }
        ],
        "action": "",
        "property": "",
        "from": "",
        "to": "",
        "reg": false,
        "x": 800,
        "y": 780,
        "wires": [
            [
                "cf06b19f59f2bbfd"
            ]
        ]
    },
    {
        "id": "b0dafec5f0806e99",
        "type": "change",
        "z": "0ac396398ba6bce7",
        "g": "94e86c2cb22bb290",
        "name": "Authentication",
        "rules": [
            {
                "t": "set",
                "p": "address",
                "pt": "msg",
                "to": "localhost",
                "tot": "str"
            },
            {
                "t": "set",
                "p": "user",
                "pt": "msg",
                "to": "root",
                "tot": "str"
            },
            {
                "t": "set",
                "p": "password",
                "pt": "msg",
                "to": "pass",
                "tot": "str"
            }
        ],
        "action": "",
        "property": "",
        "from": "",
        "to": "",
        "reg": false,
        "x": 440,
        "y": 780,
        "wires": [
            [
                "bc5b5c6e6e79f226"
            ]
        ]
    },
    {
        "id": "5e8988930f2d0897",
        "type": "ui_numeric",
        "z": "0ac396398ba6bce7",
        "g": "94e86c2cb22bb290",
        "name": "",
        "label": "Min Age (seconds)",
        "tooltip": "",
        "group": "a0d4d504a3ac3a77",
        "order": 5,
        "width": 0,
        "height": 0,
        "wrap": false,
        "passthru": true,
        "topic": "topic",
        "topicType": "msg",
        "format": "{{value}}",
        "min": 0,
        "max": 10,
        "step": "0.5",
        "className": "",
        "x": 630,
        "y": 1080,
        "wires": [
            [
                "0005fc39e141213a"
            ]
        ]
    },
    {
        "id": "84fa3e1114958d32",
        "type": "ui_numeric",
        "z": "0ac396398ba6bce7",
        "g": "94e86c2cb22bb290",
        "name": "",
        "label": "Min Distance (% of view)",
        "tooltip": "",
        "group": "a0d4d504a3ac3a77",
        "order": 6,
        "width": 0,
        "height": 0,
        "wrap": false,
        "passthru": true,
        "topic": "topic",
        "topicType": "msg",
        "format": "{{value}}",
        "min": 0,
        "max": "100",
        "step": "10",
        "className": "",
        "x": 650,
        "y": 1120,
        "wires": [
            [
                "2ce55bbb3a991498"
            ]
        ]
    },
    {
        "id": "0005fc39e141213a",
        "type": "change",
        "z": "0ac396398ba6bce7",
        "g": "94e86c2cb22bb290",
        "name": "",
        "rules": [
            {
                "t": "set",
                "p": "age",
                "pt": "flow",
                "to": "payload",
                "tot": "msg"
            }
        ],
        "action": "",
        "property": "",
        "from": "",
        "to": "",
        "reg": false,
        "x": 870,
        "y": 1080,
        "wires": [
            []
        ]
    },
    {
        "id": "2ce55bbb3a991498",
        "type": "change",
        "z": "0ac396398ba6bce7",
        "g": "94e86c2cb22bb290",
        "name": "",
        "rules": [
            {
                "t": "set",
                "p": "distance",
                "pt": "flow",
                "to": "payload",
                "tot": "msg"
            }
        ],
        "action": "",
        "property": "",
        "from": "",
        "to": "",
        "reg": false,
        "x": 890,
        "y": 1120,
        "wires": [
            []
        ]
    },
    {
        "id": "8994f7e02f1ccd70",
        "type": "change",
        "z": "0ac396398ba6bce7",
        "g": "94e86c2cb22bb290",
        "name": "flow.age",
        "rules": [
            {
                "t": "set",
                "p": "payload",
                "pt": "msg",
                "to": "age",
                "tot": "flow"
            }
        ],
        "action": "",
        "property": "",
        "from": "",
        "to": "",
        "reg": false,
        "x": 420,
        "y": 1080,
        "wires": [
            [
                "5e8988930f2d0897"
            ]
        ]
    },
    {
        "id": "24218be0b91b9734",
        "type": "change",
        "z": "0ac396398ba6bce7",
        "g": "94e86c2cb22bb290",
        "name": "flow.distance",
        "rules": [
            {
                "t": "set",
                "p": "payload",
                "pt": "msg",
                "to": "distance",
                "tot": "flow"
            }
        ],
        "action": "",
        "property": "",
        "from": "",
        "to": "",
        "reg": false,
        "x": 430,
        "y": 1120,
        "wires": [
            [
                "84fa3e1114958d32"
            ]
        ]
    },
    {
        "id": "20a516b4c7d9438f",
        "type": "ui_dropdown",
        "z": "0ac396398ba6bce7",
        "g": "94e86c2cb22bb290",
        "name": "",
        "label": "Classes",
        "tooltip": "",
        "place": "Select detection",
        "group": "a0d4d504a3ac3a77",
        "order": 4,
        "width": 0,
        "height": 0,
        "passthru": true,
        "multiple": true,
        "options": [
            {
                "label": "Human",
                "value": "Human",
                "type": "str"
            },
            {
                "label": "Face",
                "value": "Face",
                "type": "str"
            },
            {
                "label": "Head",
                "value": "Head",
                "type": "str"
            },
            {
                "label": "Bag",
                "value": "Bag",
                "type": "str"
            },
            {
                "label": "Car",
                "value": "Car",
                "type": "str"
            },
            {
                "label": "Truck",
                "value": "Truck",
                "type": "str"
            },
            {
                "label": "Bus",
                "value": "Bus",
                "type": "str"
            },
            {
                "label": "Bike",
                "value": "Bike",
                "type": "str"
            },
            {
                "label": "Vehicle",
                "value": "Vehicle",
                "type": "str"
            },
            {
                "label": "License plate",
                "value": "License plate",
                "type": "str"
            }
        ],
        "payload": "",
        "topic": "topic",
        "topicType": "msg",
        "className": "",
        "x": 600,
        "y": 1000,
        "wires": [
            [
                "f8486ffd59974cd0"
            ]
        ]
    },
    {
        "id": "f8486ffd59974cd0",
        "type": "change",
        "z": "0ac396398ba6bce7",
        "g": "94e86c2cb22bb290",
        "name": "",
        "rules": [
            {
                "t": "set",
                "p": "classes",
                "pt": "flow",
                "to": "payload",
                "tot": "msg",
                "dc": true
            }
        ],
        "action": "",
        "property": "",
        "from": "",
        "to": "",
        "reg": false,
        "x": 880,
        "y": 1000,
        "wires": [
            []
        ]
    },
    {
        "id": "73a704c70c735d00",
        "type": "function",
        "z": "0ac396398ba6bce7",
        "g": "94e86c2cb22bb290",
        "name": "Classes",
        "func": "if( !flow.get(\"classes\") ) {\n    msg.payload = [ \"Human\", \"Car\" ];\n} else {\n    msg.payload = flow.get(\"classes\");\n}\n\nreturn msg;",
        "outputs": 1,
        "timeout": 0,
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "libs": [],
        "x": 420,
        "y": 1000,
        "wires": [
            [
                "20a516b4c7d9438f"
            ]
        ]
    },
    {
        "id": "cf06b19f59f2bbfd",
        "type": "function",
        "z": "0ac396398ba6bce7",
        "g": "94e86c2cb22bb290",
        "name": "flow.camera",
        "func": "msg.payload = flow.get(\"camera\") || {\n    aspect: \"16:9\",\n    rotation: \"Landscape\",\n    image: \"\"\n}    \nflow.set(\"camera\",msg.payload);\n\nreturn msg;\n",
        "outputs": 1,
        "timeout": 0,
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "libs": [],
        "x": 570,
        "y": 840,
        "wires": [
            [
                "635add4c3e683940",
                "c6e35cb7c8055810"
            ]
        ]
    },
    {
        "id": "15b2061fc694f812",
        "type": "ui_dropdown",
        "z": "0ac396398ba6bce7",
        "g": "94e86c2cb22bb290",
        "name": "Aspect",
        "label": "Aspect",
        "tooltip": "",
        "place": "Select aspect",
        "group": "6c8313788511e2cf",
        "order": 7,
        "width": "3",
        "height": "1",
        "passthru": true,
        "multiple": false,
        "options": [
            {
                "label": "16:9",
                "value": "16:9",
                "type": "str"
            },
            {
                "label": "4:3",
                "value": "4:3",
                "type": "str"
            },
            {
                "label": "1:1",
                "value": "1:1",
                "type": "str"
            }
        ],
        "payload": "",
        "topic": "aspect",
        "topicType": "str",
        "className": "",
        "x": 960,
        "y": 840,
        "wires": [
            [
                "984dc6f1c0ec8afd"
            ]
        ]
    },
    {
        "id": "635add4c3e683940",
        "type": "change",
        "z": "0ac396398ba6bce7",
        "g": "94e86c2cb22bb290",
        "name": "",
        "rules": [
            {
                "t": "set",
                "p": "payload",
                "pt": "msg",
                "to": "payload.aspect",
                "tot": "msg"
            }
        ],
        "action": "",
        "property": "",
        "from": "",
        "to": "",
        "reg": false,
        "x": 770,
        "y": 840,
        "wires": [
            [
                "15b2061fc694f812"
            ]
        ]
    },
    {
        "id": "27bd49271d139fee",
        "type": "ui_dropdown",
        "z": "0ac396398ba6bce7",
        "g": "94e86c2cb22bb290",
        "name": "Rotation",
        "label": "Rotation",
        "tooltip": "",
        "place": "Select rotation",
        "group": "6c8313788511e2cf",
        "order": 8,
        "width": "4",
        "height": "1",
        "passthru": true,
        "multiple": false,
        "options": [
            {
                "label": "Landscape",
                "value": "Landscape",
                "type": "str"
            },
            {
                "label": "Portrait",
                "value": "Portrait",
                "type": "str"
            }
        ],
        "payload": "",
        "topic": "rotation",
        "topicType": "str",
        "className": "",
        "x": 960,
        "y": 880,
        "wires": [
            [
                "38c5a852b5640e80"
            ]
        ]
    },
    {
        "id": "c6e35cb7c8055810",
        "type": "change",
        "z": "0ac396398ba6bce7",
        "g": "94e86c2cb22bb290",
        "name": "",
        "rules": [
            {
                "t": "set",
                "p": "payload",
                "pt": "msg",
                "to": "payload.rotation",
                "tot": "msg"
            }
        ],
        "action": "",
        "property": "",
        "from": "",
        "to": "",
        "reg": false,
        "x": 770,
        "y": 880,
        "wires": [
            [
                "27bd49271d139fee"
            ]
        ]
    },
    {
        "id": "8f01b96663574f2b",
        "type": "function",
        "z": "0ac396398ba6bce7",
        "g": "94e86c2cb22bb290",
        "name": "Confidence",
        "func": "msg.payload = flow.get(\"confidence\") || 10;\nreturn msg;",
        "outputs": 1,
        "timeout": 0,
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "libs": [],
        "x": 430,
        "y": 1040,
        "wires": [
            [
                "1090cd4187cf762d"
            ]
        ]
    },
    {
        "id": "1090cd4187cf762d",
        "type": "ui_dropdown",
        "z": "0ac396398ba6bce7",
        "g": "94e86c2cb22bb290",
        "name": "",
        "label": "Min confidence",
        "tooltip": "",
        "place": "Select detection",
        "group": "a0d4d504a3ac3a77",
        "order": 7,
        "width": 0,
        "height": 0,
        "passthru": false,
        "multiple": false,
        "options": [
            {
                "label": "10",
                "value": 10,
                "type": "num"
            },
            {
                "label": "20",
                "value": 20,
                "type": "num"
            },
            {
                "label": "30",
                "value": 30,
                "type": "num"
            },
            {
                "label": "40",
                "value": 40,
                "type": "num"
            },
            {
                "label": "50",
                "value": 50,
                "type": "num"
            },
            {
                "label": "60",
                "value": 60,
                "type": "num"
            },
            {
                "label": "70",
                "value": 70,
                "type": "num"
            },
            {
                "label": "80",
                "value": 80,
                "type": "num"
            },
            {
                "label": "90",
                "value": 90,
                "type": "num"
            }
        ],
        "payload": "",
        "topic": "topic",
        "topicType": "msg",
        "className": "",
        "x": 620,
        "y": 1040,
        "wires": [
            [
                "f9dd4fa130744384"
            ]
        ]
    },
    {
        "id": "f9dd4fa130744384",
        "type": "change",
        "z": "0ac396398ba6bce7",
        "g": "94e86c2cb22bb290",
        "name": "",
        "rules": [
            {
                "t": "set",
                "p": "confidence",
                "pt": "flow",
                "to": "payload",
                "tot": "msg",
                "dc": true
            }
        ],
        "action": "",
        "property": "",
        "from": "",
        "to": "",
        "reg": false,
        "x": 890,
        "y": 1040,
        "wires": [
            []
        ]
    },
    {
        "id": "e9928706275f3e2b",
        "type": "ui_template",
        "z": "0ac396398ba6bce7",
        "g": "94e86c2cb22bb290",
        "group": "6c8313788511e2cf",
        "name": "Visulize",
        "order": 3,
        "width": "16",
        "height": "16",
        "format": "<link rel=\"stylesheet\" href=\"/css/imgareaselect-default.css\">\n<script src=\"/js/jquery.imgareaselect.js\"></script>\n<script src=\"/js/media-stream-player.min.js\"></script>\n\n<div id=\"{{'view_'+$id}}\" style=\"width:800px; height:450px;\">\n  <div style=\"width:100%; height:100%; position:relative\">\n    <img id=\"{{'image_'+$id}}\" src=\"\" style=\"width:100%; height:100%; position:absolute; top:0px; left:0px;\">\n    <div id=\"{{'video_'+$id}}\" style=\"width:100%; height:100%; position:absolute; top:0px; left:0px;\"></div>\n    <canvas id=\"{{'canvas_'+$id}}\" width=\"1000\" height=\"1000\" style=\"width:100%; height:100%; position:absolute; top:0px; left:0px;\"></canvas>\n  </div>\n</div>\n\n\n<script>\n  var ctx = null;\nvar imageWidth = 800;\nvar imageHeight = 450;\nvar strength = 0.5;\nvar pathList = [];\nvar selectArea = null;\nvar aoi = null;\n\nfunction ClearCanvas() {\n    if(ctx) {\n        ctx.beginPath();\n        ctx.clearRect(0, 0, 1000, 1000 );\n        ctx.stroke();\n    }\n}\n\n\nfunction setupVideo( scope, data ) {\n    var rotation = data.rotation;\n    var aspect = data.aspect;\n\n    if(aspect === \"1:1\") {\n        imageHeight = 800;\n        videoWidth = 800;\n        videoHeight = 800;\n    }\n\n    if(aspect === \"4:3\") {\n        imageHeight = 600;\n        videoWidth = 800;\n        videoHeight = 600;\n    }\n\n    $(\"#video_\"+scope.$id).empty();\n    var player = '<media-stream-player hostname=\"'+window.location.hostname+'\" format=\"RTP_H264\" compression=\"40\" audio=\"0\" resolution=\"'+videoWidth+'x'+videoHeight+'\" variant=\"basic\" autoplay></media-stream-player>';\n    $(\"#video_\"+scope.$id).append(player);\n}\n\nfunction setupImage( scope, data ) {\n    var rotation = data.rotation || 0;\n    var aspect = data.aspect || \"16:9\";\n    imageWidth = 800;  //Default for 16:9\n    imageHeight = 450;\n\n    if(aspect === \"1:1\")\n        imageHeight = 800;\n\n    if(aspect === \"4:3\")\n        imageHeight = 600;\n\n    //Setup aspect ration\n    if(rotation === \"Portrait\" ) {\n        var temp = imageWidth;\n        imageWidth = imageHeight;\n        imageHeight = temp;\n    }\n\n    $(\"#view_\"+scope.$id).css(\"width\", imageWidth + \"px\");\n    $(\"#view_\"+scope.$id).css(\"height\", imageHeight+\"px\");\n\n    if( data.hasOwnProperty(\"image\") && data.image )\n        $(\"#image_\"+scope.$id).attr(\"src\",\"data:image/jpeg;base64,\" + data.image);\n    else\n        $(\"#image_\"+scope.$id).attr(\"src\",\"data:image/jpeg;base64, \");\n        \n    var canvas = document.getElementById(\"canvas_\"+scope.$id);\n    ctx = canvas.getContext(\"2d\");\n}\n\nfunction drawDetections( detections ) {\n    if(!ctx)\n        return;\n    ClearCanvas();\n\n    ctx.beginPath();\n    ctx.lineWidth = 3;\n    ctx.font = \"30px Arial\";\n    ctx.fillStyle = '#FFFF00';\n    ctx.strokeStyle = '#FFFF00';\n    detections.forEach( function(detection){\n        if( detection.hasOwnProperty(\"bx\")) {\n            ctx.moveTo(detection.bx,detection.by);\n            ctx.lineTo(detection.cx,detection.cy);\n        }\n        ctx.rect(detection.x, detection.y,detection.w,detection.h );\n        var text = detection.class || \"Undefined\";\n        if( detection.hasOwnProperty(\"confidence\"))\n            text += \" \" + detection.confidence;\n        if( detection.hasOwnProperty(\"age\") )\n            text += \" \" + detection.age + \"s\";\n        ctx.fillText(text, detection.x, detection.y-10 );\n    });\n    ctx.stroke();\n}\n\n(function(scope) {\n    scope.$watch('msg', function(msg) {\n        if( !msg || !msg.topic  )\n            return;\n        console.log(msg.topic);\n\n        switch( msg.topic ) {\n        case \"image\":\n            ClearCanvas();\n            setupImage(scope,msg.payload);\n            setupVideo(scope,msg.payload);\n            if( selectArea ) {\n                selectArea.setOptions({hide: true});\n                selectArea = null;\n            }\n            break;\n\n        case \"path\":\n            drawPath( msg.payload );\n            break;\n\n        case \"path\":\n            drawPath( msg.payload );\n            break;\n\n        case \"detections\":\n            drawDetections( msg.payload );\n        break;\n\n        case \"singlePath\":\n            ClearCanvas();\n            drawPath( msg.payload );\n            break;\n\n        case \"paths\":\n            ClearCanvas();\n            pathList = msg.payload;\n            msg.payload.forEach(function(path){\n                drawPath( path );\n            });\n            break;\n\n        case \"strength\":\n            ClearCanvas();\n            strength = (parseInt(msg.payload) / 100.0 ) * 0.5;\n            pathList.forEach( function(path) {\n                drawPath( path );\n            });\n            break;\n\n        case \"reset\":\n            ClearCanvas();\n            break;\n\n        case \"aoi\":\n            if( selectArea ) {\n                selectArea.setOptions({hide: true});\n                selectArea = null;\n            }\n            if( typeof msg.payload !== \"object\" )\n                return;\n            aoi = msg.payload.id || \"None\";\n            selectArea = $(\"#view_\"+scope.$id).imgAreaSelect({\n                x1: parseInt((msg.payload.x1 / 1000) * imageWidth),\n                y1: parseInt((msg.payload.y1 / 1000) * imageHeight),\n                x2: parseInt((msg.payload.x2 / 1000) * imageWidth),\n                y2: parseInt((msg.payload.y2 / 1000) * imageHeight),\n                minHeight: 20,\n                minWidth: 20,\n                handles: true,\n                enable:true,movable:true,resizable:true,show:true,\n                instance: true,\n                onSelectEnd: function( image, area ) {\n                var box = {\n                    id: aoi,\n                    x1: parseInt((area.x1 / imageWidth) * 1000),\n                    x2: parseInt((area.x2 / imageWidth) * 1000),\n                    y1: parseInt((area.y1 / imageHeight) * 1000),\n                    y2: parseInt((area.y2 / imageHeight) * 1000)\n                }\n                scope.send({topic:aoi||\"none\",payload:box});\n                }\n            });\n            selectArea.setOptions({show: true});\n            break;\n            case \"birth\":\n            case \"death\":\n                aoi = msg.payload.id || \"None\";\n                if(!selectArea) {\n                    selectArea = $(\"#image_\"+scope.$id).imgAreaSelect( {\n                        x1: parseInt(msg.payload.x1 / 1000 * imageWidth),\n                        x2: parseInt(msg.payload.x2 / 1000 * imageWidth),\n                        y1: parseInt(msg.payload.y1 / 1000 * imageHeight),\n                        y2: parseInt(msg.payload.y2 / 1000 * imageHeight),\n                        show: true, hide:false, minHeight: 5, minWidth: 5, handles: true, movable: true, resizable: true, instance:true,\n                        onSelectEnd: function( image, area ) {\n                            var area = {\n                                id: aoi,\n                                x1: parseInt((area.x1/imageWidth) * 1000),\n                                x2: parseInt((area.x2/imageWidth) * 1000),\n                                y1: parseInt((area.y1/imageHeight) * 1000),\n                                y2: parseInt((area.y2/imageHeight) * 1000)\n                            }\n                            scope.send({\n                                topic: aoi,\n                                payload: area\n                            });\n                        }\n                    });\n                }\n                selectArea.setSelection(\n                    parseInt(msg.payload.x1 / 1000 * imageWidth),\n                    parseInt(msg.payload.y1 / 1000 * imageHeight),\n                    parseInt(msg.payload.x2 / 1000 * imageWidth),\n                    parseInt(msg.payload.y2 / 1000 * imageHeight)\n                );\n                selectArea.setOptions({ show: true });\n            break;\n\t\t}\n    });\n})(scope);\n</script>",
        "storeOutMessages": false,
        "fwdInMessages": false,
        "resendOnRefresh": false,
        "templateScope": "local",
        "className": "",
        "x": 420,
        "y": 1200,
        "wires": [
            [
                "19f3feaefe9eadb8"
            ]
        ]
    },
    {
        "id": "d57b9c54e00269ed",
        "type": "ui_button",
        "z": "0ac396398ba6bce7",
        "g": "94e86c2cb22bb290",
        "name": "",
        "group": "a0d4d504a3ac3a77",
        "order": 3,
        "width": 0,
        "height": 0,
        "passthru": false,
        "label": "Detection Area",
        "tooltip": "",
        "color": "",
        "bgcolor": "",
        "className": "",
        "icon": "",
        "payload": "",
        "payloadType": "str",
        "topic": "topic",
        "topicType": "msg",
        "x": 450,
        "y": 1240,
        "wires": [
            [
                "d8de1951951fd651"
            ]
        ]
    },
    {
        "id": "d8de1951951fd651",
        "type": "function",
        "z": "0ac396398ba6bce7",
        "g": "94e86c2cb22bb290",
        "name": "aoi",
        "func": "msg.topic = \"aoi\";\nmsg.payload = flow.get(\"aoi\") || {\n    id: \"aoi\",\n    x1: 200,\n    y1: 200,\n    x2: 800,\n    y2: 800\n}\n\nreturn msg;",
        "outputs": 1,
        "timeout": 0,
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "libs": [],
        "x": 620,
        "y": 1240,
        "wires": [
            [
                "58c641038c28db4d"
            ]
        ]
    },
    {
        "id": "cae2caf9a0a901d5",
        "type": "ui_button",
        "z": "0ac396398ba6bce7",
        "g": "94e86c2cb22bb290",
        "name": "",
        "group": "a0d4d504a3ac3a77",
        "order": 8,
        "width": 0,
        "height": 0,
        "passthru": false,
        "label": "Save",
        "tooltip": "",
        "color": "",
        "bgcolor": "green",
        "className": "",
        "icon": "",
        "payload": "false",
        "payloadType": "bool",
        "topic": "aoi",
        "topicType": "str",
        "x": 420,
        "y": 1280,
        "wires": [
            [
                "58c641038c28db4d"
            ]
        ]
    },
    {
        "id": "19f3feaefe9eadb8",
        "type": "change",
        "z": "0ac396398ba6bce7",
        "g": "94e86c2cb22bb290",
        "name": "",
        "rules": [
            {
                "t": "set",
                "p": "aoi",
                "pt": "flow",
                "to": "payload",
                "tot": "msg"
            }
        ],
        "action": "",
        "property": "",
        "from": "",
        "to": "",
        "reg": false,
        "x": 590,
        "y": 1200,
        "wires": [
            []
        ]
    },
    {
        "id": "a484c050c055dc86",
        "type": "ui_button",
        "z": "0ac396398ba6bce7",
        "g": "94e86c2cb22bb290",
        "name": "",
        "group": "6c8313788511e2cf",
        "order": 1,
        "width": "3",
        "height": "1",
        "passthru": true,
        "label": "Play",
        "tooltip": "",
        "color": "",
        "bgcolor": "",
        "className": "",
        "icon": "",
        "payload": "",
        "payloadType": "str",
        "topic": "topic",
        "topicType": "msg",
        "x": 380,
        "y": 1360,
        "wires": [
            [
                "b95e554b09f19e87"
            ]
        ]
    },
    {
        "id": "27fef1dac85c0e25",
        "type": "function",
        "z": "0ac396398ba6bce7",
        "g": "94e86c2cb22bb290",
        "name": "Update",
        "func": "msg.query = {\n    device: flow.get(\"device\").serial || \"Undefined\"\n}\n\nmsg.payload = {\n    device: flow.get(\"device\").serial || \"Undefined\",\n    name: flow.get(\"name\") || flow.get(\"device\").hostname || flow.get(\"device\").name,\n    timestamp: new Date().getTime(),\n    rotation: msg.payload.rotation,\n    aspect: msg.payload.aspect,\n    image: msg.payload.image\n}\n\nmsg.topic = \"image/\" + flow.get(\"device\").serial || \"Undefined\";\n\n\nreturn msg;",
        "outputs": 1,
        "timeout": 0,
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "libs": [],
        "x": 1110,
        "y": 1360,
        "wires": [
            []
        ]
    },
    {
        "id": "b95e554b09f19e87",
        "type": "function",
        "z": "0ac396398ba6bce7",
        "g": "94e86c2cb22bb290",
        "name": "Resolution",
        "func": "var camera = flow.get(\"camera\");\nif(!camera)\n    return;\n\nswitch( camera.aspect ) {\n    case \"4:3\":\n        msg.resolution = \"800x600\"\n        break;\n    case \"1:1\":\n        msg.resolution = \"800x800\"\n        break;\n    case \"16:9\":\n    default:\n        msg.resolution = \"1280x720\"\n}\n\nreturn msg;",
        "outputs": 1,
        "timeout": 0,
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "libs": [],
        "x": 550,
        "y": 1360,
        "wires": [
            [
                "4981e3ae4fe7dcb4"
            ]
        ]
    },
    {
        "id": "01b820fbca0716c0",
        "type": "inject",
        "z": "0ac396398ba6bce7",
        "name": "",
        "props": [
            {
                "p": "payload"
            },
            {
                "p": "topic",
                "vt": "str"
            }
        ],
        "repeat": "",
        "crontab": "",
        "once": true,
        "onceDelay": "0.5",
        "topic": "",
        "payload": "",
        "payloadType": "date",
        "x": 130,
        "y": 860,
        "wires": [
            [
                "b3731c029ac366d6"
            ]
        ]
    },
    {
        "id": "60032f6ab17d898a",
        "type": "Objects",
        "z": "0ac396398ba6bce7",
        "g": "cab3b38bad09e5c1",
        "version": "2",
        "output": "1",
        "classFilter": "-1",
        "confidence": "10",
        "rotation": "0",
        "cog": "0",
        "predictions": "0",
        "attributes": "50",
        "idle": "60",
        "x": 380,
        "y": 340,
        "wires": [
            [
                "ca114ec07cb8c14a"
            ]
        ]
    },
    {
        "id": "ca114ec07cb8c14a",
        "type": "function",
        "z": "0ac396398ba6bce7",
        "g": "cab3b38bad09e5c1",
        "name": "Detection Filter",
        "func": "msg.topic = \"detections\";\nvar distance = flow.get(\"distance\") || 0;\nvar confidence = flow.get(\"confidence\") || 10;\nvar age = flow.get(\"age\") || 0;\nvar classes = flow.get(\"classes\");\nvar aoi = flow.get(\"aoi\") || null;\nvar list = [];\n\nmsg.payload.forEach( function(item){\n    if (msg.payload.confidnece < confidence)\n        return;\n    if( item.age < 0)\n        return;\n    var dx = (item.cx - item.bx);\n    dx = dx * dx;\n    var dy = (item.cy - item.by);\n    dy = dy * dy;\n    item.distance = parseInt(Math.sqrt(dx+dy)/10);\n    if( item.distance < distance )\n        return;\n\n    var ignoreClass = true;\n    classes.forEach(function (element) {\n        if (element === item.class)\n            ignoreClass = false;\n    });\n    if (ignoreClass)\n        return;\n\n    if (aoi) {\n        if( item.cx < aoi.x1 )\n            return;\n        if (item.cx > aoi.x2)\n            return;\n        if (item.cy < aoi.y1)\n            return;\n        if (item.cy > aoi.y2)\n            return;\n    }\n    list.push(item);\n});\n\nif( list.length === 0 )\n    return 0;\nmsg.payload = list;\nnode.send(msg);\n\n\n",
        "outputs": 1,
        "timeout": 0,
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "libs": [],
        "x": 640,
        "y": 340,
        "wires": [
            [
                "251353d825ba4f57",
                "21fa83f8bda58ea8"
            ]
        ]
    },
    {
        "id": "251353d825ba4f57",
        "type": "link out",
        "z": "0ac396398ba6bce7",
        "name": "link out 14",
        "mode": "link",
        "links": [
            "8b6ee79f897cc28a",
            "5bdd7e0928396937"
        ],
        "x": 1105,
        "y": 340,
        "wires": []
    },
    {
        "id": "95ef875df544f0a7",
        "type": "function",
        "z": "0ac396398ba6bce7",
        "g": "94e86c2cb22bb290",
        "name": "Image",
        "func": "msg.topic = \"image\";\n\nmsg.payload = {\n    aspect: flow.get(\"aspect\") || \"16:9\",\n    rotation: flow.get(\"rotation\") || \"Landscape\",\n    image: msg.payload\n}\n\nreturn msg;",
        "outputs": 1,
        "timeout": 0,
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "libs": [],
        "x": 900,
        "y": 1360,
        "wires": [
            [
                "27fef1dac85c0e25",
                "58c641038c28db4d"
            ]
        ]
    },
    {
        "id": "4981e3ae4fe7dcb4",
        "type": "Camera",
        "z": "0ac396398ba6bce7",
        "g": "94e86c2cb22bb290",
        "resolution": "1280x720",
        "overlay": "yes",
        "channel": "1",
        "output": "buffer",
        "x": 740,
        "y": 1360,
        "wires": [
            [
                "95ef875df544f0a7"
            ]
        ]
    },
    {
        "id": "9aecaea1a1f8937e",
        "type": "change",
        "z": "0ac396398ba6bce7",
        "g": "94e86c2cb22bb290",
        "name": "Recording",
        "rules": [
            {
                "t": "set",
                "p": "topic",
                "pt": "msg",
                "to": "recording",
                "tot": "str"
            },
            {
                "t": "set",
                "p": "payload",
                "pt": "msg",
                "to": "true",
                "tot": "bool"
            }
        ],
        "action": "",
        "property": "",
        "from": "",
        "to": "",
        "reg": false,
        "x": 350,
        "y": 1440,
        "wires": [
            [
                "884cd560a24961d5"
            ]
        ]
    },
    {
        "id": "87e2476aac5b636d",
        "type": "change",
        "z": "0ac396398ba6bce7",
        "g": "94e86c2cb22bb290",
        "name": "Not Recording",
        "rules": [
            {
                "t": "set",
                "p": "topic",
                "pt": "msg",
                "to": "recording",
                "tot": "str"
            },
            {
                "t": "set",
                "p": "payload",
                "pt": "msg",
                "to": "false",
                "tot": "bool"
            }
        ],
        "action": "",
        "property": "",
        "from": "",
        "to": "",
        "reg": false,
        "x": 360,
        "y": 1480,
        "wires": [
            [
                "884cd560a24961d5"
            ]
        ]
    },
    {
        "id": "b08614c7fd97b349",
        "type": "function",
        "z": "0ac396398ba6bce7",
        "g": "94e86c2cb22bb290",
        "name": "Method",
        "func": "msg.payload = flow.get(\"method\") || \"None\";\nreturn msg;",
        "outputs": 1,
        "timeout": 0,
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "libs": [],
        "x": 420,
        "y": 920,
        "wires": [
            [
                "21caf6692ea46fad"
            ]
        ]
    },
    {
        "id": "21caf6692ea46fad",
        "type": "ui_dropdown",
        "z": "0ac396398ba6bce7",
        "g": "94e86c2cb22bb290",
        "name": "Method",
        "label": "Method",
        "tooltip": "",
        "place": "Select detection",
        "group": "a0d4d504a3ac3a77",
        "order": 1,
        "width": 0,
        "height": 0,
        "passthru": true,
        "multiple": false,
        "options": [
            {
                "label": "No Recording",
                "value": "None",
                "type": "str"
            },
            {
                "label": "FMR",
                "value": "FMR",
                "type": "str"
            },
            {
                "label": "SD Card",
                "value": "SD",
                "type": "str"
            },
            {
                "label": "ACS",
                "value": "ACS",
                "type": "str"
            },
            {
                "label": "",
                "value": "",
                "type": "str"
            }
        ],
        "payload": "",
        "topic": "topic",
        "topicType": "msg",
        "className": "",
        "x": 600,
        "y": 920,
        "wires": [
            [
                "e1c0246be468a819"
            ]
        ]
    },
    {
        "id": "e1c0246be468a819",
        "type": "change",
        "z": "0ac396398ba6bce7",
        "g": "94e86c2cb22bb290",
        "name": "",
        "rules": [
            {
                "t": "set",
                "p": "method",
                "pt": "flow",
                "to": "payload",
                "tot": "msg",
                "dc": true
            }
        ],
        "action": "",
        "property": "",
        "from": "",
        "to": "",
        "reg": false,
        "x": 880,
        "y": 920,
        "wires": [
            []
        ]
    },
    {
        "id": "e624b6b1f65b3511",
        "type": "change",
        "z": "0ac396398ba6bce7",
        "g": "94e86c2cb22bb290",
        "name": "flow.bufferTime",
        "rules": [
            {
                "t": "set",
                "p": "payload",
                "pt": "msg",
                "to": "buffer",
                "tot": "flow"
            }
        ],
        "action": "",
        "property": "",
        "from": "",
        "to": "",
        "reg": false,
        "x": 440,
        "y": 960,
        "wires": [
            [
                "d68362bcc9fc2d98"
            ]
        ]
    },
    {
        "id": "d68362bcc9fc2d98",
        "type": "ui_numeric",
        "z": "0ac396398ba6bce7",
        "g": "94e86c2cb22bb290",
        "name": "",
        "label": "Pre/Post buffer",
        "tooltip": "",
        "group": "a0d4d504a3ac3a77",
        "order": 2,
        "width": 0,
        "height": 0,
        "wrap": false,
        "passthru": true,
        "topic": "topic",
        "topicType": "msg",
        "format": "{{value}}",
        "min": "1",
        "max": "30",
        "step": 1,
        "className": "",
        "x": 620,
        "y": 960,
        "wires": [
            [
                "df5674f854741738"
            ]
        ]
    },
    {
        "id": "df5674f854741738",
        "type": "change",
        "z": "0ac396398ba6bce7",
        "g": "94e86c2cb22bb290",
        "name": "",
        "rules": [
            {
                "t": "set",
                "p": "bufferTime",
                "pt": "flow",
                "to": "payload",
                "tot": "msg",
                "dc": true
            }
        ],
        "action": "",
        "property": "",
        "from": "",
        "to": "",
        "reg": false,
        "x": 890,
        "y": 960,
        "wires": [
            [
                "6215598a59ed3862"
            ]
        ]
    },
    {
        "id": "ee659b6e8f153493",
        "type": "link out",
        "z": "0ac396398ba6bce7",
        "name": "Start recording",
        "mode": "link",
        "links": [
            "316663ced90f4543",
            "867ab01d1ef2c852",
            "eaa5444880cf4e18"
        ],
        "x": 1105,
        "y": 380,
        "wires": []
    },
    {
        "id": "316663ced90f4543",
        "type": "link in",
        "z": "0ac396398ba6bce7",
        "name": "link in 11",
        "links": [
            "ee659b6e8f153493"
        ],
        "x": 215,
        "y": 1440,
        "wires": [
            [
                "9aecaea1a1f8937e"
            ]
        ]
    },
    {
        "id": "06fbaef0b56055cd",
        "type": "link out",
        "z": "0ac396398ba6bce7",
        "name": "Stop Recording",
        "mode": "link",
        "links": [
            "d2da8e7758d00ef3",
            "36cde1b5389145a9",
            "b9d1e11f0e364ade"
        ],
        "x": 1105,
        "y": 420,
        "wires": []
    },
    {
        "id": "d2da8e7758d00ef3",
        "type": "link in",
        "z": "0ac396398ba6bce7",
        "name": "link in 12",
        "links": [
            "06fbaef0b56055cd"
        ],
        "x": 215,
        "y": 1480,
        "wires": [
            [
                "87e2476aac5b636d"
            ]
        ]
    },
    {
        "id": "867ab01d1ef2c852",
        "type": "link in",
        "z": "0ac396398ba6bce7",
        "name": "link in 13",
        "links": [
            "ee659b6e8f153493"
        ],
        "x": 215,
        "y": 540,
        "wires": [
            [
                "3d9184a6ebecf7e5"
            ]
        ]
    },
    {
        "id": "a9a496d1ed865641",
        "type": "comment",
        "z": "0ac396398ba6bce7",
        "name": "LED On",
        "info": "",
        "x": 140,
        "y": 1440,
        "wires": []
    },
    {
        "id": "69bc5be0bcbbf08f",
        "type": "comment",
        "z": "0ac396398ba6bce7",
        "name": "LED Off",
        "info": "",
        "x": 150,
        "y": 1480,
        "wires": []
    },
    {
        "id": "36cde1b5389145a9",
        "type": "link in",
        "z": "0ac396398ba6bce7",
        "name": "link in 14",
        "links": [
            "06fbaef0b56055cd"
        ],
        "x": 215,
        "y": 580,
        "wires": [
            [
                "1f9d25517145abb4"
            ]
        ]
    },
    {
        "id": "351fa805ddaaf7b9",
        "type": "switch",
        "z": "0ac396398ba6bce7",
        "g": "34c7a1519ba616fa",
        "name": "FMR",
        "property": "method",
        "propertyType": "flow",
        "rules": [
            {
                "t": "eq",
                "v": "FMR",
                "vt": "str"
            }
        ],
        "checkall": "true",
        "repair": false,
        "outputs": 1,
        "x": 400,
        "y": 540,
        "wires": [
            [
                "b1111b2652e96bf6"
            ]
        ]
    },
    {
        "id": "2a4ece199118360b",
        "type": "switch",
        "z": "0ac396398ba6bce7",
        "g": "34c7a1519ba616fa",
        "name": "FMR",
        "property": "method",
        "propertyType": "flow",
        "rules": [
            {
                "t": "eq",
                "v": "FMR",
                "vt": "str"
            }
        ],
        "checkall": "true",
        "repair": false,
        "outputs": 1,
        "x": 400,
        "y": 580,
        "wires": [
            [
                "fe882694ee49fa50"
            ]
        ]
    },
    {
        "id": "21fa83f8bda58ea8",
        "type": "switch",
        "z": "0ac396398ba6bce7",
        "g": "cab3b38bad09e5c1",
        "name": "Method",
        "property": "method",
        "propertyType": "flow",
        "rules": [
            {
                "t": "neq",
                "v": "None",
                "vt": "str"
            }
        ],
        "checkall": "true",
        "repair": false,
        "outputs": 1,
        "x": 800,
        "y": 380,
        "wires": [
            [
                "704656b901fe94ca"
            ]
        ]
    },
    {
        "id": "657cb7f51effc10b",
        "type": "comment",
        "z": "0ac396398ba6bce7",
        "name": "Detections",
        "info": "",
        "x": 1190,
        "y": 340,
        "wires": []
    },
    {
        "id": "299abf7be3c703f8",
        "type": "comment",
        "z": "0ac396398ba6bce7",
        "name": "Start recording",
        "info": "",
        "x": 1220,
        "y": 380,
        "wires": []
    },
    {
        "id": "57592a2fda062ab2",
        "type": "comment",
        "z": "0ac396398ba6bce7",
        "name": "Stop recording",
        "info": "",
        "x": 1220,
        "y": 420,
        "wires": []
    },
    {
        "id": "c60a7746d1e20d4b",
        "type": "comment",
        "z": "0ac396398ba6bce7",
        "name": "Start recording",
        "info": "",
        "x": 120,
        "y": 540,
        "wires": []
    },
    {
        "id": "16de8e0df713e926",
        "type": "comment",
        "z": "0ac396398ba6bce7",
        "name": "Stop recording",
        "info": "",
        "x": 120,
        "y": 580,
        "wires": []
    },
    {
        "id": "75a6ced3deb8e039",
        "type": "comment",
        "z": "0ac396398ba6bce7",
        "name": "Visualize",
        "info": "",
        "x": 140,
        "y": 1200,
        "wires": []
    },
    {
        "id": "0b396773fa358fb3",
        "type": "comment",
        "z": "0ac396398ba6bce7",
        "name": "Video",
        "info": "",
        "x": 150,
        "y": 1360,
        "wires": []
    },
    {
        "id": "1f0c73f6262ddfde",
        "type": "link out",
        "z": "0ac396398ba6bce7",
        "name": "AOI",
        "mode": "link",
        "links": [
            "8b6ee79f897cc28a"
        ],
        "x": 1315,
        "y": 1240,
        "wires": []
    },
    {
        "id": "6215598a59ed3862",
        "type": "debug",
        "z": "0ac396398ba6bce7",
        "name": "debug 159",
        "active": true,
        "tosidebar": true,
        "console": false,
        "tostatus": false,
        "complete": "false",
        "statusVal": "",
        "statusType": "auto",
        "x": 1390,
        "y": 960,
        "wires": []
    },
    {
        "id": "884cd560a24961d5",
        "type": "ui_led",
        "z": "0ac396398ba6bce7",
        "g": "94e86c2cb22bb290",
        "order": 2,
        "group": "6c8313788511e2cf",
        "width": "3",
        "height": "1",
        "label": "Recording",
        "labelPlacement": "left",
        "labelAlignment": "left",
        "colorForValue": [
            {
                "color": "#ff0000",
                "value": "true",
                "valueType": "bool"
            },
            {
                "color": "#c0c0c0",
                "value": "true",
                "valueType": "bool"
            }
        ],
        "allowColorForValueInMessage": false,
        "shape": "circle",
        "showGlow": true,
        "name": "",
        "x": 590,
        "y": 1480,
        "wires": []
    },
    {
        "id": "464dd830bc790782",
        "type": "inject",
        "z": "0ac396398ba6bce7",
        "g": "cab3b38bad09e5c1",
        "name": "Test",
        "props": [
            {
                "p": "payload"
            },
            {
                "p": "topic",
                "vt": "str"
            }
        ],
        "repeat": "",
        "crontab": "",
        "once": false,
        "onceDelay": 0.1,
        "topic": "",
        "payload": "",
        "payloadType": "date",
        "x": 810,
        "y": 420,
        "wires": [
            [
                "704656b901fe94ca"
            ]
        ]
    },
    {
        "id": "e1bcba3ded9a6277",
        "type": "switch",
        "z": "0ac396398ba6bce7",
        "g": "34c7a1519ba616fa",
        "name": "SD",
        "property": "method",
        "propertyType": "flow",
        "rules": [
            {
                "t": "eq",
                "v": "SD",
                "vt": "str"
            }
        ],
        "checkall": "true",
        "repair": false,
        "outputs": 1,
        "x": 400,
        "y": 620,
        "wires": [
            [
                "4e1d2678e05b623e"
            ]
        ]
    },
    {
        "id": "642e3e9c7513041b",
        "type": "switch",
        "z": "0ac396398ba6bce7",
        "g": "34c7a1519ba616fa",
        "name": "SD",
        "property": "method",
        "propertyType": "flow",
        "rules": [
            {
                "t": "eq",
                "v": "SD",
                "vt": "str"
            }
        ],
        "checkall": "true",
        "repair": false,
        "outputs": 1,
        "x": 400,
        "y": 660,
        "wires": [
            [
                "f48362a9c2a53573"
            ]
        ]
    },
    {
        "id": "4e1d2678e05b623e",
        "type": "change",
        "z": "0ac396398ba6bce7",
        "g": "34c7a1519ba616fa",
        "name": "true",
        "rules": [
            {
                "t": "set",
                "p": "payload",
                "pt": "msg",
                "to": "true",
                "tot": "bool"
            }
        ],
        "action": "",
        "property": "",
        "from": "",
        "to": "",
        "reg": false,
        "x": 540,
        "y": 620,
        "wires": [
            [
                "4cfe87d72802fe07",
                "e8cbb8e5fac0c7de"
            ]
        ]
    },
    {
        "id": "f48362a9c2a53573",
        "type": "change",
        "z": "0ac396398ba6bce7",
        "g": "34c7a1519ba616fa",
        "name": "false",
        "rules": [
            {
                "t": "set",
                "p": "payload",
                "pt": "msg",
                "to": "false",
                "tot": "bool"
            }
        ],
        "action": "",
        "property": "",
        "from": "",
        "to": "",
        "reg": false,
        "x": 540,
        "y": 660,
        "wires": [
            [
                "4cfe87d72802fe07",
                "d95a73b68424ddd0"
            ]
        ]
    },
    {
        "id": "4cfe87d72802fe07",
        "type": "Trigger",
        "z": "0ac396398ba6bce7",
        "g": "34c7a1519ba616fa",
        "eventId": "state",
        "value": "",
        "x": 790,
        "y": 620,
        "wires": []
    },
    {
        "id": "6219a8708b3566ee",
        "type": "mqtt out",
        "z": "0ac396398ba6bce7",
        "g": "2705dbcb080872fd",
        "name": "exception/Detection_Recording_Control/",
        "topic": "",
        "qos": "",
        "retain": "",
        "respTopic": "",
        "contentType": "",
        "userProps": "",
        "correl": "",
        "expiry": "",
        "broker": "d1d53d1e87be4083",
        "x": 860,
        "y": 220,
        "wires": []
    },
    {
        "id": "d3f0c9bc705d70a6",
        "type": "comment",
        "z": "0ac396398ba6bce7",
        "name": "Version 1.1.0",
        "info": "",
        "x": 330,
        "y": 40,
        "wires": []
    },
    {
        "id": "29f58521b2d53d65",
        "type": "inject",
        "z": "0ac396398ba6bce7",
        "g": "2705dbcb080872fd",
        "name": "",
        "props": [
            {
                "p": "payload"
            },
            {
                "p": "topic",
                "vt": "str"
            }
        ],
        "repeat": "",
        "crontab": "",
        "once": true,
        "onceDelay": 0.1,
        "topic": "",
        "payload": "",
        "payloadType": "date",
        "x": 370,
        "y": 140,
        "wires": [
            [
                "7f6e845b4438f9ea"
            ]
        ]
    },
    {
        "id": "7f6e845b4438f9ea",
        "type": "Axis device",
        "z": "0ac396398ba6bce7",
        "g": "2705dbcb080872fd",
        "name": "",
        "preset": "c561ea2fd0249c4c",
        "action": "Device Info",
        "cgi": "",
        "data": "",
        "options": "",
        "filename": "",
        "x": 590,
        "y": 140,
        "wires": [
            [
                "74c45ff921303e03"
            ]
        ]
    },
    {
        "id": "74c45ff921303e03",
        "type": "change",
        "z": "0ac396398ba6bce7",
        "g": "2705dbcb080872fd",
        "name": "",
        "rules": [
            {
                "t": "set",
                "p": "camera",
                "pt": "flow",
                "to": "payload",
                "tot": "msg"
            }
        ],
        "action": "",
        "property": "",
        "from": "",
        "to": "",
        "reg": false,
        "x": 790,
        "y": 140,
        "wires": [
            []
        ]
    },
    {
        "id": "868526529f2dd187",
        "type": "function",
        "z": "0ac396398ba6bce7",
        "g": "2705dbcb080872fd",
        "name": "Message",
        "func": "msg.topic = \"exception/Detection_Recording_Control/\" + flow.get(\"camere\").serial;\nmsg.payload = msg.error.message;\nreturn msg;",
        "outputs": 1,
        "timeout": 0,
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "libs": [],
        "x": 580,
        "y": 180,
        "wires": [
            [
                "6219a8708b3566ee",
                "030b13b36bc1223f"
            ]
        ]
    },
    {
        "id": "e8cbb8e5fac0c7de",
        "type": "debug",
        "z": "0ac396398ba6bce7",
        "name": "debug 172",
        "active": true,
        "tosidebar": true,
        "console": false,
        "tostatus": false,
        "complete": "false",
        "statusVal": "",
        "statusType": "auto",
        "x": 1170,
        "y": 620,
        "wires": []
    },
    {
        "id": "d95a73b68424ddd0",
        "type": "debug",
        "z": "0ac396398ba6bce7",
        "name": "debug 173",
        "active": true,
        "tosidebar": true,
        "console": false,
        "tostatus": false,
        "complete": "false",
        "statusVal": "",
        "statusType": "auto",
        "x": 1170,
        "y": 660,
        "wires": []
    },
    {
        "id": "984dc6f1c0ec8afd",
        "type": "change",
        "z": "0ac396398ba6bce7",
        "g": "94e86c2cb22bb290",
        "name": "",
        "rules": [
            {
                "t": "set",
                "p": "aspect",
                "pt": "flow",
                "to": "payload",
                "tot": "msg"
            }
        ],
        "action": "",
        "property": "",
        "from": "",
        "to": "",
        "reg": false,
        "x": 1140,
        "y": 840,
        "wires": [
            []
        ]
    },
    {
        "id": "38c5a852b5640e80",
        "type": "change",
        "z": "0ac396398ba6bce7",
        "g": "94e86c2cb22bb290",
        "name": "",
        "rules": [
            {
                "t": "set",
                "p": "rotation",
                "pt": "flow",
                "to": "payload",
                "tot": "msg"
            }
        ],
        "action": "",
        "property": "",
        "from": "",
        "to": "",
        "reg": false,
        "x": 1140,
        "y": 880,
        "wires": [
            []
        ]
    },
    {
        "id": "c32d3049700de36c",
        "type": "Device Access",
        "name": "Localhost",
        "address": "localhost",
        "protocol": "http"
    },
    {
        "id": "a0d4d504a3ac3a77",
        "type": "ui_group",
        "name": "Settings",
        "tab": "f4c4806280c78d58",
        "order": 2,
        "disp": true,
        "width": "6",
        "collapse": false,
        "className": ""
    },
    {
        "id": "6c8313788511e2cf",
        "type": "ui_group",
        "name": "Visualize",
        "tab": "f4c4806280c78d58",
        "order": 3,
        "disp": false,
        "width": "16",
        "collapse": false,
        "className": ""
    },
    {
        "id": "d1d53d1e87be4083",
        "type": "mqtt-broker",
        "name": "MQTT Broker",
        "broker": "10.13.8.20",
        "port": "1883",
        "clientid": "",
        "autoConnect": true,
        "usetls": false,
        "protocolVersion": "4",
        "keepalive": "60",
        "cleansession": true,
        "autoUnsubscribe": true,
        "birthTopic": "",
        "birthQos": "0",
        "birthRetain": "false",
        "birthPayload": "",
        "birthMsg": {},
        "closeTopic": "",
        "closeQos": "0",
        "closeRetain": "false",
        "closePayload": "",
        "closeMsg": {},
        "willTopic": "",
        "willQos": "0",
        "willRetain": "false",
        "willPayload": "",
        "willMsg": {},
        "userProps": "",
        "sessionExpiry": ""
    },
    {
        "id": "c561ea2fd0249c4c",
        "type": "Device Access",
        "name": "Localhost",
        "address": "localhost",
        "protocol": "http"
    },
    {
        "id": "f4c4806280c78d58",
        "type": "ui_tab",
        "name": "Detection Recording",
        "icon": "dashboard",
        "order": 2,
        "disabled": false,
        "hidden": false
    }
]
