[
    {
        "id": "d3e594f4c1b5a442",
        "type": "tab",
        "label": "Detection Recording Controller",
        "disabled": false,
        "info": "",
        "env": []
    },
    {
        "id": "44b723337ad03c14",
        "type": "group",
        "z": "d3e594f4c1b5a442",
        "name": "Dashboard",
        "style": {
            "stroke": "#000000",
            "fill": "#bfdbef",
            "label": true,
            "color": "#000000"
        },
        "nodes": [
            "e498e81154725d20",
            "51363b059f6856e5",
            "5d4aac913c128593",
            "1514c7eed1711636",
            "de09e841540f61a4",
            "5f7d0429941b618a",
            "b89e987f9d031100",
            "0e9d1a6a833f3ee9",
            "66d5182f49466546",
            "96f99c646bc141ac",
            "43306e70bc9e1d85",
            "942c66120b754b3d",
            "4353de0a38b07bcb",
            "5e542d9a73b8207f",
            "76f3a2179d211c73",
            "7c0f9863fbbe3ada",
            "6a4859bf702635f7",
            "c071e821339b55ae",
            "1c8e7569dd72e412",
            "855d4873358ef5bf",
            "c853522f3311dcaa",
            "b598c5c02bb3a020",
            "aa9c1a3d8ea38137",
            "ae86a1ad84d0de26",
            "6e809c69491d80e8",
            "6631c486e160b6f5",
            "0641bd93e983562a",
            "04ce100da8567911",
            "bd11e8999b4132cc",
            "9ccc5460a1ab22ca",
            "f9de6b18a4ac8892",
            "0a8557700ed7ab33",
            "7c8c1c2739cf9f1a",
            "b1b2bec1adc98b7c",
            "7817e76d1e101ae7",
            "28f1217aed3c743b",
            "47b81db24271871d",
            "a74ec83f27b3787a",
            "35702e5cc598a42d",
            "d9e3fc044f32f713",
            "f9adfec398bb2ca2",
            "fa5fd5e5b99e0d1b"
        ],
        "x": 254,
        "y": 679,
        "w": 1012,
        "h": 782
    },
    {
        "id": "149675fa95b8aff8",
        "type": "group",
        "z": "d3e594f4c1b5a442",
        "name": "Recording Method",
        "style": {
            "label": true
        },
        "nodes": [
            "bb542cee8aecb99d",
            "5cc6e568f52c4ba9",
            "c223f335d8cf015f",
            "0afb0a7520ad16b3",
            "3028a86de1375289",
            "4f0afbb81410cd6a",
            "76a011e33c1b54c3",
            "7d5503ceb112aa8d",
            "6ff30cf97e38434b",
            "7d42b3b4d83eb402",
            "625ad64d3fa35e55",
            "9931c8a78dee2ee9"
        ],
        "x": 254,
        "y": 439,
        "w": 822,
        "h": 202
    },
    {
        "id": "d79e1a4e464ac050",
        "type": "group",
        "z": "d3e594f4c1b5a442",
        "name": "Detection / Trigger",
        "style": {
            "label": true
        },
        "nodes": [
            "f939cad88258d2e0",
            "2def7914d430e300",
            "d9beff0a112f2eca",
            "fd1793089c6a8a79",
            "705a8dd80e0a9579"
        ],
        "x": 254,
        "y": 239,
        "w": 792,
        "h": 162
    },
    {
        "id": "be5522938d927ccf",
        "type": "group",
        "z": "d3e594f4c1b5a442",
        "name": "Init",
        "style": {
            "label": true
        },
        "nodes": [
            "4717bd4396ad578a",
            "3d2b7928522c9cda",
            "eff7067b8abb104a",
            "3d17b06ee4eaf2f2",
            "65929e36b5c59bf5",
            "3c288c067f6cd691",
            "5b75c77d1a606cc1"
        ],
        "x": 254,
        "y": 39,
        "w": 792,
        "h": 162
    },
    {
        "id": "66d5182f49466546",
        "type": "junction",
        "z": "d3e594f4c1b5a442",
        "g": "44b723337ad03c14",
        "x": 1080,
        "y": 1180,
        "wires": [
            [
                "cfe58c82449aee84"
            ]
        ]
    },
    {
        "id": "ae86a1ad84d0de26",
        "type": "junction",
        "z": "d3e594f4c1b5a442",
        "g": "44b723337ad03c14",
        "x": 280,
        "y": 800,
        "wires": [
            [
                "b1b2bec1adc98b7c",
                "f9de6b18a4ac8892",
                "47b81db24271871d",
                "d9e3fc044f32f713",
                "6e809c69491d80e8",
                "04ce100da8567911",
                "942c66120b754b3d"
            ]
        ]
    },
    {
        "id": "625ad64d3fa35e55",
        "type": "junction",
        "z": "d3e594f4c1b5a442",
        "g": "149675fa95b8aff8",
        "x": 280,
        "y": 480,
        "wires": [
            [
                "0afb0a7520ad16b3",
                "4f0afbb81410cd6a"
            ]
        ]
    },
    {
        "id": "9931c8a78dee2ee9",
        "type": "junction",
        "z": "d3e594f4c1b5a442",
        "g": "149675fa95b8aff8",
        "x": 280,
        "y": 520,
        "wires": [
            [
                "3028a86de1375289",
                "76a011e33c1b54c3"
            ]
        ]
    },
    {
        "id": "f939cad88258d2e0",
        "type": "trigger",
        "z": "d3e594f4c1b5a442",
        "g": "d79e1a4e464ac050",
        "name": "",
        "op1": "true",
        "op2": "false",
        "op1type": "bool",
        "op2type": "bool",
        "duration": "5",
        "extend": true,
        "overrideDelay": false,
        "units": "s",
        "reset": "",
        "bytopic": "all",
        "topic": "topic",
        "outputs": 2,
        "x": 960,
        "y": 320,
        "wires": [
            [
                "89395ebe29f325eb"
            ],
            [
                "2569b2a24dea79ab"
            ]
        ]
    },
    {
        "id": "bb542cee8aecb99d",
        "type": "function",
        "z": "d3e594f4c1b5a442",
        "g": "149675fa95b8aff8",
        "name": "http://[recorder]/record/startStart Request",
        "func": "msg.url = \"http://rec.juhlin.me/record/start\" ;\n\nmsg.payload = {\n    serial: flow.get(\"camera\").serial,\n    buffer: flow.get(\"bufferTime\") || 5,\n    tag: \"Detection\",\n    method: \"FMR\"\n}\n\nreturn msg;",
        "outputs": 1,
        "timeout": 0,
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "libs": [],
        "x": 660,
        "y": 480,
        "wires": [
            [
                "c223f335d8cf015f"
            ]
        ]
    },
    {
        "id": "5cc6e568f52c4ba9",
        "type": "function",
        "z": "d3e594f4c1b5a442",
        "g": "149675fa95b8aff8",
        "name": "http://[recorder]/record/startStart Request",
        "func": "msg.url = \"http://rec.juhlin.me/record/stop\" ;\n\nmsg.payload = {\n    serial: flow.get(\"camera\").serial,\n    buffer: 7,\n    tag: \"Detection\",\n    method: \"FMR\"\n}\n\nreturn msg;",
        "outputs": 1,
        "timeout": 0,
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "libs": [],
        "x": 660,
        "y": 520,
        "wires": [
            [
                "c223f335d8cf015f"
            ]
        ]
    },
    {
        "id": "c223f335d8cf015f",
        "type": "http request",
        "z": "d3e594f4c1b5a442",
        "g": "149675fa95b8aff8",
        "name": "",
        "method": "POST",
        "ret": "obj",
        "paytoqs": "ignore",
        "url": "",
        "tls": "",
        "persist": false,
        "proxy": "",
        "insecureHTTPParser": false,
        "authType": "",
        "senderr": false,
        "headers": [],
        "x": 980,
        "y": 480,
        "wires": [
            [
                "9593b1e85006db5e"
            ]
        ]
    },
    {
        "id": "9593b1e85006db5e",
        "type": "debug",
        "z": "d3e594f4c1b5a442",
        "name": "debug 21",
        "active": false,
        "tosidebar": true,
        "console": false,
        "tostatus": false,
        "complete": "false",
        "statusVal": "",
        "statusType": "auto",
        "x": 1190,
        "y": 480,
        "wires": []
    },
    {
        "id": "4717bd4396ad578a",
        "type": "catch",
        "z": "d3e594f4c1b5a442",
        "g": "be5522938d927ccf",
        "name": "",
        "scope": null,
        "uncaught": false,
        "x": 360,
        "y": 120,
        "wires": [
            [
                "3d2b7928522c9cda",
                "5b75c77d1a606cc1"
            ]
        ]
    },
    {
        "id": "3d2b7928522c9cda",
        "type": "ui_toast",
        "z": "d3e594f4c1b5a442",
        "g": "be5522938d927ccf",
        "position": "dialog",
        "displayTime": "3",
        "highlight": "",
        "sendall": true,
        "outputs": 1,
        "ok": "OK",
        "cancel": "",
        "raw": false,
        "className": "",
        "topic": "",
        "name": "",
        "x": 590,
        "y": 120,
        "wires": [
            []
        ]
    },
    {
        "id": "a9c091aafd668c97",
        "type": "link in",
        "z": "d3e594f4c1b5a442",
        "name": "link in 9",
        "links": [
            "f6164021f29559b5",
            "e13017242ba581b3",
            "7307295e0c7b7a1d",
            "d38073e88f076298",
            "3e9f521d9340ad0b",
            "cfe58c82449aee84"
        ],
        "x": 215,
        "y": 1140,
        "wires": [
            [
                "e498e81154725d20"
            ]
        ]
    },
    {
        "id": "725fcd00d186360e",
        "type": "link in",
        "z": "d3e594f4c1b5a442",
        "name": "link in 10",
        "links": [
            "ef0518f59d36b202",
            "64d0beb8e1423bb7"
        ],
        "x": 215,
        "y": 1300,
        "wires": [
            [
                "5f7d0429941b618a"
            ]
        ]
    },
    {
        "id": "ef0518f59d36b202",
        "type": "link out",
        "z": "d3e594f4c1b5a442",
        "name": "link out 12",
        "mode": "link",
        "links": [
            "725fcd00d186360e"
        ],
        "x": 1305,
        "y": 780,
        "wires": []
    },
    {
        "id": "4353de0a38b07bcb",
        "type": "Axis device",
        "z": "d3e594f4c1b5a442",
        "g": "44b723337ad03c14",
        "name": "",
        "preset": "342a855c997c7b94",
        "action": "Device Info",
        "cgi": "",
        "data": "",
        "options": "",
        "filename": "",
        "x": 610,
        "y": 720,
        "wires": [
            [
                "5e542d9a73b8207f"
            ]
        ]
    },
    {
        "id": "5e542d9a73b8207f",
        "type": "change",
        "z": "d3e594f4c1b5a442",
        "g": "44b723337ad03c14",
        "name": "",
        "rules": [
            {
                "t": "set",
                "p": "device",
                "pt": "flow",
                "to": "payload",
                "tot": "msg"
            }
        ],
        "action": "",
        "property": "",
        "from": "",
        "to": "",
        "reg": false,
        "x": 800,
        "y": 720,
        "wires": [
            [
                "76f3a2179d211c73"
            ]
        ]
    },
    {
        "id": "942c66120b754b3d",
        "type": "change",
        "z": "d3e594f4c1b5a442",
        "g": "44b723337ad03c14",
        "name": "Authentication",
        "rules": [
            {
                "t": "set",
                "p": "address",
                "pt": "msg",
                "to": "localhost",
                "tot": "str"
            },
            {
                "t": "set",
                "p": "user",
                "pt": "msg",
                "to": "root",
                "tot": "str"
            },
            {
                "t": "set",
                "p": "password",
                "pt": "msg",
                "to": "pass",
                "tot": "str"
            }
        ],
        "action": "",
        "property": "",
        "from": "",
        "to": "",
        "reg": false,
        "x": 440,
        "y": 720,
        "wires": [
            [
                "4353de0a38b07bcb"
            ]
        ]
    },
    {
        "id": "a74ec83f27b3787a",
        "type": "ui_numeric",
        "z": "d3e594f4c1b5a442",
        "g": "44b723337ad03c14",
        "name": "",
        "label": "Min Age (seconds)",
        "tooltip": "",
        "group": "f4c210307d84a469",
        "order": 5,
        "width": 0,
        "height": 0,
        "wrap": false,
        "passthru": true,
        "topic": "topic",
        "topicType": "msg",
        "format": "{{value}}",
        "min": 0,
        "max": 10,
        "step": "0.5",
        "className": "",
        "x": 630,
        "y": 1020,
        "wires": [
            [
                "35702e5cc598a42d"
            ]
        ]
    },
    {
        "id": "f9adfec398bb2ca2",
        "type": "ui_numeric",
        "z": "d3e594f4c1b5a442",
        "g": "44b723337ad03c14",
        "name": "",
        "label": "Min Distance (% of view)",
        "tooltip": "",
        "group": "f4c210307d84a469",
        "order": 6,
        "width": 0,
        "height": 0,
        "wrap": false,
        "passthru": true,
        "topic": "topic",
        "topicType": "msg",
        "format": "{{value}}",
        "min": 0,
        "max": "100",
        "step": "10",
        "className": "",
        "x": 650,
        "y": 1060,
        "wires": [
            [
                "fa5fd5e5b99e0d1b"
            ]
        ]
    },
    {
        "id": "35702e5cc598a42d",
        "type": "change",
        "z": "d3e594f4c1b5a442",
        "g": "44b723337ad03c14",
        "name": "",
        "rules": [
            {
                "t": "set",
                "p": "age",
                "pt": "flow",
                "to": "payload",
                "tot": "msg"
            }
        ],
        "action": "",
        "property": "",
        "from": "",
        "to": "",
        "reg": false,
        "x": 870,
        "y": 1020,
        "wires": [
            []
        ]
    },
    {
        "id": "fa5fd5e5b99e0d1b",
        "type": "change",
        "z": "d3e594f4c1b5a442",
        "g": "44b723337ad03c14",
        "name": "",
        "rules": [
            {
                "t": "set",
                "p": "distance",
                "pt": "flow",
                "to": "payload",
                "tot": "msg"
            }
        ],
        "action": "",
        "property": "",
        "from": "",
        "to": "",
        "reg": false,
        "x": 890,
        "y": 1060,
        "wires": [
            []
        ]
    },
    {
        "id": "47b81db24271871d",
        "type": "change",
        "z": "d3e594f4c1b5a442",
        "g": "44b723337ad03c14",
        "name": "flow.age",
        "rules": [
            {
                "t": "set",
                "p": "payload",
                "pt": "msg",
                "to": "age",
                "tot": "flow"
            }
        ],
        "action": "",
        "property": "",
        "from": "",
        "to": "",
        "reg": false,
        "x": 420,
        "y": 1020,
        "wires": [
            [
                "a74ec83f27b3787a"
            ]
        ]
    },
    {
        "id": "d9e3fc044f32f713",
        "type": "change",
        "z": "d3e594f4c1b5a442",
        "g": "44b723337ad03c14",
        "name": "flow.distance",
        "rules": [
            {
                "t": "set",
                "p": "payload",
                "pt": "msg",
                "to": "distance",
                "tot": "flow"
            }
        ],
        "action": "",
        "property": "",
        "from": "",
        "to": "",
        "reg": false,
        "x": 430,
        "y": 1060,
        "wires": [
            [
                "f9adfec398bb2ca2"
            ]
        ]
    },
    {
        "id": "0a8557700ed7ab33",
        "type": "ui_dropdown",
        "z": "d3e594f4c1b5a442",
        "g": "44b723337ad03c14",
        "name": "",
        "label": "Classes",
        "tooltip": "",
        "place": "Select detection",
        "group": "f4c210307d84a469",
        "order": 4,
        "width": 0,
        "height": 0,
        "passthru": true,
        "multiple": true,
        "options": [
            {
                "label": "Human",
                "value": "Human",
                "type": "str"
            },
            {
                "label": "Face",
                "value": "Face",
                "type": "str"
            },
            {
                "label": "Head",
                "value": "Head",
                "type": "str"
            },
            {
                "label": "Bag",
                "value": "Bag",
                "type": "str"
            },
            {
                "label": "Car",
                "value": "Car",
                "type": "str"
            },
            {
                "label": "Truck",
                "value": "Truck",
                "type": "str"
            },
            {
                "label": "Bus",
                "value": "Bus",
                "type": "str"
            },
            {
                "label": "Bike",
                "value": "Bike",
                "type": "str"
            },
            {
                "label": "Vehicle",
                "value": "Vehicle",
                "type": "str"
            },
            {
                "label": "License plate",
                "value": "License plate",
                "type": "str"
            }
        ],
        "payload": "",
        "topic": "topic",
        "topicType": "msg",
        "className": "",
        "x": 600,
        "y": 940,
        "wires": [
            [
                "7c8c1c2739cf9f1a"
            ]
        ]
    },
    {
        "id": "7c8c1c2739cf9f1a",
        "type": "change",
        "z": "d3e594f4c1b5a442",
        "g": "44b723337ad03c14",
        "name": "",
        "rules": [
            {
                "t": "set",
                "p": "classes",
                "pt": "flow",
                "to": "payload",
                "tot": "msg",
                "dc": true
            }
        ],
        "action": "",
        "property": "",
        "from": "",
        "to": "",
        "reg": false,
        "x": 880,
        "y": 940,
        "wires": [
            []
        ]
    },
    {
        "id": "f9de6b18a4ac8892",
        "type": "function",
        "z": "d3e594f4c1b5a442",
        "g": "44b723337ad03c14",
        "name": "Classes",
        "func": "if( !flow.get(\"classes\") ) {\n    msg.payload = [ \"Human\", \"Car\" ];\n} else {\n    msg.payload = flow.get(\"classes\");\n}\n\nreturn msg;",
        "outputs": 1,
        "timeout": 0,
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "libs": [],
        "x": 420,
        "y": 940,
        "wires": [
            [
                "0a8557700ed7ab33"
            ]
        ]
    },
    {
        "id": "76f3a2179d211c73",
        "type": "function",
        "z": "d3e594f4c1b5a442",
        "g": "44b723337ad03c14",
        "name": "flow.camera",
        "func": "msg.payload = flow.get(\"camera\") || {\n    aspect: \"16:9\",\n    rotation: \"Landscape\",\n    image: \"\"\n}    \nflow.set(\"camera\",msg.payload);\n\nreturn msg;\n",
        "outputs": 1,
        "timeout": 0,
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "libs": [],
        "x": 570,
        "y": 780,
        "wires": [
            [
                "7c0f9863fbbe3ada",
                "6a4859bf702635f7"
            ]
        ]
    },
    {
        "id": "c071e821339b55ae",
        "type": "ui_dropdown",
        "z": "d3e594f4c1b5a442",
        "g": "44b723337ad03c14",
        "name": "Aspect",
        "label": "Aspect",
        "tooltip": "",
        "place": "Select aspect",
        "group": "fd00135cf645147f",
        "order": 7,
        "width": "3",
        "height": "1",
        "passthru": true,
        "multiple": false,
        "options": [
            {
                "label": "16:9",
                "value": "16:9",
                "type": "str"
            },
            {
                "label": "4:3",
                "value": "4:3",
                "type": "str"
            },
            {
                "label": "1:1",
                "value": "1:1",
                "type": "str"
            }
        ],
        "payload": "",
        "topic": "aspect",
        "topicType": "str",
        "className": "",
        "x": 960,
        "y": 780,
        "wires": [
            [
                "855d4873358ef5bf"
            ]
        ]
    },
    {
        "id": "855d4873358ef5bf",
        "type": "function",
        "z": "d3e594f4c1b5a442",
        "g": "44b723337ad03c14",
        "name": "flow.camera",
        "func": "var camera = flow.get(\"camera\");\nswitch(msg.topic) {\n    case \"aspect\":\n        camera.aspect = msg.payload;\n        break;\n    case \"rotation\":\n        camera.rotation = msg.payload;\n        break;\n}\n\nflow.set(\"camera\",camera);\n\nreturn msg;\n",
        "outputs": 1,
        "timeout": 0,
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "libs": [],
        "x": 1170,
        "y": 780,
        "wires": [
            [
                "ef0518f59d36b202"
            ]
        ]
    },
    {
        "id": "7c0f9863fbbe3ada",
        "type": "change",
        "z": "d3e594f4c1b5a442",
        "g": "44b723337ad03c14",
        "name": "",
        "rules": [
            {
                "t": "set",
                "p": "payload",
                "pt": "msg",
                "to": "payload.aspect",
                "tot": "msg"
            }
        ],
        "action": "",
        "property": "",
        "from": "",
        "to": "",
        "reg": false,
        "x": 770,
        "y": 780,
        "wires": [
            [
                "c071e821339b55ae"
            ]
        ]
    },
    {
        "id": "1c8e7569dd72e412",
        "type": "ui_dropdown",
        "z": "d3e594f4c1b5a442",
        "g": "44b723337ad03c14",
        "name": "Rotation",
        "label": "Rotation",
        "tooltip": "",
        "place": "Select rotation",
        "group": "fd00135cf645147f",
        "order": 8,
        "width": "4",
        "height": "1",
        "passthru": true,
        "multiple": false,
        "options": [
            {
                "label": "Landscape",
                "value": "Landscape",
                "type": "str"
            },
            {
                "label": "Portrait",
                "value": "Portrait",
                "type": "str"
            }
        ],
        "payload": "",
        "topic": "rotation",
        "topicType": "str",
        "className": "",
        "x": 960,
        "y": 820,
        "wires": [
            [
                "855d4873358ef5bf"
            ]
        ]
    },
    {
        "id": "6a4859bf702635f7",
        "type": "change",
        "z": "d3e594f4c1b5a442",
        "g": "44b723337ad03c14",
        "name": "",
        "rules": [
            {
                "t": "set",
                "p": "payload",
                "pt": "msg",
                "to": "payload.rotation",
                "tot": "msg"
            }
        ],
        "action": "",
        "property": "",
        "from": "",
        "to": "",
        "reg": false,
        "x": 770,
        "y": 820,
        "wires": [
            [
                "1c8e7569dd72e412"
            ]
        ]
    },
    {
        "id": "b1b2bec1adc98b7c",
        "type": "function",
        "z": "d3e594f4c1b5a442",
        "g": "44b723337ad03c14",
        "name": "Confidence",
        "func": "msg.payload = flow.get(\"confidence\") || 10;\nreturn msg;",
        "outputs": 1,
        "timeout": 0,
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "libs": [],
        "x": 430,
        "y": 980,
        "wires": [
            [
                "7817e76d1e101ae7"
            ]
        ]
    },
    {
        "id": "7817e76d1e101ae7",
        "type": "ui_dropdown",
        "z": "d3e594f4c1b5a442",
        "g": "44b723337ad03c14",
        "name": "",
        "label": "Min confidence",
        "tooltip": "",
        "place": "Select detection",
        "group": "f4c210307d84a469",
        "order": 7,
        "width": 0,
        "height": 0,
        "passthru": false,
        "multiple": false,
        "options": [
            {
                "label": "10",
                "value": 10,
                "type": "num"
            },
            {
                "label": "20",
                "value": 20,
                "type": "num"
            },
            {
                "label": "30",
                "value": 30,
                "type": "num"
            },
            {
                "label": "40",
                "value": 40,
                "type": "num"
            },
            {
                "label": "50",
                "value": 50,
                "type": "num"
            },
            {
                "label": "60",
                "value": 60,
                "type": "num"
            },
            {
                "label": "70",
                "value": 70,
                "type": "num"
            },
            {
                "label": "80",
                "value": 80,
                "type": "num"
            },
            {
                "label": "90",
                "value": 90,
                "type": "num"
            }
        ],
        "payload": "",
        "topic": "topic",
        "topicType": "msg",
        "className": "",
        "x": 620,
        "y": 980,
        "wires": [
            [
                "28f1217aed3c743b"
            ]
        ]
    },
    {
        "id": "28f1217aed3c743b",
        "type": "change",
        "z": "d3e594f4c1b5a442",
        "g": "44b723337ad03c14",
        "name": "",
        "rules": [
            {
                "t": "set",
                "p": "confidence",
                "pt": "flow",
                "to": "payload",
                "tot": "msg",
                "dc": true
            }
        ],
        "action": "",
        "property": "",
        "from": "",
        "to": "",
        "reg": false,
        "x": 890,
        "y": 980,
        "wires": [
            []
        ]
    },
    {
        "id": "e498e81154725d20",
        "type": "ui_template",
        "z": "d3e594f4c1b5a442",
        "g": "44b723337ad03c14",
        "group": "fd00135cf645147f",
        "name": "Visulize",
        "order": 3,
        "width": "16",
        "height": "16",
        "format": "<link rel=\"stylesheet\" href=\"/css/imgareaselect-default.css\">\n<script src=\"/js/jquery.imgareaselect.js\"></script>\n<script src=\"/js/media-stream-player.min.js\"></script>\n\n<div id=\"{{'view_'+$id}}\" style=\"width:800px; height:450px;\">\n  <div style=\"width:100%; height:100%; position:relative\">\n    <img id=\"{{'image_'+$id}}\" src=\"\" style=\"width:100%; height:100%; position:absolute; top:0px; left:0px;\">\n    <div id=\"{{'video_'+$id}}\" style=\"width:100%; height:100%; position:absolute; top:0px; left:0px;\"></div>\n    <canvas id=\"{{'canvas_'+$id}}\" width=\"1000\" height=\"1000\" style=\"width:100%; height:100%; position:absolute; top:0px; left:0px;\"></canvas>\n  </div>\n</div>\n\n\n<script>\n  var ctx = null;\nvar imageWidth = 800;\nvar imageHeight = 450;\nvar strength = 0.5;\nvar pathList = [];\nvar selectArea = null;\nvar aoi = null;\n\nfunction ClearCanvas() {\n    if(ctx) {\n        ctx.beginPath();\n        ctx.clearRect(0, 0, 1000, 1000 );\n        ctx.stroke();\n    }\n\n    if( selectArea )\n        selectArea.setOptions({ hide: true });\n    selectArea = null;        \n}\n\n\nfunction setupVideo( scope, data ) {\n    var rotation = data.rotation;\n    var aspect = data.aspect;\n    imageWidth = 800; //Default for 16:9\n    imageHeight = 450;\n    videoWidth = 1280;\n    videoHeight = 720;\n\n    if(aspect === \"1:1\") {\n        imageHeight = 800;\n        videoWidth = 800;\n        videoHeight = 800;\n    }\n\n    if(aspect === \"4:3\") {\n        imageHeight = 600;\n        videoWidth = 800;\n        videoHeight = 600;\n    }\n\n    //Setup rotation\n    if(rotation === \"Portrait\" ) {\n        var temp = imageWidth;\n        imageWidth = imageHeight;\n        imageHeight = temp;\n    }\n\n    $(\"#view_\"+scope.$id).css(\"width\", imageWidth + \"px\");\n    $(\"#view_\"+scope.$id).css(\"height\", imageHeight + \"px\");\n\n    $(\"#video_\"+scope.$id).empty();\n    var player = '<media-stream-player hostname=\"'+window.location.hostname+'\" format=\"RTP_H264\" compression=\"40\" audio=\"0\" resolution=\"'+videoWidth+'x'+videoHeight+'\" variant=\"basic\" autoplay></media-stream-player>';\n    $(\"#video_\"+scope.$id).append(player);\n}\n\nfunction setupImage( scope, data ) {\n    var rotation = data.rotation || 0;\n    var aspect = data.aspect || \"16:9\";\n    imageWidth = 800;  //Default for 16:9\n    imageHeight = 450;\n\n    if(aspect === \"1:1\")\n        imageHeight = 800;\n\n    if(aspect === \"4:3\")\n        imageHeight = 600;\n\n    //Setup aspect ration\n    if(rotation === \"Portrait\" ) {\n        var temp = imageWidth;\n        imageHeight = imageWidth;\n        imageWidth = temp;\n    }\n\n    $(\"#view_\"+scope.$id).css(\"width\", imageWidth + \"px\");\n    $(\"#view_\"+scope.$id).css(\"height\", imageHeight+\"px\");\n\n    if( data.hasOwnProperty(\"image\") && data.image )\n        $(\"#image_\"+scope.$id).attr(\"src\",\"data:image/jpeg;base64,\" + data.image);\n    else\n        $(\"#image_\"+scope.$id).attr(\"src\",\"data:image/jpeg;base64, \");\n        \n    var canvas = document.getElementById(\"canvas_\"+scope.$id);\n    ctx = canvas.getContext(\"2d\");\n}\n\nfunction drawDetections( detections ) {\n    if(!ctx)\n        return;\n    ClearCanvas();\n\n    ctx.beginPath();\n    ctx.lineWidth = 3;\n    ctx.font = \"30px Arial\";\n    ctx.fillStyle = '#FFFF00';\n    ctx.strokeStyle = '#FFFF00';\n    detections.forEach( function(detection){\n        if( detection.hasOwnProperty(\"bx\")) {\n            ctx.moveTo(detection.bx,detection.by);\n            ctx.lineTo(detection.cx,detection.cy);\n        }\n        ctx.rect(detection.x, detection.y,detection.w,detection.h );\n        var text = detection.class || \"Undefined\";\n        if( detection.hasOwnProperty(\"confidence\"))\n            text += \" \" + detection.confidence;\n        if( detection.hasOwnProperty(\"age\") )\n            text += \" \" + detection.age + \"s\";\n        ctx.fillText(text, detection.x, detection.y-10 );\n    });\n    ctx.stroke();\n}\n\n(function(scope) {\n    scope.$watch('msg', function(msg) {\n        if( !msg || !msg.topic  )\n            return;\n        console.log(msg.topic);\n\n        switch( msg.topic ) {\n        case \"image\":\n            ClearCanvas();\n            setupImage(scope,msg.payload);\n            setupVideo(scope,msg.payload);\n            if( selectArea ) {\n                selectArea.setOptions({hide: true});\n                selectArea = null;\n            }\n            break;\n\n        case \"path\":\n            drawPath( msg.payload );\n            break;\n\n        case \"path\":\n            drawPath( msg.payload );\n            break;\n\n        case \"detections\":\n            drawDetections( msg.payload );\n        break;\n\n        case \"singlePath\":\n            ClearCanvas();\n            drawPath( msg.payload );\n            break;\n\n        case \"paths\":\n            ClearCanvas();\n            pathList = msg.payload;\n            msg.payload.forEach(function(path){\n                drawPath( path );\n            });\n            break;\n\n        case \"strength\":\n            ClearCanvas();\n            strength = (parseInt(msg.payload) / 100.0 ) * 0.5;\n            pathList.forEach( function(path) {\n                drawPath( path );\n            });\n            break;\n\n        case \"reset\":\n            ClearCanvas();\n            break;\n\n        case \"aoi\":\n            if( selectArea ) {\n                selectArea.setOptions({hide: true});\n                selectArea = null;\n            }\n            if( typeof msg.payload !== \"object\" )\n                return;\n            aoi = msg.payload.id || \"None\";\n            selectArea = $(\"#image_\"+scope.$id).imgAreaSelect({\n                x1: parseInt((msg.payload.x1 / 1000) * imageWidth),\n                y1: parseInt((msg.payload.y1 / 1000) * imageHeight),\n                x2: parseInt((msg.payload.x2 / 1000) * imageWidth),\n                y2: parseInt((msg.payload.y2 / 1000) * imageHeight),\n                minHeight: 20,\n                minWidth: 20,\n                handles: true,\n                enable:true,movable:true,resizable:true,show:true,\n                instance: true,\n                onSelectEnd: function( image, area ) {\n                var box = {\n                    id: aoi,\n                    x1: parseInt((area.x1 / imageWidth) * 1000),\n                    x2: parseInt((area.x2 / imageWidth) * 1000),\n                    y1: parseInt((area.y1 / imageHeight) * 1000),\n                    y2: parseInt((area.y2 / imageHeight) * 1000)\n                }\n                scope.send({topic:aoi||\"none\",payload:box});\n                }\n            });\n            selectArea.setOptions({show: true});\n            break;\n            case \"birth\":\n            case \"death\":\n                aoi = msg.payload.id || \"None\";\n                if(!selectArea) {\n                    selectArea = $(\"#image_\"+scope.$id).imgAreaSelect( {\n                        x1: parseInt(msg.payload.x1 / 1000 * imageWidth),\n                        x2: parseInt(msg.payload.x2 / 1000 * imageWidth),\n                        y1: parseInt(msg.payload.y1 / 1000 * imageHeight),\n                        y2: parseInt(msg.payload.y2 / 1000 * imageHeight),\n                        show: true, hide:false, minHeight: 5, minWidth: 5, handles: true, movable: true, resizable: true, instance:true,\n                        onSelectEnd: function( image, area ) {\n                            var area = {\n                                id: aoi,\n                                x1: parseInt((area.x1/imageWidth) * 1000),\n                                x2: parseInt((area.x2/imageWidth) * 1000),\n                                y1: parseInt((area.y1/imageHeight) * 1000),\n                                y2: parseInt((area.y2/imageHeight) * 1000)\n                            }\n                            scope.send({\n                                topic: aoi,\n                                payload: area\n                            });\n                        }\n                    });\n                }\n                selectArea.setSelection(\n                    parseInt(msg.payload.x1 / 1000 * imageWidth),\n                    parseInt(msg.payload.y1 / 1000 * imageHeight),\n                    parseInt(msg.payload.x2 / 1000 * imageWidth),\n                    parseInt(msg.payload.y2 / 1000 * imageHeight)\n                );\n                selectArea.setOptions({ show: true });\n            break;\n\t\t}\n    });\n})(scope);\n</script>",
        "storeOutMessages": false,
        "fwdInMessages": false,
        "resendOnRefresh": false,
        "templateScope": "local",
        "className": "",
        "x": 420,
        "y": 1140,
        "wires": [
            [
                "de09e841540f61a4"
            ]
        ]
    },
    {
        "id": "51363b059f6856e5",
        "type": "ui_button",
        "z": "d3e594f4c1b5a442",
        "g": "44b723337ad03c14",
        "name": "",
        "group": "f4c210307d84a469",
        "order": 3,
        "width": 0,
        "height": 0,
        "passthru": false,
        "label": "Detection Area",
        "tooltip": "",
        "color": "",
        "bgcolor": "",
        "className": "",
        "icon": "",
        "payload": "",
        "payloadType": "str",
        "topic": "topic",
        "topicType": "msg",
        "x": 450,
        "y": 1180,
        "wires": [
            [
                "5d4aac913c128593"
            ]
        ]
    },
    {
        "id": "5d4aac913c128593",
        "type": "function",
        "z": "d3e594f4c1b5a442",
        "g": "44b723337ad03c14",
        "name": "aoi",
        "func": "msg.topic = \"aoi\";\nmsg.payload = flow.get(\"aoi\") || {\n    id: \"aoi\",\n    x1: 200,\n    y1: 200,\n    x2: 800,\n    y2: 800\n}\n\nreturn msg;",
        "outputs": 1,
        "timeout": 0,
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "libs": [],
        "x": 620,
        "y": 1180,
        "wires": [
            [
                "66d5182f49466546"
            ]
        ]
    },
    {
        "id": "1514c7eed1711636",
        "type": "ui_button",
        "z": "d3e594f4c1b5a442",
        "g": "44b723337ad03c14",
        "name": "",
        "group": "f4c210307d84a469",
        "order": 8,
        "width": 0,
        "height": 0,
        "passthru": false,
        "label": "Save",
        "tooltip": "",
        "color": "",
        "bgcolor": "green",
        "className": "",
        "icon": "",
        "payload": "false",
        "payloadType": "bool",
        "topic": "aoi",
        "topicType": "str",
        "x": 420,
        "y": 1220,
        "wires": [
            [
                "66d5182f49466546"
            ]
        ]
    },
    {
        "id": "de09e841540f61a4",
        "type": "change",
        "z": "d3e594f4c1b5a442",
        "g": "44b723337ad03c14",
        "name": "",
        "rules": [
            {
                "t": "set",
                "p": "aoi",
                "pt": "flow",
                "to": "payload",
                "tot": "msg"
            }
        ],
        "action": "",
        "property": "",
        "from": "",
        "to": "",
        "reg": false,
        "x": 590,
        "y": 1140,
        "wires": [
            []
        ]
    },
    {
        "id": "5f7d0429941b618a",
        "type": "ui_button",
        "z": "d3e594f4c1b5a442",
        "g": "44b723337ad03c14",
        "name": "",
        "group": "fd00135cf645147f",
        "order": 1,
        "width": "3",
        "height": "1",
        "passthru": true,
        "label": "Play",
        "tooltip": "",
        "color": "",
        "bgcolor": "",
        "className": "",
        "icon": "",
        "payload": "",
        "payloadType": "str",
        "topic": "topic",
        "topicType": "msg",
        "x": 380,
        "y": 1300,
        "wires": [
            [
                "0e9d1a6a833f3ee9"
            ]
        ]
    },
    {
        "id": "b89e987f9d031100",
        "type": "function",
        "z": "d3e594f4c1b5a442",
        "g": "44b723337ad03c14",
        "name": "Update",
        "func": "msg.query = {\n    device: flow.get(\"device\").serial || \"Undefined\"\n}\n\nmsg.payload = {\n    device: flow.get(\"device\").serial || \"Undefined\",\n    name: flow.get(\"name\") || flow.get(\"device\").hostname || flow.get(\"device\").name,\n    timestamp: new Date().getTime(),\n    rotation: msg.payload.rotation,\n    aspect: msg.payload.aspect,\n    image: msg.payload.image\n}\n\nmsg.topic = \"image/\" + flow.get(\"device\").serial || \"Undefined\";\n\n\nreturn msg;",
        "outputs": 1,
        "timeout": 0,
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "libs": [],
        "x": 1110,
        "y": 1300,
        "wires": [
            []
        ]
    },
    {
        "id": "0e9d1a6a833f3ee9",
        "type": "function",
        "z": "d3e594f4c1b5a442",
        "g": "44b723337ad03c14",
        "name": "Resolution",
        "func": "var camera = flow.get(\"camera\");\nif(!camera)\n    return;\n\nswitch( camera.aspect ) {\n    case \"4:3\":\n        msg.resolution = \"800x600\"\n        break;\n    case \"1:1\":\n        msg.resolution = \"800x800\"\n        break;\n    case \"16:9\":\n    default:\n        msg.resolution = \"1280x720\"\n}\n\nreturn msg;",
        "outputs": 1,
        "timeout": 0,
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "libs": [],
        "x": 550,
        "y": 1300,
        "wires": [
            [
                "43306e70bc9e1d85"
            ]
        ]
    },
    {
        "id": "0ca3b611f08ed489",
        "type": "inject",
        "z": "d3e594f4c1b5a442",
        "name": "",
        "props": [
            {
                "p": "payload"
            },
            {
                "p": "topic",
                "vt": "str"
            }
        ],
        "repeat": "",
        "crontab": "",
        "once": true,
        "onceDelay": "0.5",
        "topic": "",
        "payload": "",
        "payloadType": "date",
        "x": 130,
        "y": 800,
        "wires": [
            [
                "ae86a1ad84d0de26"
            ]
        ]
    },
    {
        "id": "2def7914d430e300",
        "type": "Objects",
        "z": "d3e594f4c1b5a442",
        "g": "d79e1a4e464ac050",
        "version": "2",
        "output": "1",
        "classFilter": "-1",
        "confidence": "10",
        "rotation": "0",
        "cog": "0",
        "predictions": "0",
        "attributes": "50",
        "idle": "60",
        "x": 380,
        "y": 280,
        "wires": [
            [
                "d9beff0a112f2eca"
            ]
        ]
    },
    {
        "id": "d9beff0a112f2eca",
        "type": "function",
        "z": "d3e594f4c1b5a442",
        "g": "d79e1a4e464ac050",
        "name": "Detection Filter",
        "func": "msg.topic = \"detections\";\nvar distance = flow.get(\"distance\") || 0;\nvar confidence = flow.get(\"confidence\") || 10;\nvar age = flow.get(\"age\") || 0;\nvar classes = flow.get(\"classes\");\nvar aoi = flow.get(\"aoi\") || null;\nvar list = [];\n\nmsg.payload.forEach( function(item){\n    if (msg.payload.confidnece < confidence)\n        return;\n    if( item.age < 0)\n        return;\n    var dx = (item.cx - item.bx);\n    dx = dx * dx;\n    var dy = (item.cy - item.by);\n    dy = dy * dy;\n    item.distance = parseInt(Math.sqrt(dx+dy)/10);\n    if( item.distance < distance )\n        return;\n\n    var ignoreClass = true;\n    classes.forEach(function (element) {\n        if (element === item.class)\n            ignoreClass = false;\n    });\n    if (ignoreClass)\n        return;\n\n    if (aoi) {\n        if( item.cx < aoi.x1 )\n            return;\n        if (item.cx > aoi.x2)\n            return;\n        if (item.cy < aoi.y1)\n            return;\n        if (item.cy > aoi.y2)\n            return;\n    }\n    list.push(item);\n});\n\nif( list.length === 0 )\n    return 0;\nmsg.payload = list;\nnode.send(msg);\n\n\n",
        "outputs": 1,
        "timeout": 0,
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "libs": [],
        "x": 640,
        "y": 280,
        "wires": [
            [
                "3e9f521d9340ad0b",
                "fd1793089c6a8a79"
            ]
        ]
    },
    {
        "id": "3e9f521d9340ad0b",
        "type": "link out",
        "z": "d3e594f4c1b5a442",
        "name": "link out 14",
        "mode": "link",
        "links": [
            "a9c091aafd668c97",
            "5bdd7e0928396937"
        ],
        "x": 1105,
        "y": 280,
        "wires": []
    },
    {
        "id": "96f99c646bc141ac",
        "type": "function",
        "z": "d3e594f4c1b5a442",
        "g": "44b723337ad03c14",
        "name": "Image",
        "func": "msg.topic = \"image\";\n\nmsg.payload = {\n    aspect: flow.get(\"aspect\") || \"16:9\",\n    rotation: flow.get(\"rotation\") || \"Landscape\",\n    image: msg.payload\n}\n\nreturn msg;",
        "outputs": 1,
        "timeout": 0,
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "libs": [],
        "x": 900,
        "y": 1300,
        "wires": [
            [
                "b89e987f9d031100",
                "66d5182f49466546"
            ]
        ]
    },
    {
        "id": "43306e70bc9e1d85",
        "type": "Camera",
        "z": "d3e594f4c1b5a442",
        "g": "44b723337ad03c14",
        "resolution": "1280x720",
        "overlay": "yes",
        "channel": "1",
        "output": "buffer",
        "x": 740,
        "y": 1300,
        "wires": [
            [
                "96f99c646bc141ac"
            ]
        ]
    },
    {
        "id": "b598c5c02bb3a020",
        "type": "change",
        "z": "d3e594f4c1b5a442",
        "g": "44b723337ad03c14",
        "name": "Recording",
        "rules": [
            {
                "t": "set",
                "p": "topic",
                "pt": "msg",
                "to": "recording",
                "tot": "str"
            },
            {
                "t": "set",
                "p": "payload",
                "pt": "msg",
                "to": "true",
                "tot": "bool"
            }
        ],
        "action": "",
        "property": "",
        "from": "",
        "to": "",
        "reg": false,
        "x": 350,
        "y": 1380,
        "wires": [
            [
                "c853522f3311dcaa"
            ]
        ]
    },
    {
        "id": "aa9c1a3d8ea38137",
        "type": "change",
        "z": "d3e594f4c1b5a442",
        "g": "44b723337ad03c14",
        "name": "Not Recording",
        "rules": [
            {
                "t": "set",
                "p": "topic",
                "pt": "msg",
                "to": "recording",
                "tot": "str"
            },
            {
                "t": "set",
                "p": "payload",
                "pt": "msg",
                "to": "false",
                "tot": "bool"
            }
        ],
        "action": "",
        "property": "",
        "from": "",
        "to": "",
        "reg": false,
        "x": 360,
        "y": 1420,
        "wires": [
            [
                "c853522f3311dcaa"
            ]
        ]
    },
    {
        "id": "6e809c69491d80e8",
        "type": "function",
        "z": "d3e594f4c1b5a442",
        "g": "44b723337ad03c14",
        "name": "Method",
        "func": "msg.payload = flow.get(\"method\") || \"None\";\nreturn msg;",
        "outputs": 1,
        "timeout": 0,
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "libs": [],
        "x": 420,
        "y": 860,
        "wires": [
            [
                "6631c486e160b6f5"
            ]
        ]
    },
    {
        "id": "6631c486e160b6f5",
        "type": "ui_dropdown",
        "z": "d3e594f4c1b5a442",
        "g": "44b723337ad03c14",
        "name": "Method",
        "label": "Method",
        "tooltip": "",
        "place": "Select detection",
        "group": "f4c210307d84a469",
        "order": 1,
        "width": 0,
        "height": 0,
        "passthru": true,
        "multiple": false,
        "options": [
            {
                "label": "No Recording",
                "value": "None",
                "type": "str"
            },
            {
                "label": "FMR",
                "value": "FMR",
                "type": "str"
            },
            {
                "label": "SD Card",
                "value": "SD",
                "type": "str"
            },
            {
                "label": "ACS",
                "value": "ACS",
                "type": "str"
            },
            {
                "label": "",
                "value": "",
                "type": "str"
            }
        ],
        "payload": "",
        "topic": "topic",
        "topicType": "msg",
        "className": "",
        "x": 600,
        "y": 860,
        "wires": [
            [
                "0641bd93e983562a"
            ]
        ]
    },
    {
        "id": "0641bd93e983562a",
        "type": "change",
        "z": "d3e594f4c1b5a442",
        "g": "44b723337ad03c14",
        "name": "",
        "rules": [
            {
                "t": "set",
                "p": "method",
                "pt": "flow",
                "to": "payload",
                "tot": "msg",
                "dc": true
            }
        ],
        "action": "",
        "property": "",
        "from": "",
        "to": "",
        "reg": false,
        "x": 880,
        "y": 860,
        "wires": [
            []
        ]
    },
    {
        "id": "04ce100da8567911",
        "type": "change",
        "z": "d3e594f4c1b5a442",
        "g": "44b723337ad03c14",
        "name": "flow.bufferTime",
        "rules": [
            {
                "t": "set",
                "p": "payload",
                "pt": "msg",
                "to": "buffer",
                "tot": "flow"
            }
        ],
        "action": "",
        "property": "",
        "from": "",
        "to": "",
        "reg": false,
        "x": 440,
        "y": 900,
        "wires": [
            [
                "bd11e8999b4132cc"
            ]
        ]
    },
    {
        "id": "bd11e8999b4132cc",
        "type": "ui_numeric",
        "z": "d3e594f4c1b5a442",
        "g": "44b723337ad03c14",
        "name": "",
        "label": "Pre/Post buffer",
        "tooltip": "",
        "group": "f4c210307d84a469",
        "order": 2,
        "width": 0,
        "height": 0,
        "wrap": false,
        "passthru": true,
        "topic": "topic",
        "topicType": "msg",
        "format": "{{value}}",
        "min": "1",
        "max": "30",
        "step": 1,
        "className": "",
        "x": 620,
        "y": 900,
        "wires": [
            [
                "9ccc5460a1ab22ca"
            ]
        ]
    },
    {
        "id": "9ccc5460a1ab22ca",
        "type": "change",
        "z": "d3e594f4c1b5a442",
        "g": "44b723337ad03c14",
        "name": "",
        "rules": [
            {
                "t": "set",
                "p": "bufferTime",
                "pt": "flow",
                "to": "payload",
                "tot": "msg",
                "dc": true
            }
        ],
        "action": "",
        "property": "",
        "from": "",
        "to": "",
        "reg": false,
        "x": 890,
        "y": 900,
        "wires": [
            [
                "07dafc91d0934796"
            ]
        ]
    },
    {
        "id": "89395ebe29f325eb",
        "type": "link out",
        "z": "d3e594f4c1b5a442",
        "name": "Start recording",
        "mode": "link",
        "links": [
            "96eb1cf2e47a1f89",
            "fd453bb82bccd9b5",
            "eaa5444880cf4e18"
        ],
        "x": 1105,
        "y": 320,
        "wires": []
    },
    {
        "id": "96eb1cf2e47a1f89",
        "type": "link in",
        "z": "d3e594f4c1b5a442",
        "name": "link in 11",
        "links": [
            "89395ebe29f325eb"
        ],
        "x": 215,
        "y": 1380,
        "wires": [
            [
                "b598c5c02bb3a020"
            ]
        ]
    },
    {
        "id": "2569b2a24dea79ab",
        "type": "link out",
        "z": "d3e594f4c1b5a442",
        "name": "Stop Recording",
        "mode": "link",
        "links": [
            "a0439a0434da876c",
            "914505f816c9b569",
            "b9d1e11f0e364ade"
        ],
        "x": 1105,
        "y": 360,
        "wires": []
    },
    {
        "id": "a0439a0434da876c",
        "type": "link in",
        "z": "d3e594f4c1b5a442",
        "name": "link in 12",
        "links": [
            "2569b2a24dea79ab"
        ],
        "x": 215,
        "y": 1420,
        "wires": [
            [
                "aa9c1a3d8ea38137"
            ]
        ]
    },
    {
        "id": "fd453bb82bccd9b5",
        "type": "link in",
        "z": "d3e594f4c1b5a442",
        "name": "link in 13",
        "links": [
            "89395ebe29f325eb"
        ],
        "x": 215,
        "y": 480,
        "wires": [
            [
                "625ad64d3fa35e55"
            ]
        ]
    },
    {
        "id": "b574c35e5cc86061",
        "type": "comment",
        "z": "d3e594f4c1b5a442",
        "name": "LED On",
        "info": "",
        "x": 140,
        "y": 1380,
        "wires": []
    },
    {
        "id": "ff96f03e8499c74d",
        "type": "comment",
        "z": "d3e594f4c1b5a442",
        "name": "LED Off",
        "info": "",
        "x": 150,
        "y": 1420,
        "wires": []
    },
    {
        "id": "914505f816c9b569",
        "type": "link in",
        "z": "d3e594f4c1b5a442",
        "name": "link in 14",
        "links": [
            "2569b2a24dea79ab"
        ],
        "x": 215,
        "y": 520,
        "wires": [
            [
                "9931c8a78dee2ee9"
            ]
        ]
    },
    {
        "id": "0afb0a7520ad16b3",
        "type": "switch",
        "z": "d3e594f4c1b5a442",
        "g": "149675fa95b8aff8",
        "name": "FMR",
        "property": "method",
        "propertyType": "flow",
        "rules": [
            {
                "t": "eq",
                "v": "FMR",
                "vt": "str"
            }
        ],
        "checkall": "true",
        "repair": false,
        "outputs": 1,
        "x": 400,
        "y": 480,
        "wires": [
            [
                "bb542cee8aecb99d"
            ]
        ]
    },
    {
        "id": "3028a86de1375289",
        "type": "switch",
        "z": "d3e594f4c1b5a442",
        "g": "149675fa95b8aff8",
        "name": "FMR",
        "property": "method",
        "propertyType": "flow",
        "rules": [
            {
                "t": "eq",
                "v": "FMR",
                "vt": "str"
            }
        ],
        "checkall": "true",
        "repair": false,
        "outputs": 1,
        "x": 400,
        "y": 520,
        "wires": [
            [
                "5cc6e568f52c4ba9"
            ]
        ]
    },
    {
        "id": "fd1793089c6a8a79",
        "type": "switch",
        "z": "d3e594f4c1b5a442",
        "g": "d79e1a4e464ac050",
        "name": "Method",
        "property": "method",
        "propertyType": "flow",
        "rules": [
            {
                "t": "neq",
                "v": "None",
                "vt": "str"
            }
        ],
        "checkall": "true",
        "repair": false,
        "outputs": 1,
        "x": 800,
        "y": 320,
        "wires": [
            [
                "f939cad88258d2e0"
            ]
        ]
    },
    {
        "id": "2fbe3799a0384f6b",
        "type": "comment",
        "z": "d3e594f4c1b5a442",
        "name": "Detections",
        "info": "",
        "x": 1190,
        "y": 280,
        "wires": []
    },
    {
        "id": "6837d28ba6f19803",
        "type": "comment",
        "z": "d3e594f4c1b5a442",
        "name": "Start recording",
        "info": "",
        "x": 1220,
        "y": 320,
        "wires": []
    },
    {
        "id": "90228fb418ba1230",
        "type": "comment",
        "z": "d3e594f4c1b5a442",
        "name": "Stop recording",
        "info": "",
        "x": 1220,
        "y": 360,
        "wires": []
    },
    {
        "id": "10afc9ac802ba521",
        "type": "comment",
        "z": "d3e594f4c1b5a442",
        "name": "Start recording",
        "info": "",
        "x": 120,
        "y": 480,
        "wires": []
    },
    {
        "id": "1ff5ac98538e5c22",
        "type": "comment",
        "z": "d3e594f4c1b5a442",
        "name": "Stop recording",
        "info": "",
        "x": 120,
        "y": 520,
        "wires": []
    },
    {
        "id": "8232c1c51f6ea24d",
        "type": "comment",
        "z": "d3e594f4c1b5a442",
        "name": "Visualize",
        "info": "",
        "x": 140,
        "y": 1140,
        "wires": []
    },
    {
        "id": "1938b14ee417171a",
        "type": "comment",
        "z": "d3e594f4c1b5a442",
        "name": "Video",
        "info": "",
        "x": 150,
        "y": 1300,
        "wires": []
    },
    {
        "id": "cfe58c82449aee84",
        "type": "link out",
        "z": "d3e594f4c1b5a442",
        "name": "AOI",
        "mode": "link",
        "links": [
            "a9c091aafd668c97"
        ],
        "x": 1315,
        "y": 1180,
        "wires": []
    },
    {
        "id": "07dafc91d0934796",
        "type": "debug",
        "z": "d3e594f4c1b5a442",
        "name": "debug 159",
        "active": true,
        "tosidebar": true,
        "console": false,
        "tostatus": false,
        "complete": "false",
        "statusVal": "",
        "statusType": "auto",
        "x": 1390,
        "y": 900,
        "wires": []
    },
    {
        "id": "c853522f3311dcaa",
        "type": "ui_led",
        "z": "d3e594f4c1b5a442",
        "g": "44b723337ad03c14",
        "order": 2,
        "group": "fd00135cf645147f",
        "width": "3",
        "height": "1",
        "label": "Recording",
        "labelPlacement": "left",
        "labelAlignment": "left",
        "colorForValue": [
            {
                "color": "#ff0000",
                "value": "true",
                "valueType": "bool"
            },
            {
                "color": "#c0c0c0",
                "value": "true",
                "valueType": "bool"
            }
        ],
        "allowColorForValueInMessage": false,
        "shape": "circle",
        "showGlow": true,
        "name": "",
        "x": 590,
        "y": 1420,
        "wires": []
    },
    {
        "id": "705a8dd80e0a9579",
        "type": "inject",
        "z": "d3e594f4c1b5a442",
        "g": "d79e1a4e464ac050",
        "name": "Test",
        "props": [
            {
                "p": "payload"
            },
            {
                "p": "topic",
                "vt": "str"
            }
        ],
        "repeat": "",
        "crontab": "",
        "once": false,
        "onceDelay": 0.1,
        "topic": "",
        "payload": "",
        "payloadType": "date",
        "x": 810,
        "y": 360,
        "wires": [
            [
                "f939cad88258d2e0"
            ]
        ]
    },
    {
        "id": "4f0afbb81410cd6a",
        "type": "switch",
        "z": "d3e594f4c1b5a442",
        "g": "149675fa95b8aff8",
        "name": "SD",
        "property": "method",
        "propertyType": "flow",
        "rules": [
            {
                "t": "eq",
                "v": "SD",
                "vt": "str"
            }
        ],
        "checkall": "true",
        "repair": false,
        "outputs": 1,
        "x": 400,
        "y": 560,
        "wires": [
            [
                "7d5503ceb112aa8d"
            ]
        ]
    },
    {
        "id": "76a011e33c1b54c3",
        "type": "switch",
        "z": "d3e594f4c1b5a442",
        "g": "149675fa95b8aff8",
        "name": "SD",
        "property": "method",
        "propertyType": "flow",
        "rules": [
            {
                "t": "eq",
                "v": "SD",
                "vt": "str"
            }
        ],
        "checkall": "true",
        "repair": false,
        "outputs": 1,
        "x": 400,
        "y": 600,
        "wires": [
            [
                "6ff30cf97e38434b"
            ]
        ]
    },
    {
        "id": "7d5503ceb112aa8d",
        "type": "change",
        "z": "d3e594f4c1b5a442",
        "g": "149675fa95b8aff8",
        "name": "true",
        "rules": [
            {
                "t": "set",
                "p": "payload",
                "pt": "msg",
                "to": "true",
                "tot": "bool"
            }
        ],
        "action": "",
        "property": "",
        "from": "",
        "to": "",
        "reg": false,
        "x": 540,
        "y": 560,
        "wires": [
            [
                "7d42b3b4d83eb402"
            ]
        ]
    },
    {
        "id": "6ff30cf97e38434b",
        "type": "change",
        "z": "d3e594f4c1b5a442",
        "g": "149675fa95b8aff8",
        "name": "false",
        "rules": [
            {
                "t": "set",
                "p": "payload",
                "pt": "msg",
                "to": "false",
                "tot": "bool"
            }
        ],
        "action": "",
        "property": "",
        "from": "",
        "to": "",
        "reg": false,
        "x": 540,
        "y": 600,
        "wires": [
            [
                "7d42b3b4d83eb402"
            ]
        ]
    },
    {
        "id": "7d42b3b4d83eb402",
        "type": "Trigger",
        "z": "d3e594f4c1b5a442",
        "g": "149675fa95b8aff8",
        "eventId": "state",
        "value": "",
        "x": 790,
        "y": 560,
        "wires": []
    },
    {
        "id": "eff7067b8abb104a",
        "type": "mqtt out",
        "z": "d3e594f4c1b5a442",
        "g": "be5522938d927ccf",
        "name": "exception/Detection_Recording_Control/",
        "topic": "",
        "qos": "",
        "retain": "",
        "respTopic": "",
        "contentType": "",
        "userProps": "",
        "correl": "",
        "expiry": "",
        "broker": "d1d53d1e87be4083",
        "x": 860,
        "y": 160,
        "wires": []
    },
    {
        "id": "a44ae201174425b2",
        "type": "comment",
        "z": "d3e594f4c1b5a442",
        "name": "Version 1.0.0",
        "info": "",
        "x": 110,
        "y": 60,
        "wires": []
    },
    {
        "id": "3d17b06ee4eaf2f2",
        "type": "inject",
        "z": "d3e594f4c1b5a442",
        "g": "be5522938d927ccf",
        "name": "",
        "props": [
            {
                "p": "payload"
            },
            {
                "p": "topic",
                "vt": "str"
            }
        ],
        "repeat": "",
        "crontab": "",
        "once": true,
        "onceDelay": 0.1,
        "topic": "",
        "payload": "",
        "payloadType": "date",
        "x": 370,
        "y": 80,
        "wires": [
            [
                "65929e36b5c59bf5"
            ]
        ]
    },
    {
        "id": "65929e36b5c59bf5",
        "type": "Axis device",
        "z": "d3e594f4c1b5a442",
        "g": "be5522938d927ccf",
        "name": "",
        "preset": "a5d60ef5587cc8fc",
        "action": "Device Info",
        "cgi": "",
        "data": "",
        "options": "",
        "filename": "",
        "x": 590,
        "y": 80,
        "wires": [
            [
                "3c288c067f6cd691"
            ]
        ]
    },
    {
        "id": "3c288c067f6cd691",
        "type": "change",
        "z": "d3e594f4c1b5a442",
        "g": "be5522938d927ccf",
        "name": "",
        "rules": [
            {
                "t": "set",
                "p": "camera",
                "pt": "flow",
                "to": "payload",
                "tot": "msg"
            }
        ],
        "action": "",
        "property": "",
        "from": "",
        "to": "",
        "reg": false,
        "x": 790,
        "y": 80,
        "wires": [
            []
        ]
    },
    {
        "id": "5b75c77d1a606cc1",
        "type": "function",
        "z": "d3e594f4c1b5a442",
        "g": "be5522938d927ccf",
        "name": "Message",
        "func": "msg.topic = \"exception/Detection_Recording_Control/\" + flow.get(\"camere\").serial;\nmsg.payload = msg.error.message;\nreturn msg;",
        "outputs": 1,
        "timeout": 0,
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "libs": [],
        "x": 580,
        "y": 160,
        "wires": [
            [
                "eff7067b8abb104a"
            ]
        ]
    },
    {
        "id": "342a855c997c7b94",
        "type": "Device Access",
        "name": "Localhost",
        "address": "localhost",
        "protocol": "http"
    },
    {
        "id": "f4c210307d84a469",
        "type": "ui_group",
        "name": "Settings",
        "tab": "d390426b2ada9bad",
        "order": 2,
        "disp": true,
        "width": "6",
        "collapse": false,
        "className": ""
    },
    {
        "id": "fd00135cf645147f",
        "type": "ui_group",
        "name": "Visualize",
        "tab": "d390426b2ada9bad",
        "order": 3,
        "disp": false,
        "width": "16",
        "collapse": false,
        "className": ""
    },
    {
        "id": "d1d53d1e87be4083",
        "type": "mqtt-broker",
        "name": "MQTT Broker",
        "broker": "10.13.8.20",
        "port": "1883",
        "clientid": "",
        "autoConnect": true,
        "usetls": false,
        "protocolVersion": "4",
        "keepalive": "60",
        "cleansession": true,
        "autoUnsubscribe": true,
        "birthTopic": "",
        "birthQos": "0",
        "birthRetain": "false",
        "birthPayload": "",
        "birthMsg": {},
        "closeTopic": "",
        "closeQos": "0",
        "closeRetain": "false",
        "closePayload": "",
        "closeMsg": {},
        "willTopic": "",
        "willQos": "0",
        "willRetain": "false",
        "willPayload": "",
        "willMsg": {},
        "userProps": "",
        "sessionExpiry": ""
    },
    {
        "id": "a5d60ef5587cc8fc",
        "type": "Device Access",
        "name": "Localhost",
        "address": "localhost",
        "protocol": "http"
    },
    {
        "id": "d390426b2ada9bad",
        "type": "ui_tab",
        "name": "Recording",
        "icon": "dashboard",
        "order": 2,
        "disabled": false,
        "hidden": false
    }
]
