[
    {
        "id": "7fdd2a14a1d9f9e3",
        "type": "tab",
        "label": "Path Ingestion",
        "disabled": false,
        "info": "",
        "env": []
    },
    {
        "id": "39d361e75a36a207",
        "type": "group",
        "z": "7fdd2a14a1d9f9e3",
        "name": "Data Ingestion",
        "style": {
            "stroke": "#000000",
            "fill": "#e3f3d3",
            "label": true,
            "color": "#000000"
        },
        "nodes": [
            "38c494fe6806b503",
            "2c66ad81078c38b8",
            "e8db2fe5360aca9a",
            "5c48a4d99f5be04f",
            "25b37c99b2d94e7a",
            "a4904043958e597e",
            "c3e721d6277884a5"
        ],
        "x": 94,
        "y": 79,
        "w": 652,
        "h": 182
    },
    {
        "id": "55f0e6e13fef9b04",
        "type": "group",
        "z": "7fdd2a14a1d9f9e3",
        "name": "Initialization",
        "style": {
            "stroke": "#000000",
            "fill": "#ffffbf",
            "label": true,
            "color": "#000000"
        },
        "nodes": [
            "b7871555dbd48d1f",
            "464600b4076f1c59",
            "6fcbab0412812348",
            "90a13abbf6b6cdc4",
            "088b3b3a81a9b59a",
            "1615c38b61935e87",
            "ddaaedab435479c5",
            "df777c3f4205f6ac",
            "63f1529357d55368",
            "59e8bfbdbd6c2798",
            "1b175003dc76abcf",
            "b873aa83b70f723d",
            "5abda0919db03979",
            "48f5132370013ca1",
            "0bd2df5079b488ae",
            "13a845e65bb5c94c",
            "297b824ee081961d",
            "42289437abd8d34d",
            "cee2fa95c738a94a",
            "607f36becdfa7c17",
            "f158e546b725f1ad",
            "d1e65b27161f9d6e",
            "f18f09de84624253",
            "441ba367bf81629f",
            "72e1deb01e99f14f",
            "dd86b8c08d61883c",
            "ce9a03f037ef9942",
            "94e656f94d354c1e",
            "548cb4b1ac7faf5c",
            "0dc2cbd4073427f9"
        ],
        "x": 94,
        "y": 699,
        "w": 1012,
        "h": 402
    },
    {
        "id": "69945eadd659c072",
        "type": "group",
        "z": "7fdd2a14a1d9f9e3",
        "name": "Dashboard",
        "style": {
            "stroke": "#000000",
            "fill": "#bfdbef",
            "label": true,
            "color": "#000000"
        },
        "nodes": [
            "d6fd58da09c8d814",
            "363da00bca91238c",
            "5ef3d2591b4ca170",
            "bb82d8d22007bfdd",
            "c690eae981c7d257",
            "a8864b5bc1369965",
            "9a4f7cf81e639866",
            "a9a1e6dec1b2eac2",
            "8a446b60b40007ba",
            "2206c1829ff2a9b2",
            "3ec1dfe8f6c0fbcf",
            "4e796b3ae4442a4a",
            "dc94fdd1eebd7faa",
            "eff2af87e15a8ec5",
            "b4a545e3d7e1a2e0",
            "6418ddd6036068a5",
            "fd0de2a0d9d66061",
            "1465274f4c07f99d",
            "fda99a1186d72bc2",
            "ae1a624af4ec4195",
            "ce44fbec843bcf7d",
            "727e86f0c0853b77",
            "7307295e0c7b7a1d"
        ],
        "x": 94,
        "y": 319,
        "w": 1192,
        "h": 322
    },
    {
        "id": "38c494fe6806b503",
        "type": "Objects",
        "z": "7fdd2a14a1d9f9e3",
        "g": "39d361e75a36a207",
        "version": "2",
        "output": "3",
        "classFilter": "-1",
        "confidence": "20",
        "rotation": "0",
        "cog": "0",
        "predictions": "0",
        "attributes": "50",
        "idle": "60",
        "x": 200,
        "y": 120,
        "wires": [
            [
                "e8db2fe5360aca9a"
            ]
        ]
    },
    {
        "id": "2c66ad81078c38b8",
        "type": "function",
        "z": "7fdd2a14a1d9f9e3",
        "g": "39d361e75a36a207",
        "name": "Set name",
        "func": "msg.topic = \"path\";\nmsg.payload.device = flow.get(\"device\").serial;\nmsg.payload.name = flow.get(\"name\") || flow.get(\"device\").hostname || flow.get(\"device\").name;\n\nvar d = new Date(msg.payload.timestamp);\nmsg.payload.localTime = d.getFullYear() + '-';\nmsg.payload.localTime += (\"00\" + (d.getMonth() + 1)).slice(-2) + '-';\nmsg.payload.localTime += (\"00\" + d.getDate()).slice(-2) + ' ';\nmsg.payload.localTime += (\"00\" + d.getHours()).slice(-2) + ':';\nmsg.payload.localTime += (\"00\" + d.getMinutes()).slice(-2) + ':';\nmsg.payload.localTime += (\"00\" + d.getSeconds()).slice(-2);\nreturn msg;",
        "outputs": 1,
        "timeout": 0,
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "libs": [],
        "x": 520,
        "y": 120,
        "wires": [
            [
                "5c48a4d99f5be04f",
                "a52c1352f17c8f68"
            ]
        ]
    },
    {
        "id": "e8db2fe5360aca9a",
        "type": "function",
        "z": "7fdd2a14a1d9f9e3",
        "g": "39d361e75a36a207",
        "name": "Filter",
        "func": "//Filter minimum distance\nvar distance = flow.get(\"distance\") || 0;\nif( msg.payload.distance < distance)  \n    return;\n\n//Filter minimum confidence\nvar confidence = flow.get(\"confidence\") || 10;\nif( msg.payload.confidnece < confidence )\n    return;\n\n//Filter minimum age\nvar age = flow.get(\"age\") || 0;\nif( msg.payload.age < age)  \n    return;\n\n//Filter object class type\nvar classes= flow.get(\"classes\");\nvar ignoreClass = true;\nclasses.forEach(function(element) {\n    if( element === msg.payload.class)\n        ignoreClass = false;\n});\nif(ignoreClass)\n    return;\n\n//Filter object passed Area Of Intrest\nvar aoi = flow.get(\"aoi\") ||null;\nif( aoi ) {\n    var ignore = true;\n    msg.payload.path.forEach(function(position) {\n        if (ignore && \n            position.x >= aoi.x1 && \n            position.x <= aoi.x2 &&\n            position.y >= aoi.y1 &&\n            position.y <= aoi.y2)\n                ignore = false;\n    });\n    if( ignore )\n        return;\n}\n\n//All filters passed\n\nreturn msg;",
        "outputs": 1,
        "timeout": 0,
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "libs": [],
        "x": 370,
        "y": 120,
        "wires": [
            [
                "2c66ad81078c38b8"
            ]
        ]
    },
    {
        "id": "25b37c99b2d94e7a",
        "type": "inject",
        "z": "7fdd2a14a1d9f9e3",
        "g": "39d361e75a36a207",
        "name": "",
        "props": [
            {
                "p": "payload"
            },
            {
                "p": "topic",
                "vt": "str"
            }
        ],
        "repeat": "",
        "crontab": "00 00 * * *",
        "once": false,
        "onceDelay": 0.1,
        "topic": "",
        "payload": "",
        "payloadType": "date",
        "x": 210,
        "y": 220,
        "wires": [
            [
                "a4904043958e597e"
            ]
        ]
    },
    {
        "id": "a4904043958e597e",
        "type": "function",
        "z": "7fdd2a14a1d9f9e3",
        "g": "39d361e75a36a207",
        "name": "Data Retention",
        "func": "var days = 30;\n//Change above to desired number of days to retain data\n\nmsg.payload = {\n    device: flow.get(\"device\").serial || \"Undefined\",\n    timestamp: {\n        $lte: new Date().getTime() - (days * 24 * 3600 * 1000)\n    }\n}\nreturn msg;",
        "outputs": 1,
        "timeout": 0,
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "libs": [],
        "x": 420,
        "y": 220,
        "wires": [
            [
                "c3e721d6277884a5"
            ]
        ]
    },
    {
        "id": "a52c1352f17c8f68",
        "type": "link out",
        "z": "7fdd2a14a1d9f9e3",
        "name": "Path",
        "mode": "link",
        "links": [
            "c36bbbe7700df794"
        ],
        "x": 795,
        "y": 120,
        "wires": []
    },
    {
        "id": "c3e721d6277884a5",
        "type": "mongodb out",
        "z": "7fdd2a14a1d9f9e3",
        "g": "39d361e75a36a207",
        "mongodb": "05eda5dd0cdc32a0",
        "name": "Remove",
        "collection": "path",
        "payonly": false,
        "upsert": false,
        "multi": false,
        "operation": "delete",
        "x": 660,
        "y": 220,
        "wires": []
    },
    {
        "id": "5c48a4d99f5be04f",
        "type": "mongodb out",
        "z": "7fdd2a14a1d9f9e3",
        "g": "39d361e75a36a207",
        "mongodb": "05eda5dd0cdc32a0",
        "name": "Insert",
        "collection": "path",
        "payonly": true,
        "upsert": false,
        "multi": false,
        "operation": "store",
        "x": 670,
        "y": 160,
        "wires": []
    },
    {
        "id": "b7871555dbd48d1f",
        "type": "Axis device",
        "z": "7fdd2a14a1d9f9e3",
        "g": "55f0e6e13fef9b04",
        "name": "",
        "preset": "a5d60ef5587cc8fc",
        "action": "Device Info",
        "cgi": "",
        "data": "",
        "options": "",
        "filename": "",
        "x": 610,
        "y": 980,
        "wires": [
            [
                "6fcbab0412812348"
            ]
        ]
    },
    {
        "id": "464600b4076f1c59",
        "type": "inject",
        "z": "7fdd2a14a1d9f9e3",
        "g": "55f0e6e13fef9b04",
        "name": "",
        "props": [
            {
                "p": "payload"
            },
            {
                "p": "topic",
                "vt": "str"
            }
        ],
        "repeat": "",
        "crontab": "",
        "once": true,
        "onceDelay": "0.5",
        "topic": "",
        "payload": "",
        "payloadType": "date",
        "x": 210,
        "y": 740,
        "wires": [
            [
                "90a13abbf6b6cdc4",
                "1615c38b61935e87",
                "13a845e65bb5c94c",
                "b873aa83b70f723d",
                "5abda0919db03979",
                "42289437abd8d34d",
                "72e1deb01e99f14f",
                "94e656f94d354c1e"
            ]
        ]
    },
    {
        "id": "6fcbab0412812348",
        "type": "change",
        "z": "7fdd2a14a1d9f9e3",
        "g": "55f0e6e13fef9b04",
        "name": "",
        "rules": [
            {
                "t": "set",
                "p": "device",
                "pt": "flow",
                "to": "payload",
                "tot": "msg"
            }
        ],
        "action": "",
        "property": "",
        "from": "",
        "to": "",
        "reg": false,
        "x": 900,
        "y": 980,
        "wires": [
            []
        ]
    },
    {
        "id": "90a13abbf6b6cdc4",
        "type": "change",
        "z": "7fdd2a14a1d9f9e3",
        "g": "55f0e6e13fef9b04",
        "name": "Authentication",
        "rules": [
            {
                "t": "set",
                "p": "address",
                "pt": "msg",
                "to": "localhost",
                "tot": "str"
            },
            {
                "t": "set",
                "p": "user",
                "pt": "msg",
                "to": "root",
                "tot": "str"
            },
            {
                "t": "set",
                "p": "password",
                "pt": "msg",
                "to": "pass",
                "tot": "str"
            }
        ],
        "action": "",
        "property": "",
        "from": "",
        "to": "",
        "reg": false,
        "x": 420,
        "y": 980,
        "wires": [
            [
                "b7871555dbd48d1f"
            ]
        ]
    },
    {
        "id": "088b3b3a81a9b59a",
        "type": "ui_slider",
        "z": "7fdd2a14a1d9f9e3",
        "g": "55f0e6e13fef9b04",
        "name": "",
        "label": "Strength",
        "tooltip": "",
        "group": "4ad72f6f7680bff1",
        "order": 5,
        "width": "13",
        "height": "1",
        "passthru": true,
        "outs": "end",
        "topic": "strength",
        "topicType": "str",
        "min": "5",
        "max": "100",
        "step": "0.5",
        "className": "",
        "x": 600,
        "y": 740,
        "wires": [
            [
                "ddaaedab435479c5"
            ]
        ]
    },
    {
        "id": "1615c38b61935e87",
        "type": "change",
        "z": "7fdd2a14a1d9f9e3",
        "g": "55f0e6e13fef9b04",
        "name": "strength",
        "rules": [
            {
                "t": "set",
                "p": "payload",
                "pt": "msg",
                "to": "strength",
                "tot": "flow"
            }
        ],
        "action": "",
        "property": "",
        "from": "",
        "to": "",
        "reg": false,
        "x": 400,
        "y": 740,
        "wires": [
            [
                "088b3b3a81a9b59a"
            ]
        ]
    },
    {
        "id": "ddaaedab435479c5",
        "type": "change",
        "z": "7fdd2a14a1d9f9e3",
        "g": "55f0e6e13fef9b04",
        "name": "",
        "rules": [
            {
                "t": "set",
                "p": "strength",
                "pt": "flow",
                "to": "payload",
                "tot": "msg"
            },
            {
                "t": "set",
                "p": "topic",
                "pt": "msg",
                "to": "strength",
                "tot": "str"
            }
        ],
        "action": "",
        "property": "",
        "from": "",
        "to": "",
        "reg": false,
        "x": 900,
        "y": 740,
        "wires": [
            [
                "297b824ee081961d"
            ]
        ]
    },
    {
        "id": "df777c3f4205f6ac",
        "type": "ui_numeric",
        "z": "7fdd2a14a1d9f9e3",
        "g": "55f0e6e13fef9b04",
        "name": "",
        "label": "Min Age (seconds)",
        "tooltip": "",
        "group": "bb3220d7d52afecf",
        "order": 3,
        "width": 0,
        "height": 0,
        "wrap": false,
        "passthru": true,
        "topic": "topic",
        "topicType": "msg",
        "format": "{{value}}",
        "min": 0,
        "max": 10,
        "step": "0.5",
        "className": "",
        "x": 630,
        "y": 900,
        "wires": [
            [
                "59e8bfbdbd6c2798"
            ]
        ]
    },
    {
        "id": "63f1529357d55368",
        "type": "ui_numeric",
        "z": "7fdd2a14a1d9f9e3",
        "g": "55f0e6e13fef9b04",
        "name": "",
        "label": "Min Distance (% of view)",
        "tooltip": "",
        "group": "bb3220d7d52afecf",
        "order": 4,
        "width": 0,
        "height": 0,
        "wrap": false,
        "passthru": true,
        "topic": "topic",
        "topicType": "msg",
        "format": "{{value}}",
        "min": 0,
        "max": "100",
        "step": "10",
        "className": "",
        "x": 650,
        "y": 940,
        "wires": [
            [
                "1b175003dc76abcf"
            ]
        ]
    },
    {
        "id": "59e8bfbdbd6c2798",
        "type": "change",
        "z": "7fdd2a14a1d9f9e3",
        "g": "55f0e6e13fef9b04",
        "name": "",
        "rules": [
            {
                "t": "set",
                "p": "age",
                "pt": "flow",
                "to": "payload",
                "tot": "msg"
            }
        ],
        "action": "",
        "property": "",
        "from": "",
        "to": "",
        "reg": false,
        "x": 910,
        "y": 900,
        "wires": [
            []
        ]
    },
    {
        "id": "1b175003dc76abcf",
        "type": "change",
        "z": "7fdd2a14a1d9f9e3",
        "g": "55f0e6e13fef9b04",
        "name": "",
        "rules": [
            {
                "t": "set",
                "p": "distance",
                "pt": "flow",
                "to": "payload",
                "tot": "msg"
            }
        ],
        "action": "",
        "property": "",
        "from": "",
        "to": "",
        "reg": false,
        "x": 890,
        "y": 940,
        "wires": [
            []
        ]
    },
    {
        "id": "b873aa83b70f723d",
        "type": "change",
        "z": "7fdd2a14a1d9f9e3",
        "g": "55f0e6e13fef9b04",
        "name": "flow.age",
        "rules": [
            {
                "t": "set",
                "p": "payload",
                "pt": "msg",
                "to": "age",
                "tot": "flow"
            }
        ],
        "action": "",
        "property": "",
        "from": "",
        "to": "",
        "reg": false,
        "x": 400,
        "y": 900,
        "wires": [
            [
                "df777c3f4205f6ac"
            ]
        ]
    },
    {
        "id": "5abda0919db03979",
        "type": "change",
        "z": "7fdd2a14a1d9f9e3",
        "g": "55f0e6e13fef9b04",
        "name": "flow.distance",
        "rules": [
            {
                "t": "set",
                "p": "payload",
                "pt": "msg",
                "to": "distance",
                "tot": "flow"
            }
        ],
        "action": "",
        "property": "",
        "from": "",
        "to": "",
        "reg": false,
        "x": 410,
        "y": 940,
        "wires": [
            [
                "63f1529357d55368"
            ]
        ]
    },
    {
        "id": "48f5132370013ca1",
        "type": "ui_dropdown",
        "z": "7fdd2a14a1d9f9e3",
        "g": "55f0e6e13fef9b04",
        "name": "Class selection",
        "label": "Classes",
        "tooltip": "",
        "place": "Select detection",
        "group": "bb3220d7d52afecf",
        "order": 2,
        "width": 0,
        "height": 0,
        "passthru": true,
        "multiple": true,
        "options": [
            {
                "label": "Human",
                "value": "Human",
                "type": "str"
            },
            {
                "label": "Face",
                "value": "Face",
                "type": "str"
            },
            {
                "label": "Head",
                "value": "Head",
                "type": "str"
            },
            {
                "label": "Bag",
                "value": "Bag",
                "type": "str"
            },
            {
                "label": "Car",
                "value": "Car",
                "type": "str"
            },
            {
                "label": "Truck",
                "value": "Truck",
                "type": "str"
            },
            {
                "label": "Bus",
                "value": "Bus",
                "type": "str"
            },
            {
                "label": "Bike",
                "value": "Bike",
                "type": "str"
            },
            {
                "label": "Vehicle",
                "value": "Vehicle",
                "type": "str"
            },
            {
                "label": "License plate",
                "value": "License plate",
                "type": "str"
            }
        ],
        "payload": "",
        "topic": "topic",
        "topicType": "msg",
        "className": "",
        "x": 620,
        "y": 860,
        "wires": [
            [
                "0bd2df5079b488ae"
            ]
        ]
    },
    {
        "id": "0bd2df5079b488ae",
        "type": "change",
        "z": "7fdd2a14a1d9f9e3",
        "g": "55f0e6e13fef9b04",
        "name": "flow.classes",
        "rules": [
            {
                "t": "set",
                "p": "classes",
                "pt": "flow",
                "to": "payload",
                "tot": "msg",
                "dc": true
            }
        ],
        "action": "",
        "property": "",
        "from": "",
        "to": "",
        "reg": false,
        "x": 910,
        "y": 860,
        "wires": [
            []
        ]
    },
    {
        "id": "13a845e65bb5c94c",
        "type": "function",
        "z": "7fdd2a14a1d9f9e3",
        "g": "55f0e6e13fef9b04",
        "name": "Classes",
        "func": "if( !flow.get(\"classes\") ) {\n    msg.payload = [ \"Human\", \"Car\" ];\n} else {\n    msg.payload = flow.get(\"classes\");\n}\n\nreturn msg;",
        "outputs": 1,
        "timeout": 0,
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "libs": [],
        "x": 400,
        "y": 860,
        "wires": [
            [
                "48f5132370013ca1"
            ]
        ]
    },
    {
        "id": "297b824ee081961d",
        "type": "link out",
        "z": "7fdd2a14a1d9f9e3",
        "g": "55f0e6e13fef9b04",
        "name": "link out 1",
        "mode": "link",
        "links": [
            "2206c1829ff2a9b2"
        ],
        "x": 1055,
        "y": 740,
        "wires": []
    },
    {
        "id": "42289437abd8d34d",
        "type": "function",
        "z": "7fdd2a14a1d9f9e3",
        "g": "55f0e6e13fef9b04",
        "name": "flow.camera",
        "func": "msg.payload = flow.get(\"camera\") || {\n    aspect: \"16:9\",\n    rotation: \"Landscape\",\n    image: \"\"\n}    \nflow.set(\"camera\",msg.payload);\n\nreturn msg;\n",
        "outputs": 1,
        "timeout": 0,
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "libs": [],
        "x": 410,
        "y": 1020,
        "wires": [
            [
                "f158e546b725f1ad",
                "f18f09de84624253"
            ]
        ]
    },
    {
        "id": "cee2fa95c738a94a",
        "type": "ui_dropdown",
        "z": "7fdd2a14a1d9f9e3",
        "g": "55f0e6e13fef9b04",
        "name": "Aspect",
        "label": "Image aspect",
        "tooltip": "",
        "place": "Select aspect",
        "group": "bb3220d7d52afecf",
        "order": 7,
        "width": "6",
        "height": "1",
        "passthru": true,
        "multiple": false,
        "options": [
            {
                "label": "16:9",
                "value": "16:9",
                "type": "str"
            },
            {
                "label": "4:3",
                "value": "4:3",
                "type": "str"
            },
            {
                "label": "1:1",
                "value": "1:1",
                "type": "str"
            }
        ],
        "payload": "",
        "topic": "aspect",
        "topicType": "str",
        "className": "",
        "x": 780,
        "y": 1020,
        "wires": [
            [
                "607f36becdfa7c17"
            ]
        ]
    },
    {
        "id": "607f36becdfa7c17",
        "type": "function",
        "z": "7fdd2a14a1d9f9e3",
        "g": "55f0e6e13fef9b04",
        "name": "flow.camera",
        "func": "var camera = flow.get(\"camera\");\nswitch(msg.topic) {\n    case \"aspect\":\n        camera.aspect = msg.payload;\n        break;\n    case \"rotation\":\n        camera.rotation = msg.payload;\n        break;\n}\n\nflow.set(\"camera\",camera);\n\nreturn msg;\n",
        "outputs": 1,
        "timeout": 0,
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "libs": [],
        "x": 950,
        "y": 1020,
        "wires": [
            [
                "441ba367bf81629f"
            ]
        ]
    },
    {
        "id": "f158e546b725f1ad",
        "type": "change",
        "z": "7fdd2a14a1d9f9e3",
        "g": "55f0e6e13fef9b04",
        "name": "",
        "rules": [
            {
                "t": "set",
                "p": "payload",
                "pt": "msg",
                "to": "payload.aspect",
                "tot": "msg"
            }
        ],
        "action": "",
        "property": "",
        "from": "",
        "to": "",
        "reg": false,
        "x": 600,
        "y": 1020,
        "wires": [
            [
                "cee2fa95c738a94a"
            ]
        ]
    },
    {
        "id": "d1e65b27161f9d6e",
        "type": "ui_dropdown",
        "z": "7fdd2a14a1d9f9e3",
        "g": "55f0e6e13fef9b04",
        "name": "Rotation",
        "label": "Image rotation",
        "tooltip": "",
        "place": "Select rotation",
        "group": "bb3220d7d52afecf",
        "order": 8,
        "width": "6",
        "height": "1",
        "passthru": true,
        "multiple": false,
        "options": [
            {
                "label": "Landscape",
                "value": "Landscape",
                "type": "str"
            },
            {
                "label": "Portrait",
                "value": "Portrait",
                "type": "str"
            }
        ],
        "payload": "",
        "topic": "rotation",
        "topicType": "str",
        "className": "",
        "x": 780,
        "y": 1060,
        "wires": [
            [
                "607f36becdfa7c17"
            ]
        ]
    },
    {
        "id": "f18f09de84624253",
        "type": "change",
        "z": "7fdd2a14a1d9f9e3",
        "g": "55f0e6e13fef9b04",
        "name": "",
        "rules": [
            {
                "t": "set",
                "p": "payload",
                "pt": "msg",
                "to": "payload.rotation",
                "tot": "msg"
            }
        ],
        "action": "",
        "property": "",
        "from": "",
        "to": "",
        "reg": false,
        "x": 600,
        "y": 1060,
        "wires": [
            [
                "d1e65b27161f9d6e"
            ]
        ]
    },
    {
        "id": "441ba367bf81629f",
        "type": "link out",
        "z": "7fdd2a14a1d9f9e3",
        "g": "55f0e6e13fef9b04",
        "name": "link out 2",
        "mode": "link",
        "links": [
            "fda99a1186d72bc2"
        ],
        "x": 1065,
        "y": 1020,
        "wires": []
    },
    {
        "id": "72e1deb01e99f14f",
        "type": "function",
        "z": "7fdd2a14a1d9f9e3",
        "g": "55f0e6e13fef9b04",
        "name": "name",
        "func": "msg.payload = flow.get(\"name\") || \"\";\nreturn msg;",
        "outputs": 1,
        "timeout": 0,
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "libs": [],
        "x": 390,
        "y": 780,
        "wires": [
            [
                "dd86b8c08d61883c"
            ]
        ]
    },
    {
        "id": "dd86b8c08d61883c",
        "type": "ui_text_input",
        "z": "7fdd2a14a1d9f9e3",
        "g": "55f0e6e13fef9b04",
        "name": "",
        "label": "Name",
        "tooltip": "",
        "group": "bb3220d7d52afecf",
        "order": 1,
        "width": 0,
        "height": 0,
        "passthru": false,
        "mode": "text",
        "delay": 300,
        "topic": "topic",
        "sendOnBlur": true,
        "className": "",
        "topicType": "msg",
        "x": 590,
        "y": 780,
        "wires": [
            [
                "ce9a03f037ef9942"
            ]
        ]
    },
    {
        "id": "ce9a03f037ef9942",
        "type": "change",
        "z": "7fdd2a14a1d9f9e3",
        "g": "55f0e6e13fef9b04",
        "name": "flow.name",
        "rules": [
            {
                "t": "set",
                "p": "name",
                "pt": "flow",
                "to": "payload",
                "tot": "msg",
                "dc": true
            }
        ],
        "action": "",
        "property": "",
        "from": "",
        "to": "",
        "reg": false,
        "x": 910,
        "y": 780,
        "wires": [
            []
        ]
    },
    {
        "id": "94e656f94d354c1e",
        "type": "function",
        "z": "7fdd2a14a1d9f9e3",
        "g": "55f0e6e13fef9b04",
        "name": "Confidence",
        "func": "msg.payload = flow.get(\"confidence\") || 10;\nreturn msg;",
        "outputs": 1,
        "timeout": 0,
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "libs": [],
        "x": 410,
        "y": 820,
        "wires": [
            [
                "548cb4b1ac7faf5c"
            ]
        ]
    },
    {
        "id": "548cb4b1ac7faf5c",
        "type": "ui_dropdown",
        "z": "7fdd2a14a1d9f9e3",
        "g": "55f0e6e13fef9b04",
        "name": "Confidence selection",
        "label": "Min confidence",
        "tooltip": "",
        "place": "Select detection",
        "group": "bb3220d7d52afecf",
        "order": 5,
        "width": 0,
        "height": 0,
        "passthru": false,
        "multiple": false,
        "options": [
            {
                "label": "10",
                "value": 10,
                "type": "num"
            },
            {
                "label": "20",
                "value": 20,
                "type": "num"
            },
            {
                "label": "30",
                "value": 30,
                "type": "num"
            },
            {
                "label": "40",
                "value": 40,
                "type": "num"
            },
            {
                "label": "50",
                "value": 50,
                "type": "num"
            },
            {
                "label": "60",
                "value": 60,
                "type": "num"
            },
            {
                "label": "70",
                "value": 70,
                "type": "num"
            },
            {
                "label": "80",
                "value": 80,
                "type": "num"
            },
            {
                "label": "90",
                "value": 90,
                "type": "num"
            }
        ],
        "payload": "",
        "topic": "topic",
        "topicType": "msg",
        "className": "",
        "x": 640,
        "y": 820,
        "wires": [
            [
                "0dc2cbd4073427f9"
            ]
        ]
    },
    {
        "id": "0dc2cbd4073427f9",
        "type": "change",
        "z": "7fdd2a14a1d9f9e3",
        "g": "55f0e6e13fef9b04",
        "name": "flow.confidence",
        "rules": [
            {
                "t": "set",
                "p": "confidence",
                "pt": "flow",
                "to": "payload",
                "tot": "msg",
                "dc": true
            }
        ],
        "action": "",
        "property": "",
        "from": "",
        "to": "",
        "reg": false,
        "x": 920,
        "y": 820,
        "wires": [
            []
        ]
    },
    {
        "id": "d6fd58da09c8d814",
        "type": "ui_button",
        "z": "7fdd2a14a1d9f9e3",
        "g": "69945eadd659c072",
        "name": "Query",
        "group": "c62ccca628050ed6",
        "order": 4,
        "width": "3",
        "height": "1",
        "passthru": false,
        "label": "Show Last 24 hours",
        "tooltip": "",
        "color": "",
        "bgcolor": "",
        "className": "",
        "icon": "",
        "payload": "",
        "payloadType": "str",
        "topic": "topic",
        "topicType": "msg",
        "x": 170,
        "y": 360,
        "wires": [
            [
                "363da00bca91238c"
            ]
        ]
    },
    {
        "id": "363da00bca91238c",
        "type": "function",
        "z": "7fdd2a14a1d9f9e3",
        "g": "69945eadd659c072",
        "name": "Query",
        "func": "msg.payload = {\n    device: flow.get(\"device\").serial || \"Undefined\",\n    timestamp: {\n        $gte: new Date().getTime() - (24 * 3600 * 1000)\n    }\n}\n\nreturn msg;\n",
        "outputs": 1,
        "timeout": "",
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "libs": [],
        "x": 290,
        "y": 360,
        "wires": [
            [
                "5ef3d2591b4ca170"
            ]
        ]
    },
    {
        "id": "5ef3d2591b4ca170",
        "type": "mongodb in",
        "z": "7fdd2a14a1d9f9e3",
        "g": "69945eadd659c072",
        "mongodb": "05eda5dd0cdc32a0",
        "name": "Query",
        "collection": "path",
        "operation": "find",
        "x": 410,
        "y": 360,
        "wires": [
            [
                "c690eae981c7d257"
            ]
        ]
    },
    {
        "id": "bb82d8d22007bfdd",
        "type": "ui_template",
        "z": "7fdd2a14a1d9f9e3",
        "g": "69945eadd659c072",
        "group": "4ad72f6f7680bff1",
        "name": "Heatmap",
        "order": 6,
        "width": "16",
        "height": "16",
        "format": "<link rel=\"stylesheet\" href=\"/css/imgareaselect-default.css\">\n<script src=\"/js/jquery.imgareaselect.js\"></script>\n\n<div id=\"{{'view_'+$id}}\" style=\"width:800px; height:450px;\">\n  <div style=\"width:100%; height:100%; position:relative\">\n    <img id=\"{{'image_'+$id}}\" src=\"\" style=\"width:100%; height:100%; position:absolute; top:0px; left:0px;\">\n    <canvas id=\"{{'canvas_'+$id}}\" width=\"1000\" height=\"1000\" style=\"width:100%; height:100%; position:absolute; top:0px; left:0px;\"></canvas>\n  </div>\n</div>\n\n\n<script>\n  var ctx = null;\nvar imageWidth = 800;\nvar imageHeight = 450;\nvar strength = 0.5;\nvar pathList = [];\nvar selectArea = null;\nvar aoi = null;\n\nfunction ClearCanvas() {\n    if(ctx) {\n        ctx.beginPath();\n        ctx.clearRect(0, 0, 1000, 1000 );\n        ctx.stroke();\n    }\n\n    if( selectArea )\n        selectArea.setOptions({ hide: true });\n    selectArea = null;        \n}\n\nfunction setupImage( scope, data ) {\n    var rotation = data.rotation || 0;\n    var aspect = data.aspect || \"16:9\";\n    imageWidth = 800;  //Default for 16:9\n    imageHeight = 450;\n\n    if(aspect === \"1:1\")\n        imageHeight = 800;\n\n    if(aspect === \"4:3\")\n        imageHeight = 600;\n\n    //Setup aspect ration\n    if(rotation === \"Portrait\" ) {\n        var temp = imageWidth;\n        imageHeight = imageWidth;\n        imageWidth = temp;\n    }\n\n    $(\"#view_\"+scope.$id).css(\"width\", imageWidth + \"px\");\n    $(\"#view_\"+scope.$id).css(\"height\", imageHeight+\"px\");\n\n    if( data.hasOwnProperty(\"image\") && data.image )\n        $(\"#image_\"+scope.$id).attr(\"src\",\"data:image/jpeg;base64,\" + data.image);\n    else\n        $(\"#image_\"+scope.$id).attr(\"src\",\"data:image/jpeg;base64, \");\n        \n    var canvas = document.getElementById(\"canvas_\"+scope.$id);\n    ctx = canvas.getContext(\"2d\");\n}\n\nfunction drawPath( data ) {\n    if(!ctx)\n        return;\n\n    var first = data.path[0];\n    var last = data.path[data.path.length-1];\n\n    ctx.globalAlpha = strength;\n    ctx.beginPath();\n    ctx.lineWidth = 3;\n    ctx.strokeStyle = '#00FF00';\n    ctx.font = \"30px Arial\";\n    ctx.fillStyle = '#FFFF00';\n    ctx.moveTo(first.x, first.y );\n    ctx.arc(first.x, first.y, 3, 0, 2 * Math.PI);\n    // ctx.fillText(data.class, first.x, first.y - 10 );\n    ctx.stroke();\n\n    ctx.beginPath();\n    ctx.strokeStyle = '#FFFF00';\n    ctx.moveTo(data.path[0].x, data.path[0].y );\n    for( var i = 1; i < data.path.length; i++ )\n        ctx.lineTo(data.path[i].x,data.path[i].y ); ctx.lineTo(last.x,last.y );\n    ctx.stroke(); ctx.beginPath();\n    ctx.lineWidth=3;\n    ctx.strokeStyle='#FF0000';\n    ctx.moveTo(last.x, last.y );\n    ctx.arc(last.x, last.y, 3, 0, 2 * Math.PI); ctx.stroke();\n}\n\n\n(function(scope) {\n    scope.$watch('msg', function(msg) {\n        if( !msg || !msg.topic  )\n            return;\n        console.log(msg.topic);\n\n        switch( msg.topic ) {\n        case \"image\":\n            ClearCanvas();\n            setupImage(scope,msg.payload);\n            break;\n\n        case \"path\":\n            drawPath( msg.payload );\n            break;\n\n        case \"singlePath\":\n            ClearCanvas();\n            drawPath( msg.payload );\n            break;\n\n        case \"paths\":\n            ClearCanvas();\n            pathList = msg.payload;\n            msg.payload.forEach(function(path){\n                drawPath( path );\n            });\n            break;\n\n        case \"strength\":\n            ClearCanvas();\n            strength = (parseInt(msg.payload) / 100.0 ) * 0.5;\n            pathList.forEach( function(path) {\n                drawPath( path );\n            });\n            break;\n\n        case \"reset\":\n            ClearCanvas();\n            break;\n\n        case \"aoi\":\n            if( selectArea ) {\n                selectArea.setOptions({hide: true});\n                selectArea = null;\n            }\n            if( typeof msg.payload !== \"object\" )\n                return;\n            aoi = msg.payload.id || \"None\";\n            selectArea = $(\"#image_\"+scope.$id).imgAreaSelect({\n                x1: parseInt((msg.payload.x1 / 1000) * imageWidth),\n                y1: parseInt((msg.payload.y1 / 1000) * imageHeight),\n                x2: parseInt((msg.payload.x2 / 1000) * imageWidth),\n                y2: parseInt((msg.payload.y2 / 1000) * imageHeight),\n                minHeight: 20,\n                minWidth: 20,\n                handles: true,\n                enable:true,movable:true,resizable:true,show:true,\n                instance: true,\n                onSelectEnd: function( image, area ) {\n                var box = {\n                    id: aoi,\n                    x1: parseInt((area.x1 / imageWidth) * 1000),\n                    x2: parseInt((area.x2 / imageWidth) * 1000),\n                    y1: parseInt((area.y1 / imageHeight) * 1000),\n                    y2: parseInt((area.y2 / imageHeight) * 1000)\n                }\n                scope.send({topic:aoi||\"none\",payload:box});\n                }\n            });\n            selectArea.setOptions({show: true});\n            break;\n            case \"birth\":\n            case \"death\":\n                aoi = msg.payload.id || \"None\";\n                if(!selectArea) {\n                    selectArea = $(\"#image_\"+scope.$id).imgAreaSelect( {\n                        x1: parseInt(msg.payload.x1 / 1000 * imageWidth),\n                        x2: parseInt(msg.payload.x2 / 1000 * imageWidth),\n                        y1: parseInt(msg.payload.y1 / 1000 * imageHeight),\n                        y2: parseInt(msg.payload.y2 / 1000 * imageHeight),\n                        show: true, hide:false, minHeight: 5, minWidth: 5, handles: true, movable: true, resizable: true, instance:true,\n                        onSelectEnd: function( image, area ) {\n                            var area = {\n                                id: aoi,\n                                x1: parseInt((area.x1/imageWidth) * 1000),\n                                x2: parseInt((area.x2/imageWidth) * 1000),\n                                y1: parseInt((area.y1/imageHeight) * 1000),\n                                y2: parseInt((area.y2/imageHeight) * 1000)\n                            }\n                            scope.send({\n                                topic: aoi,\n                                payload: area\n                            });\n                        }\n                    });\n                }\n                selectArea.setSelection(\n                    parseInt(msg.payload.x1 / 1000 * imageWidth),\n                    parseInt(msg.payload.y1 / 1000 * imageHeight),\n                    parseInt(msg.payload.x2 / 1000 * imageWidth),\n                    parseInt(msg.payload.y2 / 1000 * imageHeight)\n                );\n                selectArea.setOptions({ show: true });\n            break;\n\t\t}\n    });\n})(scope);\n</script>",
        "storeOutMessages": false,
        "fwdInMessages": false,
        "resendOnRefresh": false,
        "templateScope": "local",
        "className": "",
        "x": 920,
        "y": 360,
        "wires": [
            [
                "8a446b60b40007ba"
            ]
        ]
    },
    {
        "id": "c690eae981c7d257",
        "type": "change",
        "z": "7fdd2a14a1d9f9e3",
        "g": "69945eadd659c072",
        "name": "",
        "rules": [
            {
                "t": "set",
                "p": "topic",
                "pt": "msg",
                "to": "paths",
                "tot": "str"
            }
        ],
        "action": "",
        "property": "",
        "from": "",
        "to": "",
        "reg": false,
        "x": 570,
        "y": 360,
        "wires": [
            [
                "bb82d8d22007bfdd",
                "ae1a624af4ec4195"
            ]
        ]
    },
    {
        "id": "a8864b5bc1369965",
        "type": "ui_button",
        "z": "7fdd2a14a1d9f9e3",
        "g": "69945eadd659c072",
        "name": "",
        "group": "bb3220d7d52afecf",
        "order": 6,
        "width": 0,
        "height": 0,
        "passthru": false,
        "label": "Set area objects must pass",
        "tooltip": "",
        "color": "",
        "bgcolor": "",
        "className": "",
        "icon": "",
        "payload": "",
        "payloadType": "str",
        "topic": "topic",
        "topicType": "msg",
        "x": 240,
        "y": 440,
        "wires": [
            [
                "9a4f7cf81e639866"
            ]
        ]
    },
    {
        "id": "9a4f7cf81e639866",
        "type": "function",
        "z": "7fdd2a14a1d9f9e3",
        "g": "69945eadd659c072",
        "name": "aoi",
        "func": "msg.topic = \"aoi\";\nmsg.payload = flow.get(\"aoi\") || {\n    id: \"aoi\",\n    x1: 200,\n    y1: 200,\n    x2: 800,\n    y2: 800\n}\n\nreturn msg;",
        "outputs": 1,
        "timeout": 0,
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "libs": [],
        "x": 670,
        "y": 440,
        "wires": [
            [
                "bb82d8d22007bfdd"
            ]
        ]
    },
    {
        "id": "a9a1e6dec1b2eac2",
        "type": "ui_button",
        "z": "7fdd2a14a1d9f9e3",
        "g": "69945eadd659c072",
        "name": "",
        "group": "bb3220d7d52afecf",
        "order": 9,
        "width": 0,
        "height": 0,
        "passthru": false,
        "label": "Save",
        "tooltip": "",
        "color": "",
        "bgcolor": "green",
        "className": "",
        "icon": "",
        "payload": "false",
        "payloadType": "bool",
        "topic": "aoi",
        "topicType": "str",
        "x": 670,
        "y": 480,
        "wires": [
            [
                "bb82d8d22007bfdd"
            ]
        ]
    },
    {
        "id": "8a446b60b40007ba",
        "type": "change",
        "z": "7fdd2a14a1d9f9e3",
        "g": "69945eadd659c072",
        "name": "",
        "rules": [
            {
                "t": "set",
                "p": "aoi",
                "pt": "flow",
                "to": "payload",
                "tot": "msg"
            }
        ],
        "action": "",
        "property": "",
        "from": "",
        "to": "",
        "reg": false,
        "x": 1090,
        "y": 360,
        "wires": [
            []
        ]
    },
    {
        "id": "2206c1829ff2a9b2",
        "type": "link in",
        "z": "7fdd2a14a1d9f9e3",
        "g": "69945eadd659c072",
        "name": "link in 1",
        "links": [
            "297b824ee081961d",
            "e13017242ba581b3",
            "7307295e0c7b7a1d",
            "d38073e88f076298"
        ],
        "x": 635,
        "y": 400,
        "wires": [
            [
                "bb82d8d22007bfdd"
            ]
        ]
    },
    {
        "id": "3ec1dfe8f6c0fbcf",
        "type": "ui_button",
        "z": "7fdd2a14a1d9f9e3",
        "g": "69945eadd659c072",
        "name": "",
        "group": "4ad72f6f7680bff1",
        "order": 4,
        "width": "3",
        "height": "1",
        "passthru": false,
        "label": "Refresh image",
        "tooltip": "",
        "color": "",
        "bgcolor": "",
        "className": "",
        "icon": "",
        "payload": "",
        "payloadType": "str",
        "topic": "topic",
        "topicType": "msg",
        "x": 200,
        "y": 560,
        "wires": [
            [
                "ce44fbec843bcf7d"
            ]
        ]
    },
    {
        "id": "4e796b3ae4442a4a",
        "type": "Camera",
        "z": "7fdd2a14a1d9f9e3",
        "g": "69945eadd659c072",
        "resolution": "1280x720",
        "overlay": "no",
        "output": "base64",
        "x": 620,
        "y": 560,
        "wires": [
            [
                "dc94fdd1eebd7faa"
            ]
        ]
    },
    {
        "id": "dc94fdd1eebd7faa",
        "type": "function",
        "z": "7fdd2a14a1d9f9e3",
        "g": "69945eadd659c072",
        "name": "Image",
        "func": "msg.topic = \"image\";\nvar image = msg.payload;\nmsg.payload = flow.get(\"camera\");\nmsg.payload.image = image;\nreturn msg;",
        "outputs": 1,
        "timeout": 0,
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "libs": [],
        "x": 750,
        "y": 560,
        "wires": [
            [
                "bb82d8d22007bfdd",
                "b4a545e3d7e1a2e0"
            ]
        ]
    },
    {
        "id": "eff2af87e15a8ec5",
        "type": "mongodb out",
        "z": "7fdd2a14a1d9f9e3",
        "g": "69945eadd659c072",
        "mongodb": "05eda5dd0cdc32a0",
        "name": "Update",
        "collection": "image",
        "payonly": true,
        "upsert": true,
        "multi": false,
        "operation": "update",
        "x": 1200,
        "y": 560,
        "wires": []
    },
    {
        "id": "b4a545e3d7e1a2e0",
        "type": "function",
        "z": "7fdd2a14a1d9f9e3",
        "g": "69945eadd659c072",
        "name": "Update",
        "func": "msg.query = {\n    device: flow.get(\"device\").serial || \"Undefined\"\n}\n\nmsg.payload = {\n    device: flow.get(\"device\").serial || \"Undefined\",\n    name: flow.get(\"name\") || flow.get(\"device\").hostname || flow.get(\"device\").name,\n    timestamp: new Date().getTime(),\n    rotation: msg.payload.rotation,\n    aspect: msg.payload.aspect,\n    image: msg.payload.image\n}\n\n\nreturn msg;",
        "outputs": 1,
        "timeout": 0,
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "libs": [],
        "x": 940,
        "y": 560,
        "wires": [
            [
                "eff2af87e15a8ec5"
            ]
        ]
    },
    {
        "id": "6418ddd6036068a5",
        "type": "inject",
        "z": "7fdd2a14a1d9f9e3",
        "g": "69945eadd659c072",
        "name": "Every hour",
        "props": [
            {
                "p": "payload"
            },
            {
                "p": "topic",
                "vt": "str"
            }
        ],
        "repeat": "3600",
        "crontab": "",
        "once": true,
        "onceDelay": "1",
        "topic": "",
        "payload": "",
        "payloadType": "date",
        "x": 220,
        "y": 600,
        "wires": [
            [
                "ce44fbec843bcf7d"
            ]
        ]
    },
    {
        "id": "fd0de2a0d9d66061",
        "type": "ui_ui_control",
        "z": "7fdd2a14a1d9f9e3",
        "g": "69945eadd659c072",
        "name": "",
        "events": "all",
        "x": 180,
        "y": 520,
        "wires": [
            [
                "1465274f4c07f99d"
            ]
        ]
    },
    {
        "id": "1465274f4c07f99d",
        "type": "function",
        "z": "7fdd2a14a1d9f9e3",
        "g": "69945eadd659c072",
        "name": "Tab",
        "func": "if( msg.payload !== \"change\")\n    return;\nif( msg.name !== \"Path heatmap\")\n    return\nreturn msg;",
        "outputs": 1,
        "timeout": 0,
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "libs": [],
        "x": 330,
        "y": 520,
        "wires": [
            [
                "ce44fbec843bcf7d"
            ]
        ]
    },
    {
        "id": "fda99a1186d72bc2",
        "type": "link in",
        "z": "7fdd2a14a1d9f9e3",
        "g": "69945eadd659c072",
        "name": "link in 2",
        "links": [
            "441ba367bf81629f",
            "64d0beb8e1423bb7"
        ],
        "x": 355,
        "y": 600,
        "wires": [
            [
                "ce44fbec843bcf7d"
            ]
        ]
    },
    {
        "id": "ae1a624af4ec4195",
        "type": "ui_table",
        "z": "7fdd2a14a1d9f9e3",
        "g": "69945eadd659c072",
        "group": "c62ccca628050ed6",
        "name": "",
        "order": 0,
        "width": "14",
        "height": "16",
        "columns": [
            {
                "field": "localTime",
                "title": "Time",
                "width": "30%",
                "align": "left",
                "formatter": "plaintext",
                "formatterParams": {
                    "target": "_blank"
                }
            },
            {
                "field": "class",
                "title": "Class",
                "width": "18%",
                "align": "left",
                "formatter": "plaintext",
                "formatterParams": {
                    "target": "_blank"
                }
            },
            {
                "field": "confidence",
                "title": "Confidence",
                "width": "18%",
                "align": "left",
                "formatter": "plaintext",
                "formatterParams": {
                    "target": "_blank"
                }
            },
            {
                "field": "age",
                "title": "Age",
                "width": "16%",
                "align": "left",
                "formatter": "plaintext",
                "formatterParams": {
                    "target": "_blank"
                }
            },
            {
                "field": "distance",
                "title": "DIstance",
                "width": "18%",
                "align": "left",
                "formatter": "plaintext",
                "formatterParams": {
                    "target": "_blank"
                }
            }
        ],
        "outputs": 1,
        "cts": true,
        "x": 910,
        "y": 400,
        "wires": [
            [
                "727e86f0c0853b77"
            ]
        ]
    },
    {
        "id": "ce44fbec843bcf7d",
        "type": "function",
        "z": "7fdd2a14a1d9f9e3",
        "g": "69945eadd659c072",
        "name": "Resolution",
        "func": "var camera = flow.get(\"camera\");\nif(!camera)\n    return;\n\nswitch( camera.aspect ) {\n    case \"4:3\":\n        msg.resolution = \"800x600\"\n        break;\n    case \"1:1\":\n        msg.resolution = \"800x800\"\n        break;\n    case \"16:9\":\n    default:\n        msg.resolution = \"1280x720\"\n}\n\nreturn msg;",
        "outputs": 1,
        "timeout": 0,
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "libs": [],
        "x": 470,
        "y": 560,
        "wires": [
            [
                "4e796b3ae4442a4a"
            ]
        ]
    },
    {
        "id": "727e86f0c0853b77",
        "type": "change",
        "z": "7fdd2a14a1d9f9e3",
        "g": "69945eadd659c072",
        "name": "",
        "rules": [
            {
                "t": "set",
                "p": "topic",
                "pt": "msg",
                "to": "singlePath",
                "tot": "str"
            }
        ],
        "action": "",
        "property": "",
        "from": "",
        "to": "",
        "reg": false,
        "x": 1100,
        "y": 400,
        "wires": [
            [
                "7307295e0c7b7a1d"
            ]
        ]
    },
    {
        "id": "7307295e0c7b7a1d",
        "type": "link out",
        "z": "7fdd2a14a1d9f9e3",
        "g": "69945eadd659c072",
        "name": "link out 4",
        "mode": "link",
        "links": [
            "2206c1829ff2a9b2"
        ],
        "x": 1225,
        "y": 400,
        "wires": []
    },
    {
        "id": "6f602922ca15c46a",
        "type": "catch",
        "z": "7fdd2a14a1d9f9e3",
        "name": "",
        "scope": null,
        "uncaught": false,
        "x": 160,
        "y": 40,
        "wires": [
            [
                "0dc1b95e2fba670d"
            ]
        ]
    },
    {
        "id": "0dc1b95e2fba670d",
        "type": "function",
        "z": "7fdd2a14a1d9f9e3",
        "name": "Format",
        "func": "msg.payload = {\n    name: flow.get(\"name\"),\n    payload: msg.payload,\n    error: msg.error,\n    time: new Date()\n}\nreturn msg;",
        "outputs": 1,
        "timeout": 0,
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "libs": [],
        "x": 340,
        "y": 40,
        "wires": [
            [
                "1861229b1e30a179"
            ]
        ]
    },
    {
        "id": "1861229b1e30a179",
        "type": "mqtt out",
        "z": "7fdd2a14a1d9f9e3",
        "name": "",
        "topic": "alert/pathingestion/camera",
        "qos": "",
        "retain": "",
        "respTopic": "",
        "contentType": "",
        "userProps": "",
        "correl": "",
        "expiry": "",
        "broker": "c883effdbf602e4e",
        "x": 580,
        "y": 40,
        "wires": []
    },
    {
        "id": "05eda5dd0cdc32a0",
        "type": "mongodb",
        "hostname": "127.0.0.1",
        "topology": "direct",
        "connectOptions": "",
        "port": "27017",
        "db": "objects",
        "name": "Mongo DB"
    },
    {
        "id": "a5d60ef5587cc8fc",
        "type": "Device Access",
        "name": "Localhost",
        "address": "localhost",
        "protocol": "http"
    },
    {
        "id": "4ad72f6f7680bff1",
        "type": "ui_group",
        "name": "Heatmap",
        "tab": "1363c95f46e7afc9",
        "order": 1,
        "disp": false,
        "width": "16",
        "collapse": false,
        "className": ""
    },
    {
        "id": "bb3220d7d52afecf",
        "type": "ui_group",
        "name": "Settings",
        "tab": "1363c95f46e7afc9",
        "order": 2,
        "disp": true,
        "width": "6",
        "collapse": false,
        "className": ""
    },
    {
        "id": "c62ccca628050ed6",
        "type": "ui_group",
        "name": "Table",
        "tab": "1363c95f46e7afc9",
        "order": 4,
        "disp": true,
        "width": "14",
        "collapse": false,
        "className": ""
    },
    {
        "id": "c883effdbf602e4e",
        "type": "mqtt-broker",
        "name": "MQTT Broker",
        "broker": "127.0.0.1",
        "port": "1883",
        "clientid": "",
        "autoConnect": true,
        "usetls": false,
        "protocolVersion": "4",
        "keepalive": "60",
        "cleansession": true,
        "autoUnsubscribe": true,
        "birthTopic": "",
        "birthQos": "0",
        "birthRetain": "false",
        "birthPayload": "",
        "birthMsg": {},
        "closeTopic": "",
        "closeQos": "0",
        "closeRetain": "false",
        "closePayload": "",
        "closeMsg": {},
        "willTopic": "",
        "willQos": "0",
        "willRetain": "false",
        "willPayload": "",
        "willMsg": {},
        "userProps": "",
        "sessionExpiry": ""
    },
    {
        "id": "1363c95f46e7afc9",
        "type": "ui_tab",
        "name": "Path Ingestion",
        "icon": "dashboard",
        "order": 1,
        "disabled": false,
        "hidden": false
    }
]
