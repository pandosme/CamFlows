[
    {
        "id": "4d2a3af098557686",
        "type": "tab",
        "label": "Object Path",
        "disabled": false,
        "info": "",
        "env": []
    },
    {
        "id": "6b6e8e5d88004813",
        "type": "group",
        "z": "4d2a3af098557686",
        "name": "Initialization",
        "style": {
            "stroke": "#000000",
            "fill": "#ffffbf",
            "label": true,
            "color": "#000000"
        },
        "nodes": [
            "feaeb86441a21d0f",
            "c84cf62700f0cdfc",
            "04a347412e98c00c",
            "c26b8dc87bf63531",
            "d59e39c5a0ced6b6",
            "a7cfaa88545643ea",
            "59c6a673885c2229",
            "f945500bc89d4b76",
            "057d62ed15e7e3e5",
            "7eafbb298115348c",
            "5f7d11daa124abdd",
            "cb4429c4614656de",
            "7636cd3d4447b0e8",
            "5a65553cfedf4110",
            "0a7139e5e8ecf93b",
            "fa23009447afa883",
            "b0f4d51f2f8a2069",
            "a9144480f676e057",
            "cef939dda5ff9e5b",
            "dd4446a9465d2c38",
            "c641d23ac93afa95",
            "396f6c0a21306e14",
            "ccb4d5f2755880e3",
            "14150c37ef9f7b25",
            "d1d775f40d499d0f"
        ],
        "x": 254,
        "y": 719,
        "w": 772,
        "h": 362
    },
    {
        "id": "a02c2456a2a0184f",
        "type": "group",
        "z": "4d2a3af098557686",
        "name": "Path Data",
        "style": {
            "stroke": "#000000",
            "fill": "#e3f3d3",
            "label": true,
            "color": "#000000"
        },
        "nodes": [
            "2e82c695741e716e",
            "0b27949e423ff87d"
        ],
        "x": 254,
        "y": 99,
        "w": 352,
        "h": 82
    },
    {
        "id": "7a2ff2ef405803e4",
        "type": "group",
        "z": "4d2a3af098557686",
        "name": "Dashboard",
        "style": {
            "stroke": "#000000",
            "fill": "#bfdbef",
            "label": true,
            "color": "#000000"
        },
        "nodes": [
            "ed40c99154fb8271",
            "bd9f6ab1f0b8b13f",
            "d5f12182607e876a",
            "a0aa8a3c59a957b4",
            "348d9372323eb53d",
            "6e705161068fbc8c",
            "8959debe6e6fd4d0",
            "d653e1a89741c667",
            "29c99b4395c44ec4",
            "5a33a2defeb64456",
            "22fe3a3a15d07513"
        ],
        "x": 254,
        "y": 399,
        "w": 912,
        "h": 282
    },
    {
        "id": "1b1e82a6f52ab006",
        "type": "group",
        "z": "4d2a3af098557686",
        "name": "Output",
        "style": {
            "label": true,
            "stroke": "#000000",
            "fill": "#ffefbf",
            "color": "#000000"
        },
        "nodes": [
            "d06bea689ee6aaa1",
            "f17846a95411b0bb",
            "ba415c42b10fce69"
        ],
        "x": 254,
        "y": 219,
        "w": 292,
        "h": 142
    },
    {
        "id": "22fe3a3a15d07513",
        "type": "junction",
        "z": "4d2a3af098557686",
        "g": "7a2ff2ef405803e4",
        "x": 820,
        "y": 440,
        "wires": [
            [
                "ed40c99154fb8271"
            ]
        ]
    },
    {
        "id": "c641d23ac93afa95",
        "type": "junction",
        "z": "4d2a3af098557686",
        "g": "6b6e8e5d88004813",
        "x": 280,
        "y": 800,
        "wires": [
            [
                "7636cd3d4447b0e8",
                "fa23009447afa883",
                "7eafbb298115348c",
                "04a347412e98c00c",
                "396f6c0a21306e14",
                "ccb4d5f2755880e3",
                "14150c37ef9f7b25",
                "d1d775f40d499d0f"
            ]
        ]
    },
    {
        "id": "ba415c42b10fce69",
        "type": "junction",
        "z": "4d2a3af098557686",
        "g": "1b1e82a6f52ab006",
        "x": 520,
        "y": 260,
        "wires": [
            [
                "44f4eda7c6b594c3"
            ]
        ]
    },
    {
        "id": "2e82c695741e716e",
        "type": "Objects",
        "z": "4d2a3af098557686",
        "g": "a02c2456a2a0184f",
        "version": "2",
        "output": "3",
        "classFilter": "-1",
        "confidence": "20",
        "rotation": "0",
        "cog": "0",
        "predictions": "0",
        "attributes": "50",
        "idle": "30",
        "x": 360,
        "y": 140,
        "wires": [
            [
                "0b27949e423ff87d"
            ]
        ]
    },
    {
        "id": "0b27949e423ff87d",
        "type": "function",
        "z": "4d2a3af098557686",
        "g": "a02c2456a2a0184f",
        "name": "Filter",
        "func": "//Filter minimum distance\nvar distance = flow.get(\"distance\") || 0;\nif( msg.payload.distance < distance)  \n    return;\n\n//Filter minimum confidence\nvar confidence = flow.get(\"confidence\") || 10;\nif( msg.payload.confidnece < confidence )\n    return;\n\n//Filter minimum age\nvar age = flow.get(\"age\") || 0;\nif( msg.payload.age < age)  \n    return;\n\n//Filter object class type\nvar classes= flow.get(\"classes\");\nvar ignoreClass = true;\nclasses.forEach(function(element) {\n    if( element === msg.payload.class)\n        ignoreClass = false;\n});\nif(ignoreClass)\n    return;\n\n//Filter object passed Area Of Intrest\nvar aoi = flow.get(\"aoi\") ||null;\nif( aoi ) {\n    var ignore = true;\n    msg.payload.path.forEach(function(position) {\n        if (ignore && \n            position.x >= aoi.x1 && \n            position.x <= aoi.x2 &&\n            position.y >= aoi.y1 &&\n            position.y <= aoi.y2)\n                ignore = false;\n    });\n    if( ignore )\n        return;\n}\n\n//All filters passed\n\nreturn msg;",
        "outputs": 1,
        "timeout": 0,
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "libs": [],
        "x": 530,
        "y": 140,
        "wires": [
            [
                "90c8c1e2905a5162"
            ]
        ]
    },
    {
        "id": "feaeb86441a21d0f",
        "type": "Axis device",
        "z": "4d2a3af098557686",
        "g": "6b6e8e5d88004813",
        "name": "",
        "preset": "73fbb18d33a287f1",
        "action": "Device Info",
        "cgi": "",
        "data": "",
        "options": "",
        "filename": "",
        "x": 650,
        "y": 760,
        "wires": [
            [
                "c84cf62700f0cdfc"
            ]
        ]
    },
    {
        "id": "c84cf62700f0cdfc",
        "type": "change",
        "z": "4d2a3af098557686",
        "g": "6b6e8e5d88004813",
        "name": "",
        "rules": [
            {
                "t": "set",
                "p": "device",
                "pt": "flow",
                "to": "payload",
                "tot": "msg"
            }
        ],
        "action": "",
        "property": "",
        "from": "",
        "to": "",
        "reg": false,
        "x": 920,
        "y": 760,
        "wires": [
            []
        ]
    },
    {
        "id": "04a347412e98c00c",
        "type": "change",
        "z": "4d2a3af098557686",
        "g": "6b6e8e5d88004813",
        "name": "Authentication",
        "rules": [
            {
                "t": "set",
                "p": "address",
                "pt": "msg",
                "to": "localhost",
                "tot": "str"
            },
            {
                "t": "set",
                "p": "user",
                "pt": "msg",
                "to": "root",
                "tot": "str"
            },
            {
                "t": "set",
                "p": "password",
                "pt": "msg",
                "to": "pass",
                "tot": "str"
            }
        ],
        "action": "",
        "property": "",
        "from": "",
        "to": "",
        "reg": false,
        "x": 440,
        "y": 760,
        "wires": [
            [
                "feaeb86441a21d0f"
            ]
        ]
    },
    {
        "id": "ed40c99154fb8271",
        "type": "ui_template",
        "z": "4d2a3af098557686",
        "g": "7a2ff2ef405803e4",
        "group": "7348b105173cd658",
        "name": "Heatmap",
        "order": 6,
        "width": "16",
        "height": "16",
        "format": "<link rel=\"stylesheet\" href=\"/css/imgareaselect-default.css\">\n<script src=\"/js/jquery.imgareaselect.js\"></script>\n<script src=\"/js/media-stream-player.min.js\"></script>\n\n<div id=\"{{'view_'+$id}}\" style=\"width:800px; height:450px;\">\n  <div style=\"width:100%; height:100%; position:relative\">\n    <img id=\"{{'image_'+$id}}\" src=\"\" style=\"width:100%; height:100%; position:absolute; top:0px; left:0px;\">\n    <div id=\"{{'video_'+$id}}\" style=\"width:100%; height:100%; position:absolute; top:0px; left:0px;\"></div>\n    <canvas id=\"{{'canvas_'+$id}}\" width=\"1000\" height=\"1000\" style=\"width:100%; height:100%; position:absolute; top:0px; left:0px;\"></canvas>\n  </div>\n</div>\n\n\n<script>\n  var ctx = null;\nvar imageWidth = 800;\nvar imageHeight = 450;\nvar strength = 0.5;\nvar pathList = [];\nvar selectArea = null;\nvar aoi = null;\n\nfunction ClearCanvas() {\n    if(ctx) {\n        ctx.beginPath();\n        ctx.clearRect(0, 0, 1000, 1000 );\n        ctx.stroke();\n    }\n\n    if( selectArea )\n        selectArea.setOptions({ hide: true });\n    selectArea = null;        \n}\n\n\nfunction setupVideo( scope, data ) {\n    videoWidth = 800;\n    videoHeight = 450;\n\n    if(data.aspect === \"1:1\") {\n        videoWidth = 800;\n        videoHeight = 800;\n    }\n\n    if(data.aspect === \"4:3\") {\n        videoWidth = 800;\n        videoHeight = 600;\n    }\n    $(\"#video_\"+scope.$id).empty();\n    var player = '<media-stream-player hostname=\"'+window.location.hostname+'\" format=\"RTP_H264\" compression=\"40\" audio=\"0\" resolution=\"'+videoWidth+'x'+videoHeight+'\" variant=\"basic\" autoplay></media-stream-player>';\n    $(\"#video_\"+scope.$id).append(player);\n}\n\nfunction setupImage( scope, data ) {\n    var rotation = data.rotation || 0;\n    var aspect = data.aspect || \"16:9\";\n    imageWidth = 800;  //Default for 16:9\n    imageHeight = 450;\n\n    if(aspect === \"1:1\")\n        imageHeight = 800;\n\n    if(aspect === \"4:3\")\n        imageHeight = 600;\n\n    //Setup aspect ration\n    if(rotation === \"Portrait\" ) {\n        var temp = imageWidth;\n        imageWidth = imageHeight;\n        imageHeight = temp;\n    }\n\n    $(\"#view_\"+scope.$id).css(\"width\", imageWidth + \"px\");\n    $(\"#view_\"+scope.$id).css(\"height\", imageHeight+\"px\");\n\n    if( data.hasOwnProperty(\"image\") && data.image )\n        $(\"#image_\"+scope.$id).attr(\"src\",\"data:image/jpeg;base64,\" + data.image);\n    else\n        $(\"#image_\"+scope.$id).attr(\"src\",\"data:image/jpeg;base64, \");\n        \n    var canvas = document.getElementById(\"canvas_\"+scope.$id);\n    ctx = canvas.getContext(\"2d\");\n}\n\nfunction drawPath( data ) {\n    if(!ctx)\n        return;\n\n    var first = data.path[0];\n    var last = data.path[data.path.length-1];\n\n    ctx.globalAlpha = strength;\n    ctx.beginPath();\n    ctx.lineWidth = 3;\n    ctx.strokeStyle = '#00FF00';\n    ctx.font = \"30px Arial\";\n    ctx.fillStyle = '#FFFF00';\n    ctx.moveTo(first.x, first.y );\n    ctx.arc(first.x, first.y, 3, 0, 2 * Math.PI);\n    // ctx.fillText(data.class, first.x, first.y - 10 );\n    ctx.stroke();\n\n    ctx.beginPath();\n    ctx.strokeStyle = '#FFFF00';\n    ctx.moveTo(data.path[0].x, data.path[0].y );\n    for( var i = 1; i < data.path.length; i++ )\n        ctx.lineTo(data.path[i].x,data.path[i].y ); ctx.lineTo(last.x,last.y );\n    ctx.stroke(); ctx.beginPath();\n    ctx.lineWidth=3;\n    ctx.strokeStyle='#FF0000';\n    ctx.moveTo(last.x, last.y );\n    ctx.arc(last.x, last.y, 3, 0, 2 * Math.PI); ctx.stroke();\n}\n\n\n(function(scope) {\n    scope.$watch('msg', function(msg) {\n        if( !msg || !msg.topic  )\n            return;\n        console.log(msg.topic);\n\n        switch( msg.topic ) {\n        case \"image\":\n            ClearCanvas();\n            setupImage(scope,msg.payload);\n            setupVideo(scope,msg.payload);\n            if( selectArea ) {\n                selectArea.setOptions({hide: true});\n                selectArea = null;\n            }\n            break;\n\n        case \"path\":\n            drawPath( msg.payload );\n            break;\n\n        case \"singlePath\":\n            ClearCanvas();\n            drawPath( msg.payload );\n            break;\n\n        case \"paths\":\n            ClearCanvas();\n            pathList = msg.payload;\n            msg.payload.forEach(function(path){\n                drawPath( path );\n            });\n            break;\n\n        case \"reset\":\n            ClearCanvas();\n            break;\n\n        case \"aoi\":\n            if( selectArea ) {\n                selectArea.setOptions({hide: true});\n                selectArea = null;\n            }\n            if( typeof msg.payload !== \"object\" )\n                return;\n            aoi = msg.payload.id || \"None\";\n            selectArea = $(\"#view_\"+scope.$id).imgAreaSelect({\n                x1: parseInt((msg.payload.x1 / 1000) * imageWidth),\n                y1: parseInt((msg.payload.y1 / 1000) * imageHeight),\n                x2: parseInt((msg.payload.x2 / 1000) * imageWidth),\n                y2: parseInt((msg.payload.y2 / 1000) * imageHeight),\n                minHeight: 20,\n                minWidth: 20,\n                handles: true,\n                enable:true,movable:true,resizable:true,show:true,\n                instance: true,\n                onSelectEnd: function( image, area ) {\n                var box = {\n                    id: aoi,\n                    x1: parseInt((area.x1 / imageWidth) * 1000),\n                    x2: parseInt((area.x2 / imageWidth) * 1000),\n                    y1: parseInt((area.y1 / imageHeight) * 1000),\n                    y2: parseInt((area.y2 / imageHeight) * 1000)\n                }\n                scope.send({topic:aoi||\"none\",payload:box});\n                }\n            });\n            selectArea.setOptions({show: true});\n            break;\n            case \"birth\":\n            case \"death\":\n                aoi = msg.payload.id || \"None\";\n                if(!selectArea) {\n                    selectArea = $(\"#view_\"+scope.$id).imgAreaSelect( {\n                        x1: parseInt(msg.payload.x1 / 1000 * imageWidth),\n                        x2: parseInt(msg.payload.x2 / 1000 * imageWidth),\n                        y1: parseInt(msg.payload.y1 / 1000 * imageHeight),\n                        y2: parseInt(msg.payload.y2 / 1000 * imageHeight),\n                        show: true, hide:false, minHeight: 5, minWidth: 5, handles: true, movable: true, resizable: true, instance:true,\n                        onSelectEnd: function( image, area ) {\n                            var area = {\n                                id: aoi,\n                                x1: parseInt((area.x1/imageWidth) * 1000),\n                                x2: parseInt((area.x2/imageWidth) * 1000),\n                                y1: parseInt((area.y1/imageHeight) * 1000),\n                                y2: parseInt((area.y2/imageHeight) * 1000)\n                            }\n                            scope.send({\n                                topic: aoi,\n                                payload: area\n                            });\n                        }\n                    });\n                }\n                selectArea.setSelection(\n                    parseInt(msg.payload.x1 / 1000 * imageWidth),\n                    parseInt(msg.payload.y1 / 1000 * imageHeight),\n                    parseInt(msg.payload.x2 / 1000 * imageWidth),\n                    parseInt(msg.payload.y2 / 1000 * imageHeight)\n                );\n                selectArea.setOptions({ show: true });\n            break;\n\t\t}\n    });\n})(scope);\n</script>",
        "storeOutMessages": false,
        "fwdInMessages": false,
        "resendOnRefresh": false,
        "templateScope": "local",
        "className": "",
        "x": 920,
        "y": 440,
        "wires": [
            [
                "348d9372323eb53d"
            ]
        ]
    },
    {
        "id": "c26b8dc87bf63531",
        "type": "ui_numeric",
        "z": "4d2a3af098557686",
        "g": "6b6e8e5d88004813",
        "name": "",
        "label": "Min Age (seconds)",
        "tooltip": "",
        "group": "b14fab5b1dcb2b25",
        "order": 3,
        "width": 0,
        "height": 0,
        "wrap": false,
        "passthru": true,
        "topic": "topic",
        "topicType": "msg",
        "format": "{{value}}",
        "min": 0,
        "max": 10,
        "step": "0.5",
        "className": "",
        "x": 670,
        "y": 920,
        "wires": [
            [
                "a7cfaa88545643ea"
            ]
        ]
    },
    {
        "id": "d59e39c5a0ced6b6",
        "type": "ui_numeric",
        "z": "4d2a3af098557686",
        "g": "6b6e8e5d88004813",
        "name": "",
        "label": "Min Distance (% of view)",
        "tooltip": "",
        "group": "b14fab5b1dcb2b25",
        "order": 4,
        "width": 0,
        "height": 0,
        "wrap": false,
        "passthru": true,
        "topic": "topic",
        "topicType": "msg",
        "format": "{{value}}",
        "min": 0,
        "max": "100",
        "step": "10",
        "className": "",
        "x": 690,
        "y": 960,
        "wires": [
            [
                "59c6a673885c2229"
            ]
        ]
    },
    {
        "id": "a7cfaa88545643ea",
        "type": "change",
        "z": "4d2a3af098557686",
        "g": "6b6e8e5d88004813",
        "name": "",
        "rules": [
            {
                "t": "set",
                "p": "age",
                "pt": "flow",
                "to": "payload",
                "tot": "msg"
            }
        ],
        "action": "",
        "property": "",
        "from": "",
        "to": "",
        "reg": false,
        "x": 930,
        "y": 920,
        "wires": [
            []
        ]
    },
    {
        "id": "59c6a673885c2229",
        "type": "change",
        "z": "4d2a3af098557686",
        "g": "6b6e8e5d88004813",
        "name": "",
        "rules": [
            {
                "t": "set",
                "p": "distance",
                "pt": "flow",
                "to": "payload",
                "tot": "msg"
            }
        ],
        "action": "",
        "property": "",
        "from": "",
        "to": "",
        "reg": false,
        "x": 920,
        "y": 960,
        "wires": [
            []
        ]
    },
    {
        "id": "f945500bc89d4b76",
        "type": "ui_dropdown",
        "z": "4d2a3af098557686",
        "g": "6b6e8e5d88004813",
        "name": "Class selection",
        "label": "Classes",
        "tooltip": "",
        "place": "Select detection",
        "group": "b14fab5b1dcb2b25",
        "order": 2,
        "width": 0,
        "height": 0,
        "passthru": true,
        "multiple": true,
        "options": [
            {
                "label": "Human",
                "value": "Human",
                "type": "str"
            },
            {
                "label": "Face",
                "value": "Face",
                "type": "str"
            },
            {
                "label": "Head",
                "value": "Head",
                "type": "str"
            },
            {
                "label": "Bag",
                "value": "Bag",
                "type": "str"
            },
            {
                "label": "Car",
                "value": "Car",
                "type": "str"
            },
            {
                "label": "Truck",
                "value": "Truck",
                "type": "str"
            },
            {
                "label": "Bus",
                "value": "Bus",
                "type": "str"
            },
            {
                "label": "Bike",
                "value": "Bike",
                "type": "str"
            },
            {
                "label": "Vehicle",
                "value": "Vehicle",
                "type": "str"
            },
            {
                "label": "License plate",
                "value": "License plate",
                "type": "str"
            }
        ],
        "payload": "",
        "topic": "topic",
        "topicType": "msg",
        "className": "",
        "x": 660,
        "y": 880,
        "wires": [
            [
                "057d62ed15e7e3e5"
            ]
        ]
    },
    {
        "id": "057d62ed15e7e3e5",
        "type": "change",
        "z": "4d2a3af098557686",
        "g": "6b6e8e5d88004813",
        "name": "flow.classes",
        "rules": [
            {
                "t": "set",
                "p": "classes",
                "pt": "flow",
                "to": "payload",
                "tot": "msg",
                "dc": true
            }
        ],
        "action": "",
        "property": "",
        "from": "",
        "to": "",
        "reg": false,
        "x": 930,
        "y": 880,
        "wires": [
            []
        ]
    },
    {
        "id": "7eafbb298115348c",
        "type": "function",
        "z": "4d2a3af098557686",
        "g": "6b6e8e5d88004813",
        "name": "Classes",
        "func": "if( !flow.get(\"classes\") ) {\n    msg.payload = [ \"Human\", \"Car\" ];\n} else {\n    msg.payload = flow.get(\"classes\");\n}\n\nreturn msg;",
        "outputs": 1,
        "timeout": 0,
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "libs": [],
        "x": 420,
        "y": 880,
        "wires": [
            [
                "f945500bc89d4b76"
            ]
        ]
    },
    {
        "id": "bd9f6ab1f0b8b13f",
        "type": "ui_button",
        "z": "4d2a3af098557686",
        "g": "7a2ff2ef405803e4",
        "name": "",
        "group": "b14fab5b1dcb2b25",
        "order": 6,
        "width": 0,
        "height": 0,
        "passthru": false,
        "label": "Set area objects must pass",
        "tooltip": "",
        "color": "",
        "bgcolor": "",
        "className": "",
        "icon": "",
        "payload": "",
        "payloadType": "str",
        "topic": "topic",
        "topicType": "msg",
        "x": 400,
        "y": 480,
        "wires": [
            [
                "d5f12182607e876a"
            ]
        ]
    },
    {
        "id": "d5f12182607e876a",
        "type": "function",
        "z": "4d2a3af098557686",
        "g": "7a2ff2ef405803e4",
        "name": "aoi",
        "func": "msg.topic = \"aoi\";\nmsg.payload = flow.get(\"aoi\") || {\n    id: \"aoi\",\n    x1: 200,\n    y1: 200,\n    x2: 800,\n    y2: 800\n}\n\nreturn msg;",
        "outputs": 1,
        "timeout": 0,
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "libs": [],
        "x": 670,
        "y": 480,
        "wires": [
            [
                "22fe3a3a15d07513"
            ]
        ]
    },
    {
        "id": "a0aa8a3c59a957b4",
        "type": "ui_button",
        "z": "4d2a3af098557686",
        "g": "7a2ff2ef405803e4",
        "name": "",
        "group": "b14fab5b1dcb2b25",
        "order": 9,
        "width": 0,
        "height": 0,
        "passthru": false,
        "label": "Save",
        "tooltip": "",
        "color": "",
        "bgcolor": "green",
        "className": "",
        "icon": "",
        "payload": "false",
        "payloadType": "bool",
        "topic": "aoi",
        "topicType": "str",
        "x": 670,
        "y": 520,
        "wires": [
            [
                "22fe3a3a15d07513"
            ]
        ]
    },
    {
        "id": "348d9372323eb53d",
        "type": "change",
        "z": "4d2a3af098557686",
        "g": "7a2ff2ef405803e4",
        "name": "",
        "rules": [
            {
                "t": "set",
                "p": "aoi",
                "pt": "flow",
                "to": "payload",
                "tot": "msg"
            }
        ],
        "action": "",
        "property": "",
        "from": "",
        "to": "",
        "reg": false,
        "x": 1070,
        "y": 440,
        "wires": [
            []
        ]
    },
    {
        "id": "6e705161068fbc8c",
        "type": "ui_button",
        "z": "4d2a3af098557686",
        "g": "7a2ff2ef405803e4",
        "name": "",
        "group": "7348b105173cd658",
        "order": 4,
        "width": "3",
        "height": "1",
        "passthru": true,
        "label": "Play",
        "tooltip": "",
        "color": "",
        "bgcolor": "",
        "className": "",
        "icon": "",
        "payload": "",
        "payloadType": "str",
        "topic": "topic",
        "topicType": "msg",
        "x": 330,
        "y": 640,
        "wires": [
            [
                "5a33a2defeb64456"
            ]
        ]
    },
    {
        "id": "8959debe6e6fd4d0",
        "type": "Camera",
        "z": "4d2a3af098557686",
        "g": "7a2ff2ef405803e4",
        "resolution": "1280x720",
        "overlay": "yes",
        "channel": "1",
        "output": "base64",
        "x": 540,
        "y": 640,
        "wires": [
            [
                "d653e1a89741c667"
            ]
        ]
    },
    {
        "id": "d653e1a89741c667",
        "type": "function",
        "z": "4d2a3af098557686",
        "g": "7a2ff2ef405803e4",
        "name": "Image",
        "func": "msg.topic = \"image\";\n\nmsg.payload = {\n    aspect: flow.get(\"aspect\") || \"16:9\",\n    rotation: flow.get(\"rotation\") || \"Landscape\",\n    image: msg.payload\n}\n\nreturn msg;",
        "outputs": 1,
        "timeout": 0,
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "libs": [],
        "x": 750,
        "y": 600,
        "wires": [
            [
                "22fe3a3a15d07513",
                "3c4747e73a1f4e9d"
            ]
        ]
    },
    {
        "id": "29c99b4395c44ec4",
        "type": "inject",
        "z": "4d2a3af098557686",
        "g": "7a2ff2ef405803e4",
        "name": "Every hour",
        "props": [
            {
                "p": "payload"
            },
            {
                "p": "topic",
                "vt": "str"
            }
        ],
        "repeat": "7200",
        "crontab": "",
        "once": true,
        "onceDelay": "1",
        "topic": "",
        "payload": "",
        "payloadType": "date",
        "x": 370,
        "y": 600,
        "wires": [
            [
                "5a33a2defeb64456"
            ]
        ]
    },
    {
        "id": "5f7d11daa124abdd",
        "type": "ui_dropdown",
        "z": "4d2a3af098557686",
        "g": "6b6e8e5d88004813",
        "name": "Aspect",
        "label": "Image aspect",
        "tooltip": "",
        "place": "Select aspect",
        "group": "b14fab5b1dcb2b25",
        "order": 7,
        "width": "6",
        "height": "1",
        "passthru": true,
        "multiple": false,
        "options": [
            {
                "label": "16:9",
                "value": "16:9",
                "type": "str"
            },
            {
                "label": "4:3",
                "value": "4:3",
                "type": "str"
            },
            {
                "label": "1:1",
                "value": "1:1",
                "type": "str"
            }
        ],
        "payload": "",
        "topic": "aspect",
        "topicType": "str",
        "className": "",
        "x": 630,
        "y": 1000,
        "wires": [
            [
                "cef939dda5ff9e5b"
            ]
        ]
    },
    {
        "id": "cb4429c4614656de",
        "type": "ui_dropdown",
        "z": "4d2a3af098557686",
        "g": "6b6e8e5d88004813",
        "name": "Rotation",
        "label": "Image rotation",
        "tooltip": "",
        "place": "Select rotation",
        "group": "b14fab5b1dcb2b25",
        "order": 8,
        "width": "6",
        "height": "1",
        "passthru": true,
        "multiple": false,
        "options": [
            {
                "label": "Landscape",
                "value": "Landscape",
                "type": "str"
            },
            {
                "label": "Portrait",
                "value": "Portrait",
                "type": "str"
            }
        ],
        "payload": "",
        "topic": "rotation",
        "topicType": "str",
        "className": "",
        "x": 640,
        "y": 1040,
        "wires": [
            [
                "dd4446a9465d2c38"
            ]
        ]
    },
    {
        "id": "5a33a2defeb64456",
        "type": "function",
        "z": "4d2a3af098557686",
        "g": "7a2ff2ef405803e4",
        "name": "Resolution",
        "func": "var aspect = flow.get(\"aspect\") || \"16:9\";\n\nswitch( aspect ) {\n    case \"4:3\":\n        msg.resolution = \"800x600\"\n        break;\n    case \"1:1\":\n        msg.resolution = \"800x800\"\n        break;\n    case \"16:9\":\n    default:\n        msg.resolution = \"1280x720\"\n}\n\nreturn msg;",
        "outputs": 1,
        "timeout": 0,
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "libs": [],
        "x": 550,
        "y": 600,
        "wires": [
            [
                "8959debe6e6fd4d0"
            ]
        ]
    },
    {
        "id": "7636cd3d4447b0e8",
        "type": "function",
        "z": "4d2a3af098557686",
        "g": "6b6e8e5d88004813",
        "name": "name",
        "func": "msg.payload = flow.get(\"name\") || \"\";\nreturn msg;",
        "outputs": 1,
        "timeout": 0,
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "libs": [],
        "x": 410,
        "y": 800,
        "wires": [
            [
                "5a65553cfedf4110"
            ]
        ]
    },
    {
        "id": "5a65553cfedf4110",
        "type": "ui_text_input",
        "z": "4d2a3af098557686",
        "g": "6b6e8e5d88004813",
        "name": "",
        "label": "Name",
        "tooltip": "",
        "group": "b14fab5b1dcb2b25",
        "order": 1,
        "width": 0,
        "height": 0,
        "passthru": false,
        "mode": "text",
        "delay": 300,
        "topic": "topic",
        "sendOnBlur": true,
        "className": "",
        "topicType": "msg",
        "x": 630,
        "y": 800,
        "wires": [
            [
                "0a7139e5e8ecf93b"
            ]
        ]
    },
    {
        "id": "0a7139e5e8ecf93b",
        "type": "change",
        "z": "4d2a3af098557686",
        "g": "6b6e8e5d88004813",
        "name": "flow.name",
        "rules": [
            {
                "t": "set",
                "p": "name",
                "pt": "flow",
                "to": "payload",
                "tot": "msg",
                "dc": true
            }
        ],
        "action": "",
        "property": "",
        "from": "",
        "to": "",
        "reg": false,
        "x": 940,
        "y": 800,
        "wires": [
            []
        ]
    },
    {
        "id": "fa23009447afa883",
        "type": "function",
        "z": "4d2a3af098557686",
        "g": "6b6e8e5d88004813",
        "name": "Confidence",
        "func": "msg.payload = flow.get(\"confidence\") || 10;\nreturn msg;",
        "outputs": 1,
        "timeout": 0,
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "libs": [],
        "x": 430,
        "y": 840,
        "wires": [
            [
                "b0f4d51f2f8a2069"
            ]
        ]
    },
    {
        "id": "b0f4d51f2f8a2069",
        "type": "ui_dropdown",
        "z": "4d2a3af098557686",
        "g": "6b6e8e5d88004813",
        "name": "Confidence selection",
        "label": "Min confidence",
        "tooltip": "",
        "place": "Select detection",
        "group": "b14fab5b1dcb2b25",
        "order": 5,
        "width": 0,
        "height": 0,
        "passthru": false,
        "multiple": false,
        "options": [
            {
                "label": "10",
                "value": 10,
                "type": "num"
            },
            {
                "label": "20",
                "value": 20,
                "type": "num"
            },
            {
                "label": "30",
                "value": 30,
                "type": "num"
            },
            {
                "label": "40",
                "value": 40,
                "type": "num"
            },
            {
                "label": "50",
                "value": 50,
                "type": "num"
            },
            {
                "label": "60",
                "value": 60,
                "type": "num"
            },
            {
                "label": "70",
                "value": 70,
                "type": "num"
            },
            {
                "label": "80",
                "value": 80,
                "type": "num"
            },
            {
                "label": "90",
                "value": 90,
                "type": "num"
            }
        ],
        "payload": "",
        "topic": "topic",
        "topicType": "msg",
        "className": "",
        "x": 680,
        "y": 840,
        "wires": [
            [
                "a9144480f676e057"
            ]
        ]
    },
    {
        "id": "a9144480f676e057",
        "type": "change",
        "z": "4d2a3af098557686",
        "g": "6b6e8e5d88004813",
        "name": "flow.confidence",
        "rules": [
            {
                "t": "set",
                "p": "confidence",
                "pt": "flow",
                "to": "payload",
                "tot": "msg",
                "dc": true
            }
        ],
        "action": "",
        "property": "",
        "from": "",
        "to": "",
        "reg": false,
        "x": 920,
        "y": 840,
        "wires": [
            []
        ]
    },
    {
        "id": "90c8c1e2905a5162",
        "type": "link out",
        "z": "4d2a3af098557686",
        "name": "Path",
        "mode": "link",
        "links": [
            "1db7eb81da375feb",
            "9db1f470b7372e91",
            "75186e190b087513",
            "716f549853593db1",
            "19630bb825bef086"
        ],
        "x": 645,
        "y": 140,
        "wires": []
    },
    {
        "id": "1db7eb81da375feb",
        "type": "link in",
        "z": "4d2a3af098557686",
        "name": "link in 1",
        "links": [
            "63a0b93e33536372",
            "90c8c1e2905a5162",
            "7307295e0c7b7a1d",
            "d38073e88f076298"
        ],
        "x": 185,
        "y": 440,
        "wires": [
            [
                "22fe3a3a15d07513"
            ]
        ]
    },
    {
        "id": "43750492e3442e5c",
        "type": "link in",
        "z": "4d2a3af098557686",
        "name": "link in 2",
        "links": [
            "cc6983fceb95a4af",
            "64d0beb8e1423bb7"
        ],
        "x": 185,
        "y": 640,
        "wires": [
            [
                "6e705161068fbc8c"
            ]
        ]
    },
    {
        "id": "19630bb825bef086",
        "type": "link in",
        "z": "4d2a3af098557686",
        "name": "link in 7",
        "links": [
            "90c8c1e2905a5162"
        ],
        "x": 205,
        "y": 260,
        "wires": [
            [
                "d06bea689ee6aaa1"
            ]
        ]
    },
    {
        "id": "444dc6894e9ed71e",
        "type": "comment",
        "z": "4d2a3af098557686",
        "name": "Path",
        "info": "",
        "x": 130,
        "y": 260,
        "wires": []
    },
    {
        "id": "44f4eda7c6b594c3",
        "type": "mqtt out",
        "z": "4d2a3af098557686",
        "name": "",
        "topic": "",
        "qos": "",
        "retain": "",
        "respTopic": "",
        "contentType": "",
        "userProps": "",
        "correl": "",
        "expiry": "",
        "broker": "d1d53d1e87be4083",
        "x": 630,
        "y": 260,
        "wires": []
    },
    {
        "id": "3c4747e73a1f4e9d",
        "type": "link out",
        "z": "4d2a3af098557686",
        "name": "link out 10",
        "mode": "link",
        "links": [
            "a6c071f176a5fdec"
        ],
        "x": 1235,
        "y": 600,
        "wires": []
    },
    {
        "id": "cef939dda5ff9e5b",
        "type": "change",
        "z": "4d2a3af098557686",
        "g": "6b6e8e5d88004813",
        "name": "",
        "rules": [
            {
                "t": "set",
                "p": "aspect",
                "pt": "flow",
                "to": "payload",
                "tot": "msg"
            }
        ],
        "action": "",
        "property": "",
        "from": "",
        "to": "",
        "reg": false,
        "x": 920,
        "y": 1000,
        "wires": [
            []
        ]
    },
    {
        "id": "dd4446a9465d2c38",
        "type": "change",
        "z": "4d2a3af098557686",
        "g": "6b6e8e5d88004813",
        "name": "",
        "rules": [
            {
                "t": "set",
                "p": "rotation",
                "pt": "flow",
                "to": "payload",
                "tot": "msg"
            }
        ],
        "action": "",
        "property": "",
        "from": "",
        "to": "",
        "reg": false,
        "x": 920,
        "y": 1040,
        "wires": [
            []
        ]
    },
    {
        "id": "d06bea689ee6aaa1",
        "type": "function",
        "z": "4d2a3af098557686",
        "g": "1b1e82a6f52ab006",
        "name": "path/SERIAL",
        "func": "msg.payload.device = flow.get(\"device\").serial;\nmsg.payload.name = flow.get(\"name\") || flow.get(\"device\").hostname || flow.get(\"device\").name;\nmsg.topic = \"path/\" + msg.payload.device;\n\nreturn msg;",
        "outputs": 1,
        "timeout": 0,
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "libs": [],
        "x": 350,
        "y": 260,
        "wires": [
            [
                "ba415c42b10fce69"
            ]
        ]
    },
    {
        "id": "62f2fa1813893d81",
        "type": "comment",
        "z": "4d2a3af098557686",
        "name": "Version 1.6",
        "info": "",
        "x": 320,
        "y": 60,
        "wires": []
    },
    {
        "id": "b75cb5d20deb0d91",
        "type": "inject",
        "z": "4d2a3af098557686",
        "name": "",
        "props": [
            {
                "p": "payload"
            },
            {
                "p": "topic",
                "vt": "str"
            }
        ],
        "repeat": "",
        "crontab": "",
        "once": true,
        "onceDelay": "0.5",
        "topic": "",
        "payload": "",
        "payloadType": "date",
        "x": 130,
        "y": 800,
        "wires": [
            [
                "c641d23ac93afa95"
            ]
        ]
    },
    {
        "id": "5736c5dc251b7801",
        "type": "catch",
        "z": "4d2a3af098557686",
        "name": "",
        "scope": null,
        "uncaught": false,
        "x": 100,
        "y": 1160,
        "wires": [
            [
                "1922b0122cc26a03"
            ]
        ]
    },
    {
        "id": "1922b0122cc26a03",
        "type": "function",
        "z": "4d2a3af098557686",
        "name": "Format",
        "func": "msg.topic = \"exception/pathingestion/\" + flow.get(\"camera\").serial\nmsg.payload = msg.error;\nreturn msg;",
        "outputs": 1,
        "timeout": 0,
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "libs": [],
        "x": 270,
        "y": 1160,
        "wires": [
            [
                "b607027d24def50f",
                "39dceeb321319a52",
                "83d9852e8805f499"
            ]
        ]
    },
    {
        "id": "b607027d24def50f",
        "type": "mqtt out",
        "z": "4d2a3af098557686",
        "name": "",
        "topic": "exception/objectpath/SERIAL",
        "qos": "",
        "retain": "",
        "respTopic": "",
        "contentType": "",
        "userProps": "",
        "correl": "",
        "expiry": "",
        "broker": "d1d53d1e87be4083",
        "x": 530,
        "y": 1160,
        "wires": []
    },
    {
        "id": "39dceeb321319a52",
        "type": "debug",
        "z": "4d2a3af098557686",
        "name": "debug 181",
        "active": true,
        "tosidebar": true,
        "console": false,
        "tostatus": false,
        "complete": "false",
        "statusVal": "",
        "statusType": "auto",
        "x": 480,
        "y": 1240,
        "wires": []
    },
    {
        "id": "83d9852e8805f499",
        "type": "change",
        "z": "4d2a3af098557686",
        "name": "",
        "rules": [
            {
                "t": "set",
                "p": "payload",
                "pt": "msg",
                "to": "payload.message",
                "tot": "msg"
            }
        ],
        "action": "",
        "property": "",
        "from": "",
        "to": "",
        "reg": false,
        "x": 490,
        "y": 1200,
        "wires": [
            [
                "4ea3a8588e15f0e1"
            ]
        ]
    },
    {
        "id": "4ea3a8588e15f0e1",
        "type": "ui_toast",
        "z": "4d2a3af098557686",
        "position": "dialog",
        "displayTime": "3",
        "highlight": "",
        "sendall": true,
        "outputs": 1,
        "ok": "OK",
        "cancel": "",
        "raw": false,
        "className": "",
        "topic": "",
        "name": "",
        "x": 700,
        "y": 1200,
        "wires": [
            []
        ]
    },
    {
        "id": "a6c071f176a5fdec",
        "type": "link in",
        "z": "4d2a3af098557686",
        "name": "link in 15",
        "links": [
            "3c4747e73a1f4e9d"
        ],
        "x": 215,
        "y": 320,
        "wires": [
            [
                "f17846a95411b0bb"
            ]
        ]
    },
    {
        "id": "f17846a95411b0bb",
        "type": "function",
        "z": "4d2a3af098557686",
        "g": "1b1e82a6f52ab006",
        "name": "image/SERIAL",
        "func": "msg.topic = \"image/\" + flow.get(\"device\").serial || \"Undefined\";\n\nmsg.payload = {\n    device: flow.get(\"device\").serial || \"Undefined\",\n    name: flow.get(\"name\") || flow.get(\"device\").hostname || flow.get(\"device\").name,\n    timestamp: new Date().getTime(),\n    rotation: msg.payload.rotation,\n    aspect: msg.payload.aspect,\n    image: msg.payload.image\n}\n\n\nreturn msg;",
        "outputs": 1,
        "timeout": 0,
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "libs": [],
        "x": 360,
        "y": 320,
        "wires": [
            [
                "ba415c42b10fce69"
            ]
        ]
    },
    {
        "id": "df76f32938c10e11",
        "type": "comment",
        "z": "4d2a3af098557686",
        "name": "Image",
        "info": "",
        "x": 130,
        "y": 320,
        "wires": []
    },
    {
        "id": "3fe4f34010d94881",
        "type": "comment",
        "z": "4d2a3af098557686",
        "name": "Image",
        "info": "",
        "x": 730,
        "y": 140,
        "wires": []
    },
    {
        "id": "70c2565ef7c3fa19",
        "type": "comment",
        "z": "4d2a3af098557686",
        "name": "Image",
        "info": "",
        "x": 1310,
        "y": 600,
        "wires": []
    },
    {
        "id": "396f6c0a21306e14",
        "type": "function",
        "z": "4d2a3af098557686",
        "g": "6b6e8e5d88004813",
        "name": "age",
        "func": "if( !flow.get(\"age\") ) {\n    msg.payload = 1;\n} else {\n    msg.payload = flow.get(\"age\");\n}\n\nreturn msg;",
        "outputs": 1,
        "timeout": 0,
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "libs": [],
        "x": 410,
        "y": 920,
        "wires": [
            [
                "c26b8dc87bf63531"
            ]
        ]
    },
    {
        "id": "ccb4d5f2755880e3",
        "type": "function",
        "z": "4d2a3af098557686",
        "g": "6b6e8e5d88004813",
        "name": "distance",
        "func": "if( !flow.get(\"distance\") ) {\n    msg.payload = 20;\n} else {\n    msg.payload = flow.get(\"distance\");\n}\n\nreturn msg;",
        "outputs": 1,
        "timeout": 0,
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "libs": [],
        "x": 420,
        "y": 960,
        "wires": [
            [
                "d59e39c5a0ced6b6"
            ]
        ]
    },
    {
        "id": "14150c37ef9f7b25",
        "type": "function",
        "z": "4d2a3af098557686",
        "g": "6b6e8e5d88004813",
        "name": "aspect",
        "func": "if( !flow.get(\"aspect\") ) {\n    msg.payload = \"16:9\";\n} else {\n    msg.payload = flow.get(\"aspect\");\n}\n\nreturn msg;",
        "outputs": 1,
        "timeout": 0,
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "libs": [],
        "x": 410,
        "y": 1000,
        "wires": [
            [
                "5f7d11daa124abdd"
            ]
        ]
    },
    {
        "id": "d1d775f40d499d0f",
        "type": "function",
        "z": "4d2a3af098557686",
        "g": "6b6e8e5d88004813",
        "name": "rotation",
        "func": "if( !flow.get(\"rotation\") ) {\n    msg.payload = \"Landscape\";\n} else {\n    msg.payload = flow.get(\"rotation\");\n}\n\nreturn msg;",
        "outputs": 1,
        "timeout": 0,
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "libs": [],
        "x": 420,
        "y": 1040,
        "wires": [
            [
                "cb4429c4614656de"
            ]
        ]
    },
    {
        "id": "73fbb18d33a287f1",
        "type": "Device Access",
        "name": "Localhost",
        "address": "localhost",
        "protocol": "http"
    },
    {
        "id": "7348b105173cd658",
        "type": "ui_group",
        "name": "Heatmap",
        "tab": "531dc7602bdeef80",
        "order": 1,
        "disp": false,
        "width": "16",
        "collapse": false,
        "className": ""
    },
    {
        "id": "b14fab5b1dcb2b25",
        "type": "ui_group",
        "name": "Settings",
        "tab": "531dc7602bdeef80",
        "order": 2,
        "disp": true,
        "width": "6",
        "collapse": false,
        "className": ""
    },
    {
        "id": "d1d53d1e87be4083",
        "type": "mqtt-broker",
        "name": "MQTT Broker",
        "broker": "10.13.8.20",
        "port": "1883",
        "clientid": "",
        "autoConnect": true,
        "usetls": false,
        "protocolVersion": "4",
        "keepalive": "60",
        "cleansession": true,
        "autoUnsubscribe": true,
        "birthTopic": "",
        "birthQos": "0",
        "birthRetain": "false",
        "birthPayload": "",
        "birthMsg": {},
        "closeTopic": "",
        "closeQos": "0",
        "closeRetain": "false",
        "closePayload": "",
        "closeMsg": {},
        "willTopic": "",
        "willQos": "0",
        "willRetain": "false",
        "willPayload": "",
        "willMsg": {},
        "userProps": "",
        "sessionExpiry": ""
    },
    {
        "id": "531dc7602bdeef80",
        "type": "ui_tab",
        "name": "Object Path",
        "icon": "dashboard",
        "order": 1,
        "disabled": false,
        "hidden": false
    }
]
