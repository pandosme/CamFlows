[
    {
        "id": "0050d9ae56377048",
        "type": "tab",
        "label": "MP4",
        "disabled": false,
        "info": "",
        "env": []
    },
    {
        "id": "e557bf789a82c34c",
        "type": "group",
        "z": "0050d9ae56377048",
        "name": "Monitor changes on SD Card",
        "style": {
            "label": true,
            "stroke": "#000000",
            "fill": "#ffffbf",
            "color": "#000000"
        },
        "nodes": [
            "fdc9c1108e5965fd",
            "ce18b9c67275fa52",
            "068538a9c080413e",
            "f5241f23ecaa10e5"
        ],
        "x": 234,
        "y": 1259,
        "w": 752,
        "h": 82
    },
    {
        "id": "e342d4ca6dee8fec",
        "type": "group",
        "z": "0050d9ae56377048",
        "name": "Initialization.  Create recording directory and list",
        "style": {
            "label": true,
            "stroke": "#000000",
            "fill": "#ffffbf",
            "color": "#000000"
        },
        "nodes": [
            "de2ee0a1d802f75c",
            "b5206d44633f2a65",
            "ed4ed1dae504b9cf",
            "6aa6474471c207a5",
            "996975f29da2d0ec",
            "4c77f6d110b3724b",
            "5ff2811f2fa742a3",
            "6cd7fa1ba2cab1da",
            "53c28cfcd525e316",
            "e93a6532d793421e",
            "193d5541b5a48ede"
        ],
        "x": 234,
        "y": 1019,
        "w": 1232,
        "h": 182
    },
    {
        "id": "aa062806b52f8a46",
        "type": "group",
        "z": "0050d9ae56377048",
        "name": "Convert & Output",
        "style": {
            "label": true,
            "stroke": "#000000",
            "fill": "#bfdbef",
            "color": "#000000"
        },
        "nodes": [
            "d8ffab0d2a4acefd",
            "332d681851308e98",
            "528cb5202c2a4018",
            "cbc93b2a3e3655cb",
            "138bc790473a3db5",
            "81537698c0c353a8",
            "2c3d65e57e83259a",
            "a43e7dc78904e242",
            "e5575a71f4858edd",
            "8a2937f5b6697bea",
            "d0bd05f7775410b7",
            "e4a7ff5032ff8d8e",
            "85bb456f10f19515",
            "80d510a628748a10",
            "5f1dc739038c92e5",
            "cca71cba6c739e05",
            "9ea3876eae208d6e",
            "f4e2c3380cfc971a"
        ],
        "x": 234,
        "y": 99,
        "w": 812,
        "h": 382
    },
    {
        "id": "c28641a5b1106a2d",
        "type": "group",
        "z": "0050d9ae56377048",
        "name": "Error handling",
        "style": {
            "label": true,
            "stroke": "#000000",
            "fill": "#ffbfbf",
            "color": "#000000"
        },
        "nodes": [
            "3bc873d31ade7952",
            "fddc1f1f93a826d8",
            "9ae45793d0323c88"
        ],
        "x": 234,
        "y": 1399,
        "w": 552,
        "h": 122
    },
    {
        "id": "9ea7fe9cba30ca87",
        "type": "group",
        "z": "0050d9ae56377048",
        "name": "API Export List",
        "style": {
            "label": true,
            "stroke": "#000000",
            "fill": "#bfdbef",
            "color": "#000000"
        },
        "nodes": [
            "71be0ff75a5c8732",
            "bb1bce8e909cbd33",
            "18fc14d4493012f1",
            "24634ebf13450117",
            "0bb34d4577390760",
            "93ecd0a99971a6ee",
            "cb877a5d79167a1b",
            "9cdd253c01821dbf",
            "c43057de7d7f9476",
            "8513b5653a372edb",
            "2ed07042fa568816"
        ],
        "x": 234,
        "y": 539,
        "w": 872,
        "h": 202
    },
    {
        "id": "28990bcb85af5da3",
        "type": "group",
        "z": "0050d9ae56377048",
        "name": "Retention period",
        "style": {
            "label": true,
            "stroke": "#000000",
            "fill": "#bfdbef",
            "color": "#000000"
        },
        "nodes": [
            "23d54322b565f3cf",
            "80582f4142c6b5e5",
            "86a98827d848a3b8",
            "a7a6c44e91114a47",
            "d1c5f81cbd35847d",
            "4a16a630f1718d66",
            "96af1d3849a8ae5a",
            "8ee1a53d84c4e6bf"
        ],
        "x": 234,
        "y": 811.5,
        "w": 1092,
        "h": 149.5
    },
    {
        "id": "de2ee0a1d802f75c",
        "type": "inject",
        "z": "0050d9ae56377048",
        "g": "e342d4ca6dee8fec",
        "name": "Init",
        "props": [
            {
                "p": "payload"
            },
            {
                "p": "topic",
                "vt": "str"
            }
        ],
        "repeat": "",
        "crontab": "",
        "once": true,
        "onceDelay": 0.1,
        "topic": "",
        "payload": "",
        "payloadType": "date",
        "x": 330,
        "y": 1060,
        "wires": [
            [
                "b5206d44633f2a65",
                "ed4ed1dae504b9cf"
            ]
        ]
    },
    {
        "id": "b5206d44633f2a65",
        "type": "exec",
        "z": "0050d9ae56377048",
        "g": "e342d4ca6dee8fec",
        "command": "mkdir sdcard/mp4",
        "addpay": "",
        "append": "",
        "useSpawn": "false",
        "timer": "",
        "winHide": false,
        "oldrc": false,
        "name": "",
        "x": 510,
        "y": 1120,
        "wires": [
            [],
            [],
            [
                "996975f29da2d0ec"
            ]
        ]
    },
    {
        "id": "d8ffab0d2a4acefd",
        "type": "function",
        "z": "0050d9ae56377048",
        "g": "aa062806b52f8a46",
        "name": "GStreamer",
        "func": "msg.payload = 'gst-launch-1.0 filesrc location=' + msg.payload.fullpath + ' ! matroskademux ! h264parse ! mp4mux ! filesink location=sdcard/mp4/' + msg.payload.name + '.mp4';\nreturn msg;",
        "outputs": 1,
        "timeout": 0,
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "libs": [],
        "x": 430,
        "y": 320,
        "wires": [
            [
                "138bc790473a3db5"
            ]
        ]
    },
    {
        "id": "332d681851308e98",
        "type": "Events",
        "z": "0050d9ae56377048",
        "g": "aa062806b52f8a46",
        "group": "storage",
        "initialization": false,
        "x": 340,
        "y": 140,
        "wires": [
            [
                "528cb5202c2a4018"
            ]
        ]
    },
    {
        "id": "528cb5202c2a4018",
        "type": "switch",
        "z": "0050d9ae56377048",
        "g": "aa062806b52f8a46",
        "name": "Recording Event?",
        "property": "topic",
        "propertyType": "msg",
        "rules": [
            {
                "t": "eq",
                "v": "storage/recording",
                "vt": "str"
            }
        ],
        "checkall": "true",
        "repair": false,
        "outputs": 1,
        "x": 670,
        "y": 140,
        "wires": [
            [
                "cbc93b2a3e3655cb"
            ]
        ]
    },
    {
        "id": "cbc93b2a3e3655cb",
        "type": "switch",
        "z": "0050d9ae56377048",
        "g": "aa062806b52f8a46",
        "name": "Recording stopped?",
        "property": "payload.recording",
        "propertyType": "msg",
        "rules": [
            {
                "t": "eq",
                "v": "0",
                "vt": "num"
            }
        ],
        "checkall": "true",
        "repair": false,
        "outputs": 1,
        "x": 440,
        "y": 200,
        "wires": [
            [
                "e5575a71f4858edd"
            ]
        ]
    },
    {
        "id": "138bc790473a3db5",
        "type": "exec",
        "z": "0050d9ae56377048",
        "g": "aa062806b52f8a46",
        "command": "",
        "addpay": "payload",
        "append": "",
        "useSpawn": "true",
        "timer": "",
        "winHide": false,
        "oldrc": false,
        "name": "",
        "x": 630,
        "y": 320,
        "wires": [
            [],
            [
                "85bb456f10f19515"
            ],
            [
                "81537698c0c353a8"
            ]
        ]
    },
    {
        "id": "81537698c0c353a8",
        "type": "switch",
        "z": "0050d9ae56377048",
        "g": "aa062806b52f8a46",
        "name": "OK",
        "property": "payload.code",
        "propertyType": "msg",
        "rules": [
            {
                "t": "eq",
                "v": "0",
                "vt": "num"
            }
        ],
        "checkall": "true",
        "repair": false,
        "outputs": 1,
        "x": 410,
        "y": 380,
        "wires": [
            [
                "2c3d65e57e83259a"
            ]
        ]
    },
    {
        "id": "2c3d65e57e83259a",
        "type": "function",
        "z": "0050d9ae56377048",
        "g": "aa062806b52f8a46",
        "name": "Complete",
        "func": "msg.topic = \"mp4\";\nvar recording = flow.get(\"recording\");\nvar camera = flow.get(\"camera\");\nrecording.mp4 = recording.name + \".mp4\";\nflow.set(\"recording\",recording);\nmsg.payload = {\n    serial: camera.serial,\n    address: camera.IPv4,\n    model: camera.model,\n    id: recording.name,\n    source: \"SD\",\n    url: \"http://\" + camera.IPv4 + ':1880/mp4?file=' + recording.mp4,\n    mkv: \"http://\" + camera.IPv4 + '/axis-cgi/record/export/exportrecording.cgi?schemaversion=1&diskid=SD_DISK&exportformat=matroska&recordingid=' + flow.get(\"recordingID\"),\n    start: recording.start,\n    end: recording.end,\n    duration: recording.duration,\n    resolution: recording.width + \"x\" + recording.height,\n    fps: recording.fps\n}\nreturn msg;",
        "outputs": 1,
        "timeout": 0,
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "libs": [],
        "x": 640,
        "y": 380,
        "wires": [
            [
                "c8f625c43c683a59",
                "cca71cba6c739e05"
            ]
        ]
    },
    {
        "id": "a43e7dc78904e242",
        "type": "function",
        "z": "0050d9ae56377048",
        "g": "aa062806b52f8a46",
        "name": "Get Video Data",
        "func": "var recording = flow.get(\"recording\");\nvar items = recording.fullpath.split('/');\nmsg.filename = items[0] + '/' + items[1] + '/' + items[2] + '/' + items[3] + '/recording.xml';\nreturn msg;",
        "outputs": 1,
        "timeout": 0,
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "libs": [],
        "x": 440,
        "y": 260,
        "wires": [
            [
                "8a2937f5b6697bea"
            ]
        ]
    },
    {
        "id": "e5575a71f4858edd",
        "type": "trigger",
        "z": "0050d9ae56377048",
        "g": "aa062806b52f8a46",
        "name": "",
        "op1": "",
        "op2": "",
        "op1type": "nul",
        "op2type": "payl",
        "duration": "500",
        "extend": true,
        "overrideDelay": false,
        "units": "ms",
        "reset": "",
        "bytopic": "all",
        "topic": "topic",
        "outputs": 1,
        "x": 660,
        "y": 200,
        "wires": [
            [
                "a43e7dc78904e242"
            ]
        ]
    },
    {
        "id": "8a2937f5b6697bea",
        "type": "file in",
        "z": "0050d9ae56377048",
        "g": "aa062806b52f8a46",
        "name": "",
        "filename": "filename",
        "filenameType": "msg",
        "format": "utf8",
        "chunk": false,
        "sendError": false,
        "encoding": "none",
        "allProps": false,
        "x": 640,
        "y": 260,
        "wires": [
            [
                "d0bd05f7775410b7"
            ]
        ]
    },
    {
        "id": "d0bd05f7775410b7",
        "type": "xml",
        "z": "0050d9ae56377048",
        "g": "aa062806b52f8a46",
        "name": "",
        "property": "payload",
        "attr": "",
        "chr": "",
        "x": 790,
        "y": 260,
        "wires": [
            [
                "e4a7ff5032ff8d8e"
            ]
        ]
    },
    {
        "id": "e4a7ff5032ff8d8e",
        "type": "function",
        "z": "0050d9ae56377048",
        "g": "aa062806b52f8a46",
        "name": "Data",
        "func": "var recording = flow.get(\"recording\");\nrecording.token = msg.payload.Recording.$.RecordingToken;\nrecording.start = new Date(msg.payload.Recording.StartTime[0]).getTime();\nrecording.end = new Date(msg.payload.Recording.StopTime[0]).getTime();\nrecording.duration = (recording.end - recording.start) / 1000;\nrecording.width = parseInt(msg.payload.Recording.Track[0].VideoAttributes[0].Width[0]);\nrecording.height = parseInt(msg.payload.Recording.Track[0].VideoAttributes[0].Height[0]);\nrecording.fps = parseInt(msg.payload.Recording.Track[0].VideoAttributes[0].Framerate[0]);\nrecording.tag = msg.payload.Recording.CustomAttributes[0].TriggerName[0];\nrecording.mp4 = null;\nflow.set(\"recording\",recording);\nmsg.payload = recording;\nreturn msg;",
        "outputs": 1,
        "timeout": 0,
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "libs": [],
        "x": 930,
        "y": 260,
        "wires": [
            [
                "d8ffab0d2a4acefd"
            ]
        ]
    },
    {
        "id": "fdc9c1108e5965fd",
        "type": "watch",
        "z": "0050d9ae56377048",
        "g": "e557bf789a82c34c",
        "name": "",
        "files": "sdcard",
        "recursive": true,
        "x": 310,
        "y": 1300,
        "wires": [
            [
                "ce18b9c67275fa52",
                "2b9d1d025c30b0fd"
            ]
        ]
    },
    {
        "id": "ce18b9c67275fa52",
        "type": "function",
        "z": "0050d9ae56377048",
        "g": "e557bf789a82c34c",
        "name": "msg.recording",
        "func": "msg.recording = {\n    fullpath: msg.payload\n}\nvar pathItems = msg.recording.fullpath.split(\"/\");\nmsg.recording.file = pathItems[pathItems.length-1];\nmsg.recording.name = msg.recording.file.split(\".\")[0];\nmsg.recording.ext = msg.recording.file.split(\".\")[1];\n\nif( msg.recording.name === \"recording\" && msg.recording.ext === \"xml\")\n    flow.set(\"recordingID\", pathItems[3]);\n\nmsg.payload = msg.recording;\n return msg;",
        "outputs": 1,
        "timeout": 0,
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "libs": [],
        "x": 500,
        "y": 1300,
        "wires": [
            [
                "f5241f23ecaa10e5"
            ]
        ]
    },
    {
        "id": "068538a9c080413e",
        "type": "change",
        "z": "0050d9ae56377048",
        "g": "e557bf789a82c34c",
        "name": "",
        "rules": [
            {
                "t": "set",
                "p": "recording",
                "pt": "flow",
                "to": "payload",
                "tot": "msg"
            }
        ],
        "action": "",
        "property": "",
        "from": "",
        "to": "",
        "reg": false,
        "x": 870,
        "y": 1300,
        "wires": [
            [
                "e8aa092f4e267003"
            ]
        ]
    },
    {
        "id": "f5241f23ecaa10e5",
        "type": "switch",
        "z": "0050d9ae56377048",
        "g": "e557bf789a82c34c",
        "name": "Only MKV",
        "property": "payload.ext",
        "propertyType": "msg",
        "rules": [
            {
                "t": "eq",
                "v": "mkv",
                "vt": "str"
            }
        ],
        "checkall": "true",
        "repair": false,
        "outputs": 1,
        "x": 680,
        "y": 1300,
        "wires": [
            [
                "068538a9c080413e"
            ]
        ]
    },
    {
        "id": "85bb456f10f19515",
        "type": "change",
        "z": "0050d9ae56377048",
        "g": "aa062806b52f8a46",
        "name": "Message",
        "rules": [
            {
                "t": "set",
                "p": "payload",
                "pt": "msg",
                "to": "Conversion failed",
                "tot": "str"
            }
        ],
        "action": "",
        "property": "",
        "from": "",
        "to": "",
        "reg": false,
        "x": 780,
        "y": 320,
        "wires": [
            [
                "80d510a628748a10"
            ]
        ]
    },
    {
        "id": "654b0e93d15ea254",
        "type": "link in",
        "z": "0050d9ae56377048",
        "name": "link in 17",
        "links": [
            "9e83f48031d222fe",
            "80d510a628748a10"
        ],
        "x": 185,
        "y": 1440,
        "wires": [
            [
                "3bc873d31ade7952"
            ]
        ]
    },
    {
        "id": "80d510a628748a10",
        "type": "link out",
        "z": "0050d9ae56377048",
        "g": "aa062806b52f8a46",
        "name": "link out 16",
        "mode": "link",
        "links": [
            "654b0e93d15ea254"
        ],
        "x": 895,
        "y": 320,
        "wires": []
    },
    {
        "id": "3e8941675dd3384b",
        "type": "comment",
        "z": "0050d9ae56377048",
        "name": "Error",
        "info": "",
        "x": 100,
        "y": 1440,
        "wires": []
    },
    {
        "id": "5f1dc739038c92e5",
        "type": "comment",
        "z": "0050d9ae56377048",
        "g": "aa062806b52f8a46",
        "name": "Error",
        "info": "",
        "x": 970,
        "y": 320,
        "wires": []
    },
    {
        "id": "3bc873d31ade7952",
        "type": "function",
        "z": "0050d9ae56377048",
        "g": "c28641a5b1106a2d",
        "name": "Message",
        "func": "msg.topic = \"MP4\"\nreturn msg;",
        "outputs": 1,
        "timeout": 0,
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "libs": [],
        "x": 700,
        "y": 1440,
        "wires": [
            [
                "87b30c2989a071dc"
            ]
        ]
    },
    {
        "id": "71be0ff75a5c8732",
        "type": "http in",
        "z": "0050d9ae56377048",
        "g": "9ea7fe9cba30ca87",
        "name": "",
        "url": "/mp4",
        "method": "get",
        "upload": false,
        "swaggerDoc": "",
        "x": 320,
        "y": 580,
        "wires": [
            [
                "bb1bce8e909cbd33"
            ]
        ]
    },
    {
        "id": "bb1bce8e909cbd33",
        "type": "function",
        "z": "0050d9ae56377048",
        "g": "9ea7fe9cba30ca87",
        "name": "file",
        "func": "msg.filename = 'sdcard/mp4/' + msg.payload.file;\nmsg.name = msg.payload.file;\nreturn msg;",
        "outputs": 1,
        "timeout": 0,
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "libs": [],
        "x": 480,
        "y": 580,
        "wires": [
            [
                "18fc14d4493012f1"
            ]
        ]
    },
    {
        "id": "18fc14d4493012f1",
        "type": "file in",
        "z": "0050d9ae56377048",
        "g": "9ea7fe9cba30ca87",
        "name": "",
        "filename": "filename",
        "filenameType": "msg",
        "format": "",
        "chunk": false,
        "sendError": false,
        "encoding": "none",
        "allProps": false,
        "x": 690,
        "y": 580,
        "wires": [
            [
                "9cdd253c01821dbf"
            ]
        ]
    },
    {
        "id": "24634ebf13450117",
        "type": "http response",
        "z": "0050d9ae56377048",
        "g": "9ea7fe9cba30ca87",
        "name": "",
        "statusCode": "",
        "headers": {},
        "x": 1030,
        "y": 580,
        "wires": []
    },
    {
        "id": "0bb34d4577390760",
        "type": "catch",
        "z": "0050d9ae56377048",
        "g": "9ea7fe9cba30ca87",
        "name": "",
        "scope": [
            "18fc14d4493012f1"
        ],
        "uncaught": false,
        "x": 620,
        "y": 640,
        "wires": [
            [
                "93ecd0a99971a6ee"
            ]
        ]
    },
    {
        "id": "93ecd0a99971a6ee",
        "type": "change",
        "z": "0050d9ae56377048",
        "g": "9ea7fe9cba30ca87",
        "name": "",
        "rules": [
            {
                "t": "set",
                "p": "payload",
                "pt": "msg",
                "to": "No recording found",
                "tot": "str"
            }
        ],
        "action": "",
        "property": "",
        "from": "",
        "to": "",
        "reg": false,
        "x": 810,
        "y": 640,
        "wires": [
            [
                "cb877a5d79167a1b"
            ]
        ]
    },
    {
        "id": "cb877a5d79167a1b",
        "type": "http response",
        "z": "0050d9ae56377048",
        "g": "9ea7fe9cba30ca87",
        "name": "",
        "statusCode": "400",
        "headers": {},
        "x": 1010,
        "y": 640,
        "wires": []
    },
    {
        "id": "c8f625c43c683a59",
        "type": "link out",
        "z": "0050d9ae56377048",
        "name": "MP4",
        "mode": "link",
        "links": [
            "232995a9d0dce135"
        ],
        "x": 1225,
        "y": 380,
        "wires": []
    },
    {
        "id": "d8157d21f04b2e34",
        "type": "comment",
        "z": "0050d9ae56377048",
        "name": "MP4",
        "info": "",
        "x": 1130,
        "y": 380,
        "wires": []
    },
    {
        "id": "9cdd253c01821dbf",
        "type": "function",
        "z": "0050d9ae56377048",
        "g": "9ea7fe9cba30ca87",
        "name": "Header",
        "func": "msg.headers = {\n    \"Content-type\": \"video/mp4\",\n    \"Content-Length\": msg.payload.length\n}\nreturn msg;",
        "outputs": 1,
        "timeout": 0,
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "libs": [],
        "x": 860,
        "y": 580,
        "wires": [
            [
                "24634ebf13450117"
            ]
        ]
    },
    {
        "id": "23d54322b565f3cf",
        "type": "function",
        "z": "0050d9ae56377048",
        "g": "28990bcb85af5da3",
        "name": "Retention 5 days",
        "func": "//Change number days if needed\nvar days = 5;\n\nvar recordings = flow.get(\"recordings\");\nvar remove = [];\nvar keep = [];\n\nvar removeOlderThen = new Date().getTime() - (days * 24 * 3600 * 1000);\n\nrecordings.forEach(function(item){\n    if (item.start < removeOlderThen )\n        remove.push(item);\n    else\n        keep.push(item);\n});\n\nflow.set(\"recordings\",keep);\nmsg.payload = remove;\n\nreturn msg;",
        "outputs": 1,
        "timeout": 0,
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "libs": [],
        "x": 590,
        "y": 860,
        "wires": [
            [
                "a7a6c44e91114a47",
                "96af1d3849a8ae5a"
            ]
        ]
    },
    {
        "id": "80582f4142c6b5e5",
        "type": "inject",
        "z": "0050d9ae56377048",
        "g": "28990bcb85af5da3",
        "name": "Every midnight",
        "props": [
            {
                "p": "payload"
            },
            {
                "p": "topic",
                "vt": "str"
            }
        ],
        "repeat": "",
        "crontab": "00 00 * * *",
        "once": true,
        "onceDelay": 0.1,
        "topic": "",
        "payload": "",
        "payloadType": "date",
        "x": 360,
        "y": 860,
        "wires": [
            [
                "23d54322b565f3cf"
            ]
        ]
    },
    {
        "id": "86a98827d848a3b8",
        "type": "exec",
        "z": "0050d9ae56377048",
        "g": "28990bcb85af5da3",
        "command": "rm ",
        "addpay": "payload",
        "append": "",
        "useSpawn": "false",
        "timer": "",
        "winHide": false,
        "oldrc": false,
        "name": "",
        "x": 1110,
        "y": 860,
        "wires": [
            [],
            [],
            []
        ]
    },
    {
        "id": "aaa068646f0bf1a4",
        "type": "comment",
        "z": "0050d9ae56377048",
        "name": "Version 2.0",
        "info": "Converts all SD Card recordings to MP4 files.\n\nOnce an SD recording is complete, the flow converts the MKV file to MP4 and stores it on a different directory on the SD Card.\nOther flows can link to the \"MP4\" link node to create actions and integrations when an MP4 file is complete.\nThe payload includes all neccessery information.\n\nThe flow provides HTTP API to export and list recordings.\n\nThe MP4 recordings will be automatically removed (default after 5 days).  The number of days can be changed in the retention section.\n",
        "x": 310,
        "y": 40,
        "wires": []
    },
    {
        "id": "fddc1f1f93a826d8",
        "type": "catch",
        "z": "0050d9ae56377048",
        "g": "c28641a5b1106a2d",
        "name": "",
        "scope": null,
        "uncaught": false,
        "x": 320,
        "y": 1480,
        "wires": [
            [
                "9ae45793d0323c88"
            ]
        ]
    },
    {
        "id": "87b30c2989a071dc",
        "type": "link out",
        "z": "0050d9ae56377048",
        "name": "exception",
        "mode": "link",
        "links": [
            "3c2ea4cc7b1c8688"
        ],
        "x": 975,
        "y": 1440,
        "wires": []
    },
    {
        "id": "9ae45793d0323c88",
        "type": "change",
        "z": "0050d9ae56377048",
        "g": "c28641a5b1106a2d",
        "name": "",
        "rules": [
            {
                "t": "set",
                "p": "payload",
                "pt": "msg",
                "to": "error.message",
                "tot": "msg"
            }
        ],
        "action": "",
        "property": "",
        "from": "",
        "to": "",
        "reg": false,
        "x": 500,
        "y": 1480,
        "wires": [
            [
                "3bc873d31ade7952"
            ]
        ]
    },
    {
        "id": "acd5936732a9a9a0",
        "type": "comment",
        "z": "0050d9ae56377048",
        "name": "exception",
        "info": "",
        "x": 880,
        "y": 1440,
        "wires": []
    },
    {
        "id": "ed4ed1dae504b9cf",
        "type": "Axis device",
        "z": "0050d9ae56377048",
        "g": "e342d4ca6dee8fec",
        "name": "",
        "preset": "a5d60ef5587cc8fc",
        "action": "Device Info",
        "cgi": "",
        "data": "",
        "options": "",
        "filename": "",
        "x": 530,
        "y": 1060,
        "wires": [
            [
                "6aa6474471c207a5"
            ]
        ]
    },
    {
        "id": "6aa6474471c207a5",
        "type": "change",
        "z": "0050d9ae56377048",
        "g": "e342d4ca6dee8fec",
        "name": "",
        "rules": [
            {
                "t": "set",
                "p": "camera",
                "pt": "flow",
                "to": "payload",
                "tot": "msg"
            }
        ],
        "action": "",
        "property": "",
        "from": "",
        "to": "",
        "reg": false,
        "x": 900,
        "y": 1060,
        "wires": [
            []
        ]
    },
    {
        "id": "996975f29da2d0ec",
        "type": "change",
        "z": "0050d9ae56377048",
        "g": "e342d4ca6dee8fec",
        "name": "flow.recordings",
        "rules": [
            {
                "t": "set",
                "p": "recordings",
                "pt": "flow",
                "to": "[]",
                "tot": "json"
            }
        ],
        "action": "",
        "property": "",
        "from": "",
        "to": "",
        "reg": false,
        "x": 720,
        "y": 1120,
        "wires": [
            [
                "4c77f6d110b3724b"
            ]
        ]
    },
    {
        "id": "4c77f6d110b3724b",
        "type": "file in",
        "z": "0050d9ae56377048",
        "g": "e342d4ca6dee8fec",
        "name": "",
        "filename": "sdcard/mp4/recordings.json",
        "filenameType": "str",
        "format": "utf8",
        "chunk": false,
        "sendError": false,
        "encoding": "none",
        "allProps": false,
        "x": 960,
        "y": 1120,
        "wires": [
            [
                "5ff2811f2fa742a3"
            ]
        ]
    },
    {
        "id": "5ff2811f2fa742a3",
        "type": "json",
        "z": "0050d9ae56377048",
        "g": "e342d4ca6dee8fec",
        "name": "",
        "property": "payload",
        "action": "",
        "pretty": false,
        "x": 1170,
        "y": 1120,
        "wires": [
            [
                "6cd7fa1ba2cab1da"
            ]
        ]
    },
    {
        "id": "6cd7fa1ba2cab1da",
        "type": "change",
        "z": "0050d9ae56377048",
        "g": "e342d4ca6dee8fec",
        "name": "flow.recordings",
        "rules": [
            {
                "t": "set",
                "p": "recordings",
                "pt": "flow",
                "to": "payload",
                "tot": "msg"
            }
        ],
        "action": "",
        "property": "",
        "from": "",
        "to": "",
        "reg": false,
        "x": 1360,
        "y": 1120,
        "wires": [
            []
        ]
    },
    {
        "id": "53c28cfcd525e316",
        "type": "catch",
        "z": "0050d9ae56377048",
        "g": "e342d4ca6dee8fec",
        "name": "",
        "scope": [
            "4c77f6d110b3724b"
        ],
        "uncaught": false,
        "x": 690,
        "y": 1160,
        "wires": [
            [
                "e93a6532d793421e"
            ]
        ]
    },
    {
        "id": "193d5541b5a48ede",
        "type": "file",
        "z": "0050d9ae56377048",
        "g": "e342d4ca6dee8fec",
        "name": "",
        "filename": "sdcard/mp4/recordings.json",
        "filenameType": "str",
        "appendNewline": false,
        "createDir": true,
        "overwriteFile": "true",
        "encoding": "none",
        "x": 1060,
        "y": 1160,
        "wires": [
            []
        ]
    },
    {
        "id": "e93a6532d793421e",
        "type": "change",
        "z": "0050d9ae56377048",
        "g": "e342d4ca6dee8fec",
        "name": "Reset",
        "rules": [
            {
                "t": "set",
                "p": "payload",
                "pt": "msg",
                "to": "[]",
                "tot": "str"
            }
        ],
        "action": "",
        "property": "",
        "from": "",
        "to": "",
        "reg": false,
        "x": 850,
        "y": 1160,
        "wires": [
            [
                "193d5541b5a48ede"
            ]
        ]
    },
    {
        "id": "cca71cba6c739e05",
        "type": "function",
        "z": "0050d9ae56377048",
        "g": "aa062806b52f8a46",
        "name": "Update recording list",
        "func": "var recordings = flow.get(\"recordings\");\nif(!recordings)\n    return;\nrecordings.push(msg.payload);\nflow.set(\"recordings\",recordings);\nmsg.payload = recordings;\nreturn msg;",
        "outputs": 1,
        "timeout": 0,
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "libs": [],
        "x": 460,
        "y": 440,
        "wires": [
            [
                "9ea3876eae208d6e"
            ]
        ]
    },
    {
        "id": "9ea3876eae208d6e",
        "type": "function",
        "z": "0050d9ae56377048",
        "g": "aa062806b52f8a46",
        "name": "pretty",
        "func": "msg.payload = JSON.stringify(msg.payload,null,2);\nreturn msg;",
        "outputs": 1,
        "timeout": 0,
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "libs": [],
        "x": 650,
        "y": 440,
        "wires": [
            [
                "f4e2c3380cfc971a"
            ]
        ]
    },
    {
        "id": "f4e2c3380cfc971a",
        "type": "file",
        "z": "0050d9ae56377048",
        "g": "aa062806b52f8a46",
        "name": "",
        "filename": "sdcard/mp4/recordings.json",
        "filenameType": "str",
        "appendNewline": false,
        "createDir": true,
        "overwriteFile": "true",
        "encoding": "none",
        "x": 860,
        "y": 440,
        "wires": [
            []
        ]
    },
    {
        "id": "a7a6c44e91114a47",
        "type": "change",
        "z": "0050d9ae56377048",
        "g": "28990bcb85af5da3",
        "name": "",
        "rules": [
            {
                "t": "set",
                "p": "payload",
                "pt": "msg",
                "to": "recordings",
                "tot": "flow"
            }
        ],
        "action": "",
        "property": "",
        "from": "",
        "to": "",
        "reg": false,
        "x": 800,
        "y": 920,
        "wires": [
            [
                "d1c5f81cbd35847d"
            ]
        ]
    },
    {
        "id": "d1c5f81cbd35847d",
        "type": "function",
        "z": "0050d9ae56377048",
        "g": "28990bcb85af5da3",
        "name": "pretty",
        "func": "msg.payload = JSON.stringify(msg.payload,null,2);\nreturn msg;",
        "outputs": 1,
        "timeout": 0,
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "libs": [],
        "x": 970,
        "y": 920,
        "wires": [
            [
                "4a16a630f1718d66"
            ]
        ]
    },
    {
        "id": "4a16a630f1718d66",
        "type": "file",
        "z": "0050d9ae56377048",
        "g": "28990bcb85af5da3",
        "name": "",
        "filename": "sdcard/mp4/recordings.json",
        "filenameType": "str",
        "appendNewline": false,
        "createDir": true,
        "overwriteFile": "true",
        "encoding": "none",
        "x": 1180,
        "y": 920,
        "wires": [
            []
        ]
    },
    {
        "id": "96af1d3849a8ae5a",
        "type": "split",
        "z": "0050d9ae56377048",
        "g": "28990bcb85af5da3",
        "name": "",
        "splt": "\\n",
        "spltType": "str",
        "arraySplt": 1,
        "arraySpltType": "len",
        "stream": false,
        "addname": "",
        "x": 770,
        "y": 860,
        "wires": [
            [
                "8ee1a53d84c4e6bf"
            ]
        ]
    },
    {
        "id": "8ee1a53d84c4e6bf",
        "type": "function",
        "z": "0050d9ae56377048",
        "g": "28990bcb85af5da3",
        "name": "remove",
        "func": "msg.payload = \"sdcard/mp4/\" + msg.payload.id + \".mp4\";\nreturn msg;",
        "outputs": 1,
        "timeout": 0,
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "libs": [],
        "x": 930,
        "y": 860,
        "wires": [
            [
                "86a98827d848a3b8"
            ]
        ]
    },
    {
        "id": "c43057de7d7f9476",
        "type": "http in",
        "z": "0050d9ae56377048",
        "g": "9ea7fe9cba30ca87",
        "name": "",
        "url": "/mp4/list",
        "method": "get",
        "upload": false,
        "swaggerDoc": "",
        "x": 330,
        "y": 700,
        "wires": [
            [
                "8513b5653a372edb"
            ]
        ]
    },
    {
        "id": "8513b5653a372edb",
        "type": "change",
        "z": "0050d9ae56377048",
        "g": "9ea7fe9cba30ca87",
        "name": "",
        "rules": [
            {
                "t": "set",
                "p": "payload",
                "pt": "msg",
                "to": "recordings",
                "tot": "flow"
            }
        ],
        "action": "",
        "property": "",
        "from": "",
        "to": "",
        "reg": false,
        "x": 540,
        "y": 700,
        "wires": [
            [
                "2ed07042fa568816"
            ]
        ]
    },
    {
        "id": "2ed07042fa568816",
        "type": "http response",
        "z": "0050d9ae56377048",
        "g": "9ea7fe9cba30ca87",
        "name": "",
        "statusCode": "",
        "headers": {
            "content-type": "application/json"
        },
        "x": 710,
        "y": 700,
        "wires": []
    },
    {
        "id": "e8aa092f4e267003",
        "type": "debug",
        "z": "0050d9ae56377048",
        "name": "debug 237",
        "active": false,
        "tosidebar": true,
        "console": false,
        "tostatus": false,
        "complete": "false",
        "statusVal": "",
        "statusType": "auto",
        "x": 1100,
        "y": 1300,
        "wires": []
    },
    {
        "id": "2b9d1d025c30b0fd",
        "type": "debug",
        "z": "0050d9ae56377048",
        "name": "debug 238",
        "active": false,
        "tosidebar": true,
        "console": false,
        "tostatus": false,
        "complete": "false",
        "statusVal": "",
        "statusType": "auto",
        "x": 520,
        "y": 1360,
        "wires": []
    },
    {
        "id": "a5d60ef5587cc8fc",
        "type": "Device Access",
        "name": "Localhost",
        "address": "localhost",
        "protocol": "http"
    }
]
