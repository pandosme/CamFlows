[
    {
        "id": "7dd4241664ae8995",
        "type": "tab",
        "label": "Presence",
        "disabled": false,
        "info": "",
        "env": []
    },
    {
        "id": "8a4fa202dc7dc3ae",
        "type": "junction",
        "z": "7dd4241664ae8995",
        "x": 980,
        "y": 780,
        "wires": [
            [
                "c6d79f0bc67ce376"
            ]
        ]
    },
    {
        "id": "4f50ed0e4ed7b531",
        "type": "inject",
        "z": "7dd4241664ae8995",
        "name": "Node-RED Started",
        "props": [
            {
                "p": "payload"
            },
            {
                "p": "topic",
                "vt": "str"
            }
        ],
        "repeat": "",
        "crontab": "",
        "once": true,
        "onceDelay": 0.1,
        "topic": "",
        "payload": "",
        "payloadType": "date",
        "x": 200,
        "y": 600,
        "wires": [
            [
                "861f5f7683809812",
                "d76ab8d7211f6a9e",
                "9da566e777b3299c"
            ]
        ]
    },
    {
        "id": "861f5f7683809812",
        "type": "Axis device",
        "z": "7dd4241664ae8995",
        "name": "",
        "preset": "8851e1ed423632f9",
        "action": "Device Info",
        "cgi": "",
        "data": "",
        "options": "",
        "filename": "",
        "x": 470,
        "y": 600,
        "wires": [
            [
                "1c864b715ce77e61",
                "ee1e436281496db6"
            ]
        ]
    },
    {
        "id": "1c864b715ce77e61",
        "type": "change",
        "z": "7dd4241664ae8995",
        "name": "",
        "rules": [
            {
                "t": "set",
                "p": "serial",
                "pt": "flow",
                "to": "payload.serial",
                "tot": "msg",
                "dc": true
            },
            {
                "t": "set",
                "p": "name",
                "pt": "flow",
                "to": "payload.hostname",
                "tot": "msg"
            }
        ],
        "action": "",
        "property": "",
        "from": "",
        "to": "",
        "reg": false,
        "x": 700,
        "y": 600,
        "wires": [
            []
        ]
    },
    {
        "id": "a3d73b1dc4bacf4f",
        "type": "Objects",
        "z": "7dd4241664ae8995",
        "output": "1",
        "classFilter": "-1",
        "confidence": "0",
        "rotation": "0",
        "cog": "1",
        "predictions": "1",
        "x": 160,
        "y": 260,
        "wires": [
            [
                "a216040943d1c475"
            ]
        ]
    },
    {
        "id": "a216040943d1c475",
        "type": "function",
        "z": "7dd4241664ae8995",
        "name": "Filter",
        "func": "var classFilter = flow.get(\"classes\") || [\"Human\",\"Car\",\"Truck\",\"Bus\",\"Motorcycle\",\"Vehicle\",\"Face\",\"License plate\",\"Object\"];\nvar aoi = flow.get(\"aoi\");\n\nif( !aoi) {\n    aoi = {\n        x1: 100,\n        x2: 900,\n        y1: 100,\n        y2: 900\n    };\n    flow.set(\"aoi\",aoi);\n}\n\nvar confidence = flow.get(\"confidence\") || 0;\nvar detections = [];\n\nvar lastEmpty = context.get(\"lastEmpty\") || false;\n\n\nmsg.payload.detections.forEach(function(detection){\n    classFilter.forEach(function(element) {\n        if( element !== detection.class)\n            return;\n        if( aoi && detection.cx < aoi.x1 || detection.cx > aoi.x2 || detection.cy < aoi.y1 || detection.cy > aoi.y2)\n            return;\n        if( detection.confidence < confidence )\n            return;\n        detections.push(detection);\n    });\n});\n\nif( detections.length === 0 && lastEmpty )\n    return;\n\nif(detections.length === 0 )\n    context.set(\"lastEmpty\", true);\nelse    \n    context.set(\"lastEmpty\", false);\n\nmsg.payload = {\n    timestamp: msg.payload.timestamp,\n    detections: detections\n}\n\nreturn msg;",
        "outputs": 1,
        "timeout": 0,
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "libs": [],
        "x": 370,
        "y": 260,
        "wires": [
            [
                "ba7482e1a2f8dc34",
                "7438024f6f81f404"
            ]
        ]
    },
    {
        "id": "69cfb80f4f635f84",
        "type": "ui_ui_control",
        "z": "7dd4241664ae8995",
        "name": "",
        "events": "all",
        "x": 120,
        "y": 400,
        "wires": [
            [
                "d3132795b5acc37b"
            ]
        ]
    },
    {
        "id": "d3132795b5acc37b",
        "type": "function",
        "z": "7dd4241664ae8995",
        "name": "Tab: Precense",
        "func": "msg.topic = \"video\";\n\nif( msg.payload !== \"change\" )\n    return;\nif( msg.name === \"Precense\" )\n    msg.payload = true;\nelse\n    msg.payload = false;\n\nreturn msg;",
        "outputs": 1,
        "timeout": 0,
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "libs": [],
        "x": 280,
        "y": 400,
        "wires": [
            [
                "ba7482e1a2f8dc34"
            ]
        ]
    },
    {
        "id": "ba7482e1a2f8dc34",
        "type": "ui_template",
        "z": "7dd4241664ae8995",
        "group": "c6ab55e5ed01203f",
        "name": "Augmented Video and Selectbox",
        "order": 0,
        "width": "16",
        "height": "9",
        "format": "<link rel=\"stylesheet\" href=\"/css/imgareaselect-default.css\">\n<script src=\"/js/media-stream-player.min.js\"></script>\n<script src=\"/js/jquery.imgareaselect.js\"></script>\n\n<div id=\"view\" style=\"width:800px; height:450px;\">\n    <div id=\"{{'canvas_'+$id}}\" style=\"width:100%; height:100%; position:relative\">\n        <img id=\"{{'image_'+$id}}\" class=\"card-img-top\" src=\"\" alt=\"Image\" style=\"width:100%; height:100%; position:absolute; top:0px; left:0px;\">\n        <div id=\"{{'video_'+$id}}\" style=\"width:100%; height:100%; position:absolute; top:0px; left:0px;\"></div>\n        <canvas id=\"{{'objects_'+$id}}\" width=\"1000\" height=\"1000\" style=\"width:100%; height:100%; position:absolute; top:0px; left:0px;\"></canvas>\n    </div>\n</div>\n\n<script>\nvar ctx = null;\nvar imageWidth = 1280;\nvar imageHeight = 720;\nvar viewWidth = 800;\nvar viewHeight = 450;\nvar selectBox = null;\nvar hold = false;\nvar boxId = \"None\";\n\nfunction ClearCanvas() {\n    if(ctx) {\n        ctx.beginPath();\n        ctx.clearRect(0, 0, 1000, 1000 );\n        ctx.stroke();\n    }\n}\n\nfunction drawDetections( data ) {\n    if(!ctx)\n        return;\n\n    if( !hold )\n      ClearCanvas();\n\n    ctx.beginPath();\n    ctx.lineWidth = 3;\n    ctx.font = \"30px Arial\";\n    ctx.fillStyle = '#FFFF00';    \n    ctx.strokeStyle = '#FFFF00';\n    data.detections.forEach( function(detection){\n        ctx.rect(detection.x, detection.y,detection.w,detection.h );\n        ctx.fillText(detection.class + \" (\" + detection.confidence + \")\", detection.x, detection.y - 10 );\n    });\n    ctx.stroke();\t\n}\n\n(function(scope) {\n  scope.$watch('msg', function(msg) {\n    if (!msg)\n      return;\n    console.log(msg.topic);\n    if( msg.topic === \"video\" ) {\n        width = msg.width || 1280;\n        height = msg.height || 720;\n        ctx = null;\n        if( selectBox )\n            selectBox.setOptions({hide: true});\n\n        $(\"#image_\"+scope.$id).attr('src','http://'+window.location.hostname+'/axis-cgi/jpg/image.cgi?_='+new Date().getTime());\n        var canvas = document.getElementById(\"objects_\"+scope.$id);\n        ctx = canvas.getContext(\"2d\");\n        $(\"#video_\"+scope.$id).empty();\n        if( msg.payload ) {\n          var player = '<media-stream-player hostname=\"'+window.location.hostname+'\" format=\"RTP_H264\" compression=\"40\" audio=\"0\" resolution=\"'+width+'x'+height+'\" variant=\"basic\" autoplay></media-stream-player>';\n          $(\"#video_\"+scope.$id).append(player);\n        }\n    }\n\n    if( msg.topic === \"path\" )\n      drawPath( msg.payload );\n    \n    if( msg.topic === \"tracker\" )\n      drawTracker( msg.payload );\n      \n    if( msg.topic === \"detections\" )\n      drawDetections( msg.payload );\n      \n    if( msg.topic === \"reset\" ) {\n      ClearCanvas();\n      return;\n    }\n\n    if( msg.topic === \"hold\" ) {\n      hold = msg.payload;\n      return;\n    }\n\n    if( msg.topic === \"box\") {\n        if( selectBox ) {\n          selectBox.setOptions({hide: true});\n          selectBox = null;\n        }\n        if( typeof msg.payload !== \"object\" )\n          return;\n        boxId = msg.payload.id || \"None\";\n        selectBox = $(\"#image_\"+scope.$id).imgAreaSelect({\n            x1: parseInt((msg.payload.x1 / 1000) * viewWidth),\n            y1: parseInt((msg.payload.y1 / 1000) * viewHeight),\n            x2: parseInt((msg.payload.x2 / 1000) * viewWidth),\n            y2: parseInt((msg.payload.y2 / 1000) * viewHeight),\n            minHeight: 20,\n            minWidth: 20,\n            handles: true,\n            enable:true,movable:true,resizable:true,show:true,\n            instance: true,\n            onSelectEnd: function( image, area ) {\n                var box = {\n                    x1: parseInt((area.x1 / viewWidth) * 1000),\n                    x2: parseInt((area.x2 / viewWidth) * 1000),\n                    y1: parseInt((area.y1 / viewHeight) * 1000),\n                    y2: parseInt((area.y2 / viewHeight) * 1000)\n                }\n                scope.send({topic:boxId ||\"none\",payload:box});\n            }\n        });\n        selectBox.setOptions({show: true});\n    }\n  });\n})(scope);\n</script>\n\n",
        "storeOutMessages": true,
        "fwdInMessages": false,
        "resendOnRefresh": true,
        "templateScope": "local",
        "className": "",
        "x": 640,
        "y": 400,
        "wires": [
            [
                "264214c3d7187dd2"
            ]
        ]
    },
    {
        "id": "1cb85a3637f703cc",
        "type": "function",
        "z": "7dd4241664ae8995",
        "name": "flow.aoi",
        "func": "msg.topic = \"box\";\nmsg.payload = flow.get(\"aoi\") || {\n    id: \"pass\",\n    x1: 100,\n    x2: 900,\n    y1: 100,\n    y2: 900\n}\nmsg.payload.id = \"aoi\";\nreturn msg;",
        "outputs": 1,
        "timeout": 0,
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "libs": [],
        "x": 960,
        "y": 740,
        "wires": [
            [
                "c6d79f0bc67ce376"
            ]
        ]
    },
    {
        "id": "a08defec6d9f9724",
        "type": "ui_button",
        "z": "7dd4241664ae8995",
        "name": "",
        "group": "dda9aae9545ce0ef",
        "order": 5,
        "width": "0",
        "height": "0",
        "passthru": false,
        "label": "Save",
        "tooltip": "",
        "color": "",
        "bgcolor": "green",
        "className": "",
        "icon": "",
        "payload": "false",
        "payloadType": "bool",
        "topic": "box",
        "topicType": "str",
        "x": 670,
        "y": 780,
        "wires": [
            [
                "8a4fa202dc7dc3ae"
            ]
        ]
    },
    {
        "id": "9ef4f81dc8f6161f",
        "type": "link in",
        "z": "7dd4241664ae8995",
        "name": "link in 2",
        "links": [
            "4ad506bb78251feb",
            "c6d79f0bc67ce376"
        ],
        "x": 405,
        "y": 440,
        "wires": [
            [
                "ba7482e1a2f8dc34"
            ]
        ]
    },
    {
        "id": "264214c3d7187dd2",
        "type": "function",
        "z": "7dd4241664ae8995",
        "name": "flow.box",
        "func": "msg.payload.id = msg.topic;\nflow.set(msg.topic, msg.payload)\nreturn msg;",
        "outputs": 0,
        "timeout": 0,
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "libs": [],
        "x": 880,
        "y": 400,
        "wires": []
    },
    {
        "id": "81d3622fc6ecc552",
        "type": "ui_button",
        "z": "7dd4241664ae8995",
        "name": "",
        "group": "dda9aae9545ce0ef",
        "order": 4,
        "width": "0",
        "height": "0",
        "passthru": false,
        "label": "Set area of intrest",
        "tooltip": "",
        "color": "",
        "bgcolor": "",
        "className": "",
        "icon": "",
        "payload": "",
        "payloadType": "str",
        "topic": "topic",
        "topicType": "msg",
        "x": 710,
        "y": 740,
        "wires": [
            [
                "1cb85a3637f703cc"
            ]
        ]
    },
    {
        "id": "c6d79f0bc67ce376",
        "type": "link out",
        "z": "7dd4241664ae8995",
        "name": "link out 4",
        "mode": "link",
        "links": [
            "bd23f94792e0ae83",
            "9ef4f81dc8f6161f",
            "b6d034e75986a0f5"
        ],
        "x": 1105,
        "y": 740,
        "wires": []
    },
    {
        "id": "f63e1a52e116cccf",
        "type": "ui_dropdown",
        "z": "7dd4241664ae8995",
        "name": "Class selection",
        "label": "",
        "tooltip": "",
        "place": "Select detection",
        "group": "dda9aae9545ce0ef",
        "order": 1,
        "width": 0,
        "height": 0,
        "passthru": true,
        "multiple": true,
        "options": [
            {
                "label": "Human",
                "value": "Human",
                "type": "str"
            },
            {
                "label": "Car",
                "value": "Car",
                "type": "str"
            },
            {
                "label": "Truck",
                "value": "Truck",
                "type": "str"
            },
            {
                "label": "Bus",
                "value": "Bus",
                "type": "str"
            },
            {
                "label": "Motorcycle",
                "value": "Motorcycle",
                "type": "str"
            },
            {
                "label": "Other vehicle type",
                "value": "Vehicle",
                "type": "str"
            },
            {
                "label": "Face",
                "value": "Face",
                "type": "str"
            },
            {
                "label": "License plate",
                "value": "License plate",
                "type": "str"
            },
            {
                "label": "Unknown type",
                "value": "Object",
                "type": "str"
            }
        ],
        "payload": "",
        "topic": "topic",
        "topicType": "msg",
        "className": "",
        "x": 700,
        "y": 640,
        "wires": [
            [
                "d8430fcd916d8106"
            ]
        ]
    },
    {
        "id": "d8430fcd916d8106",
        "type": "change",
        "z": "7dd4241664ae8995",
        "name": "flow.classes",
        "rules": [
            {
                "t": "set",
                "p": "classes",
                "pt": "flow",
                "to": "payload",
                "tot": "msg",
                "dc": true
            }
        ],
        "action": "",
        "property": "",
        "from": "",
        "to": "",
        "reg": false,
        "x": 950,
        "y": 640,
        "wires": [
            []
        ]
    },
    {
        "id": "2dbfc7b59875be37",
        "type": "mqtt out",
        "z": "7dd4241664ae8995",
        "name": "",
        "topic": "",
        "qos": "",
        "retain": "",
        "respTopic": "",
        "contentType": "",
        "userProps": "",
        "correl": "",
        "expiry": "",
        "broker": "34d35ac878fbc6dc",
        "x": 670,
        "y": 140,
        "wires": []
    },
    {
        "id": "d76ab8d7211f6a9e",
        "type": "change",
        "z": "7dd4241664ae8995",
        "name": "flow.classes",
        "rules": [
            {
                "t": "set",
                "p": "payload",
                "pt": "msg",
                "to": "classes",
                "tot": "flow"
            }
        ],
        "action": "",
        "property": "",
        "from": "",
        "to": "",
        "reg": false,
        "x": 470,
        "y": 640,
        "wires": [
            [
                "f63e1a52e116cccf"
            ]
        ]
    },
    {
        "id": "3ffda113290cc507",
        "type": "comment",
        "z": "7dd4241664ae8995",
        "name": "Box control",
        "info": "",
        "x": 330,
        "y": 440,
        "wires": []
    },
    {
        "id": "4447793279e3e667",
        "type": "comment",
        "z": "7dd4241664ae8995",
        "name": "Box control",
        "info": "",
        "x": 1180,
        "y": 740,
        "wires": []
    },
    {
        "id": "00e7c7db8126f196",
        "type": "ui_button",
        "z": "7dd4241664ae8995",
        "name": "",
        "group": "c6ab55e5ed01203f",
        "order": 1,
        "width": "4",
        "height": "1",
        "passthru": false,
        "label": "play",
        "tooltip": "",
        "color": "",
        "bgcolor": "",
        "className": "",
        "icon": "",
        "payload": "true",
        "payloadType": "bool",
        "topic": "video",
        "topicType": "str",
        "x": 370,
        "y": 360,
        "wires": [
            [
                "ba7482e1a2f8dc34"
            ]
        ]
    },
    {
        "id": "9da566e777b3299c",
        "type": "change",
        "z": "7dd4241664ae8995",
        "name": "flow.classes",
        "rules": [
            {
                "t": "set",
                "p": "payload",
                "pt": "msg",
                "to": "confidence",
                "tot": "flow"
            }
        ],
        "action": "",
        "property": "",
        "from": "",
        "to": "",
        "reg": false,
        "x": 470,
        "y": 680,
        "wires": [
            [
                "f615c4e413e6dab8"
            ]
        ]
    },
    {
        "id": "f615c4e413e6dab8",
        "type": "ui_numeric",
        "z": "7dd4241664ae8995",
        "name": "",
        "label": "Confidence",
        "tooltip": "",
        "group": "dda9aae9545ce0ef",
        "order": 2,
        "width": 0,
        "height": 0,
        "wrap": false,
        "passthru": true,
        "topic": "topic",
        "topicType": "msg",
        "format": "{{value}}",
        "min": 0,
        "max": "120",
        "step": "10",
        "className": "",
        "x": 690,
        "y": 680,
        "wires": [
            [
                "94a3f71e55971f9f"
            ]
        ]
    },
    {
        "id": "94a3f71e55971f9f",
        "type": "change",
        "z": "7dd4241664ae8995",
        "name": "flow.confidence",
        "rules": [
            {
                "t": "set",
                "p": "confidence",
                "pt": "flow",
                "to": "payload",
                "tot": "msg",
                "dc": true
            }
        ],
        "action": "",
        "property": "",
        "from": "",
        "to": "",
        "reg": false,
        "x": 960,
        "y": 680,
        "wires": [
            []
        ]
    },
    {
        "id": "7438024f6f81f404",
        "type": "function",
        "z": "7dd4241664ae8995",
        "name": "Trackers",
        "func": "var trackers = flow.get(\"trackers\") || {};\n\nfor( var id in trackers )\n    trackers[id].active = false;\n\nvar timestamp = msg.payload.timestamp;\n\nmsg.payload.detections.forEach(function(detection){\n    if(!trackers.hasOwnProperty(detection.id)) {\n        trackers[detection.id] = detection;\n        trackers[detection.id].timestamp = timestamp;\n       trackers[detection.id].active = true;\n        trackers[detection.id].birth = timestamp;\n        trackers[detection.id].px = 10000;\n        trackers[detection.id].py = 10000;\n        trackers[detection.id].age = 0;\n        trackers[detection.id] = detection;\n    } else {\n        trackers[detection.id].active = true;\n        trackers[detection.id].timestamp = timestamp;\n        trackers[detection.id].x = detection.x;\n        trackers[detection.id].y = detection.y;\n        trackers[detection.id].w = detection.w;\n        trackers[detection.id].h = detection.h;\n        trackers[detection.id].cx = detection.cx;\n        trackers[detection.id].cy = detection.cy;\n        trackers[detection.id].confidence = detection.confidence;\n        trackers[detection.id].age = (timestamp - trackers[detection.id].birth) / 1000;\n    }\n});\n\nflow.set(\"trackers\",trackers);\n\nmsg.payload = trackers;\n\nreturn msg;",
        "outputs": 1,
        "timeout": 0,
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "libs": [],
        "x": 560,
        "y": 260,
        "wires": [
            [
                "974434ec66e20758"
            ]
        ]
    },
    {
        "id": "974434ec66e20758",
        "type": "function",
        "z": "7dd4241664ae8995",
        "name": "SPlit active/inactive",
        "func": "var trackers = msg.payload;\nvar active = {};\nvar activeCounter = 0;\n\nfor(var id in trackers) {\n    if( trackers[id].active === false ) {\n        node.send([null,{\n            topic:\"presence/inactive\",\n            payload:trackers[id]\n        }]);\n    } else {\n        active[id] = trackers[id];\n        activeCounter++;\n    }\n}\nflow.set(\"trackers\",active);\nif( activeCounter)\n    node.send([{topic:\"active\",payload:active},null]);",
        "outputs": 2,
        "timeout": 0,
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "libs": [],
        "x": 790,
        "y": 260,
        "wires": [
            [
                "288151e2745bb4a2"
            ],
            [
                "bda050e29d37e22b"
            ]
        ]
    },
    {
        "id": "288151e2745bb4a2",
        "type": "function",
        "z": "7dd4241664ae8995",
        "name": "Active changes",
        "func": "var trackers = msg.payload;\n\nfor(var id in trackers) {\n    var dx = Math.abs(trackers[id].cx - trackers[id].px);\n    var dy = Math.abs(trackers[id].cy - trackers[id].py);\n        \n    if( dx > 50 || dy > 50 ) {\n        trackers[id].px = trackers[id].cx;\n        trackers[id].py = trackers[id].cy;\n        msg.payload = {\n            id: trackers[id].id,\n            class: trackers[id].class,\n            confidence: trackers[id].confidence,\n            x: trackers[id].x,\n            y: trackers[id].y,\n            w: trackers[id].w,\n            h: trackers[id].h,\n            cx: trackers[id].cx,\n            cy: trackers[id].cy,\n            timestamp: trackers[id].timestamp,\n            age: trackers[id].age\n        }\n        msg.topic = \"presence/active\";\n        node.send(msg);\n    }\n}\nflow.set(\"trackers\",trackers);",
        "outputs": 1,
        "timeout": 0,
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "libs": [],
        "x": 1020,
        "y": 240,
        "wires": [
            [
                "fea1643ad7901a1f"
            ]
        ]
    },
    {
        "id": "942230ac9aa69eca",
        "type": "comment",
        "z": "7dd4241664ae8995",
        "name": "Sends precense data on MQTT when detected objects are update.  Topics:  presence/active, presence/inactive",
        "info": "",
        "x": 450,
        "y": 80,
        "wires": []
    },
    {
        "id": "fea1643ad7901a1f",
        "type": "link out",
        "z": "7dd4241664ae8995",
        "name": "precense active",
        "mode": "link",
        "links": [
            "4040f0e428f6ca7c",
            "94411ad00aa88875"
        ],
        "x": 1155,
        "y": 240,
        "wires": []
    },
    {
        "id": "11ab09a231871ec0",
        "type": "comment",
        "z": "7dd4241664ae8995",
        "name": "Presence changes",
        "info": "",
        "x": 1270,
        "y": 240,
        "wires": []
    },
    {
        "id": "847034ef91654c6d",
        "type": "comment",
        "z": "7dd4241664ae8995",
        "name": "Presence changes",
        "info": "",
        "x": 170,
        "y": 140,
        "wires": []
    },
    {
        "id": "94411ad00aa88875",
        "type": "link in",
        "z": "7dd4241664ae8995",
        "name": "link in 3",
        "links": [
            "fea1643ad7901a1f"
        ],
        "x": 285,
        "y": 140,
        "wires": [
            [
                "88fc99db4360b8fc"
            ]
        ]
    },
    {
        "id": "88fc99db4360b8fc",
        "type": "function",
        "z": "7dd4241664ae8995",
        "name": "payload",
        "func": "msg.topic += \"/\" + flow.get(\"serial\") || \"undefined\"\nmsg.payload.name = flow.get(\"name\") || \"Undefined\";\nmsg.payload.serial = flow.get(\"serial\") || \"undefined\"\nreturn msg;",
        "outputs": 1,
        "timeout": 0,
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "libs": [],
        "x": 460,
        "y": 140,
        "wires": [
            [
                "2dbfc7b59875be37"
            ]
        ]
    },
    {
        "id": "e18ee640e2a2e39a",
        "type": "catch",
        "z": "7dd4241664ae8995",
        "name": "",
        "scope": null,
        "uncaught": false,
        "x": 430,
        "y": 540,
        "wires": [
            [
                "ee1e436281496db6"
            ]
        ]
    },
    {
        "id": "ee1e436281496db6",
        "type": "debug",
        "z": "7dd4241664ae8995",
        "name": "debug 2",
        "active": false,
        "tosidebar": true,
        "console": false,
        "tostatus": false,
        "complete": "false",
        "statusVal": "",
        "statusType": "auto",
        "x": 710,
        "y": 540,
        "wires": []
    },
    {
        "id": "bda050e29d37e22b",
        "type": "link out",
        "z": "7dd4241664ae8995",
        "name": "Presence inactive",
        "mode": "link",
        "links": [
            "3115f39103d93835"
        ],
        "x": 1155,
        "y": 280,
        "wires": []
    },
    {
        "id": "b01d068388279ed4",
        "type": "comment",
        "z": "7dd4241664ae8995",
        "name": "Presence inactive",
        "info": "",
        "x": 1270,
        "y": 280,
        "wires": []
    },
    {
        "id": "8851e1ed423632f9",
        "type": "Device Access",
        "name": "localhost",
        "address": "localhost",
        "protocol": "http"
    },
    {
        "id": "c6ab55e5ed01203f",
        "type": "ui_group",
        "name": "Video",
        "tab": "21558d2cd4578b9a",
        "order": 1,
        "disp": true,
        "width": "16",
        "collapse": false,
        "className": ""
    },
    {
        "id": "dda9aae9545ce0ef",
        "type": "ui_group",
        "name": "Filter",
        "tab": "21558d2cd4578b9a",
        "order": 2,
        "disp": true,
        "width": "6",
        "collapse": false,
        "className": ""
    },
    {
        "id": "34d35ac878fbc6dc",
        "type": "mqtt-broker",
        "name": "Broker",
        "broker": "10.13.8.92",
        "port": "1883",
        "clientid": "",
        "autoConnect": true,
        "usetls": false,
        "protocolVersion": "4",
        "keepalive": "60",
        "cleansession": true,
        "autoUnsubscribe": true,
        "birthTopic": "",
        "birthQos": "0",
        "birthRetain": "false",
        "birthPayload": "",
        "birthMsg": {},
        "closeTopic": "",
        "closeQos": "0",
        "closeRetain": "false",
        "closePayload": "",
        "closeMsg": {},
        "willTopic": "",
        "willQos": "0",
        "willRetain": "false",
        "willPayload": "",
        "willMsg": {},
        "userProps": "",
        "sessionExpiry": ""
    },
    {
        "id": "21558d2cd4578b9a",
        "type": "ui_tab",
        "name": "Presence",
        "icon": "dashboard",
        "order": 2,
        "disabled": false,
        "hidden": false
    }
]
