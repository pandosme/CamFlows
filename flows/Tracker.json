[
    {
        "id": "b7e33510f53fa701",
        "type": "tab",
        "label": "Tracker",
        "disabled": false,
        "info": "",
        "env": []
    },
    {
        "id": "830ba4dcda8001ce",
        "type": "Objects",
        "z": "b7e33510f53fa701",
        "output": "2",
        "classFilter": "0",
        "confidence": "40",
        "rotation": "180",
        "cog": "1",
        "x": 160,
        "y": 120,
        "wires": [
            [
                "2272525a2d6ced41"
            ]
        ]
    },
    {
        "id": "1b7f8118c53b1d12",
        "type": "inject",
        "z": "b7e33510f53fa701",
        "name": "",
        "props": [
            {
                "p": "payload"
            },
            {
                "p": "topic",
                "vt": "str"
            }
        ],
        "repeat": "1",
        "crontab": "",
        "once": false,
        "onceDelay": 0.1,
        "topic": "",
        "payload": "",
        "payloadType": "date",
        "x": 150,
        "y": 60,
        "wires": [
            [
                "55c2a3e1f97bade7"
            ]
        ]
    },
    {
        "id": "55c2a3e1f97bade7",
        "type": "Camera",
        "z": "b7e33510f53fa701",
        "resolution": "1280x720",
        "overlay": "yes",
        "output": "base64",
        "x": 330,
        "y": 60,
        "wires": [
            [
                "e277d4c2f7275cb3"
            ]
        ]
    },
    {
        "id": "2272525a2d6ced41",
        "type": "ui_template",
        "z": "b7e33510f53fa701",
        "group": "34c3535b9b70b168",
        "name": "Object Visualization (16:9)",
        "order": 0,
        "width": "18",
        "height": "9",
        "format": "<div id=\"{{'view_'+$id}}\" style=\"width:800px; height:450px\">\n    <div id=\"{{'frame_'+$id}}\" style=\"width:100%; height:100%; position:relative\">\n        <img id=\"{{'image_'+$id}}\" class=\"card-img-top\" src=\"\" style=\"width:100%; height:100%; position:absolute; top:0px; left:0px;\">\n        <canvas id=\"{{'canvas_'+$id}}\" width=\"1000\" height=\"1000\"\n            style=\"width:100%; height:100%; position:absolute; top:0px; left:0px;\"></canvas>\n    </div>\n</div>\n\n<script>\n    var ctx = null;\n\nfunction ClearCanvas() {\n    if(ctx) {\n        ctx.beginPath();\n        ctx.clearRect(0, 0, 1000, 1000 );\n        ctx.stroke();\n    }\n}\n\nfunction drawPath( data ) {\n    if(!ctx)\n        return;\n\n    if( data.active === false ) {\n        ClearCanvas();\n        return;\n    }\n\n    var first = data.path[0];\n    var last = data.path[data.path.length-1];\n\n    ctx.beginPath();\n    ctx.lineWidth = 3;\n    ctx.strokeStyle = '#00FF00';\n    ctx.moveTo(first.x, first.y );\n    ctx.arc(first.x, first.y, 3, 0, 2 * Math.PI);\n    ctx.stroke();\t\n\n    ctx.beginPath();\n    ctx.strokeStyle = '#FFFF00';\n    ctx.moveTo(data.path[0].x, data.path[0].y );\n    for( var i = 1; i < data.path.length; i++ )\n        ctx.lineTo(data.path[i].x,data.path[i].y );\n    ctx.lineTo(last.x,last.y );\n    ctx.stroke();\t\n\n    ctx.beginPath();\n    ctx.lineWidth = 3;\n    ctx.strokeStyle = '#FF0000';\n    ctx.moveTo(last.x, last.y );\n    ctx.arc(last.x, last.y, 3, 0, 2 * Math.PI);\n    ctx.stroke();\t\n}\n\nfunction drawTracker( data ) {\n    if(!ctx)\n        return;\n    ClearCanvas();\n    \n    ctx.beginPath();\n    ctx.lineWidth = 3;\n    ctx.strokeStyle = '#FFFF00';\n    ctx.moveTo(data.bx, data.by );\n    ctx.lineTo(data.cx, data.cy );\n    ctx.rect(data.x, data.y,data.w,data.h );\n    ctx.stroke();\t\n}\n\nfunction drawDetections( data ) {\n    if(!ctx)\n        return;\n\n    ClearCanvas();\n\n    ctx.beginPath();\n    ctx.lineWidth = 3;\n    ctx.font = \"30px Arial\";\n    ctx.fillStyle = '#FFFF00';    \n    ctx.strokeStyle = '#FFFF00';\n    data.detections.forEach( function(detection){\n        ctx.rect(detection.x, detection.y,detection.w,detection.h );\n        ctx.fillText(detection.class, detection.x, detection.y - 10 );\n    });\n    ctx.stroke();\t\n}\n\n\n(function(scope) {\n    scope.$watch('msg', function(msg) {\n        if( !msg || !msg.topic ||  typeof msg.topic === undefined || !msg.payload )\n            return;\n        console.log(msg.topic);\n\n        if( msg.topic === \"image\") {\n            $(\"#image_\"+scope.$id).attr(\"src\", 'data:image/jpeg;base64, ' + msg.payload);\n            canvas = document.getElementById(\"canvas_\"+scope.$id);\n            ctx = canvas.getContext(\"2d\");\n            return;\n        }\n\n        if( msg.topic === \"path\" )\n            drawPath( msg.payload );\n\n        if( msg.topic === \"tracker\" )\n            drawTracker( msg.payload );\n\n        if( msg.topic === \"detections\" )\n            drawDetections( msg.payload );\n\n        if( msg.topic === \"reset\" ) {\n            ClearCanvas();\n            return;\n        }\n    });\n})(scope);\n</script>",
        "storeOutMessages": true,
        "fwdInMessages": true,
        "resendOnRefresh": true,
        "templateScope": "local",
        "className": "",
        "x": 760,
        "y": 120,
        "wires": [
            []
        ]
    },
    {
        "id": "e277d4c2f7275cb3",
        "type": "change",
        "z": "b7e33510f53fa701",
        "name": "",
        "rules": [
            {
                "t": "set",
                "p": "topic",
                "pt": "msg",
                "to": "image",
                "tot": "str"
            }
        ],
        "action": "",
        "property": "",
        "from": "",
        "to": "",
        "reg": false,
        "x": 500,
        "y": 60,
        "wires": [
            [
                "2272525a2d6ced41"
            ]
        ]
    },
    {
        "id": "34c3535b9b70b168",
        "type": "ui_group",
        "name": "Tracker",
        "tab": "560f5fb6cae02cf3",
        "order": 1,
        "disp": true,
        "width": "19",
        "collapse": false,
        "className": ""
    },
    {
        "id": "560f5fb6cae02cf3",
        "type": "ui_tab",
        "name": "Tracker",
        "icon": "dashboard",
        "disabled": false,
        "hidden": false
    }
]
