[
    {
        "id": "6d42dc07fde7a1cc",
        "type": "subflow",
        "name": "Provision Axis Devices",
        "info": "",
        "category": "",
        "in": [
            {
                "x": 160,
                "y": 260,
                "wires": [
                    {
                        "id": "b71a276e97101779"
                    }
                ]
            }
        ],
        "out": [
            {
                "x": 1440,
                "y": 60,
                "wires": [
                    {
                        "id": "fd813139961b13e6",
                        "port": 0
                    }
                ]
            },
            {
                "x": 1440,
                "y": 120,
                "wires": [
                    {
                        "id": "abb41098846a6d4f",
                        "port": 0
                    }
                ]
            },
            {
                "x": 1440,
                "y": 180,
                "wires": [
                    {
                        "id": "3776a78bd7fa1121",
                        "port": 0
                    },
                    {
                        "id": "09eb56c5433ca289",
                        "port": 0
                    }
                ]
            }
        ],
        "env": [],
        "meta": {},
        "color": "#DDAA99"
    },
    {
        "id": "118eccf99d66c609",
        "type": "link out",
        "z": "6d42dc07fde7a1cc",
        "name": "Device",
        "mode": "link",
        "links": [
            "867cb3ed82ecd9fe"
        ],
        "x": 1075,
        "y": 440,
        "wires": []
    },
    {
        "id": "03e31351e0c8067d",
        "type": "comment",
        "z": "6d42dc07fde7a1cc",
        "name": "For Each Device",
        "info": "",
        "x": 960,
        "y": 440,
        "wires": []
    },
    {
        "id": "a967e30621cc1e36",
        "type": "link in",
        "z": "6d42dc07fde7a1cc",
        "name": "SSH",
        "links": [
            "215045de4161c6d9"
        ],
        "x": 175,
        "y": 3020,
        "wires": [
            [
                "e025f3668afecba6"
            ]
        ]
    },
    {
        "id": "4779962d80c06de3",
        "type": "link out",
        "z": "6d42dc07fde7a1cc",
        "name": "link out 77",
        "mode": "link",
        "links": [
            "3ba50d20b7226de3",
            "3a64c4dded802959"
        ],
        "x": 1205,
        "y": 3060,
        "wires": []
    },
    {
        "id": "5f82cfdcc210b4bd",
        "type": "link in",
        "z": "6d42dc07fde7a1cc",
        "name": "MQTT",
        "links": [
            "55209209a53159f7"
        ],
        "x": 175,
        "y": 2820,
        "wires": [
            [
                "97481c69763ef2e7"
            ]
        ]
    },
    {
        "id": "215045de4161c6d9",
        "type": "link out",
        "z": "6d42dc07fde7a1cc",
        "name": "link out 78",
        "mode": "link",
        "links": [
            "a967e30621cc1e36"
        ],
        "x": 1965,
        "y": 2860,
        "wires": []
    },
    {
        "id": "3a64c4dded802959",
        "type": "link in",
        "z": "6d42dc07fde7a1cc",
        "name": "ACAPS",
        "links": [
            "4779962d80c06de3"
        ],
        "x": 175,
        "y": 3220,
        "wires": [
            [
                "51a9a2c90c646848"
            ]
        ]
    },
    {
        "id": "e8c80ece8355b37d",
        "type": "link out",
        "z": "6d42dc07fde7a1cc",
        "name": "link out 79",
        "mode": "link",
        "links": [
            "fd813139961b13e6"
        ],
        "x": 1745,
        "y": 3300,
        "wires": []
    },
    {
        "id": "b4453d53bb7384f2",
        "type": "link in",
        "z": "6d42dc07fde7a1cc",
        "name": "TLS",
        "links": [
            "075bcdca09378465"
        ],
        "x": 165,
        "y": 1580,
        "wires": [
            [
                "189d5aeb99b9aeac"
            ]
        ]
    },
    {
        "id": "5bf4a8a8a272f0fd",
        "type": "link out",
        "z": "6d42dc07fde7a1cc",
        "name": "link out 80",
        "mode": "link",
        "links": [
            "71d410564e2ad5e0"
        ],
        "x": 1745,
        "y": 1620,
        "wires": []
    },
    {
        "id": "ca41ccc0354f67f8",
        "type": "link in",
        "z": "6d42dc07fde7a1cc",
        "name": "Text Overlays",
        "links": [
            "08ab754254beeb2a"
        ],
        "x": 165,
        "y": 2340,
        "wires": [
            [
                "1cfb4860b2074b07"
            ]
        ]
    },
    {
        "id": "0cfdeee4fd6c377c",
        "type": "link out",
        "z": "6d42dc07fde7a1cc",
        "name": "link out 81",
        "mode": "link",
        "links": [
            "90e2941c341e6a73"
        ],
        "x": 1705,
        "y": 2420,
        "wires": []
    },
    {
        "id": "71d410564e2ad5e0",
        "type": "link in",
        "z": "6d42dc07fde7a1cc",
        "name": "ONVIF",
        "links": [
            "5bf4a8a8a272f0fd"
        ],
        "x": 165,
        "y": 1780,
        "wires": [
            [
                "d2780e923c4dd3f8"
            ]
        ]
    },
    {
        "id": "9423cc23d14b07e7",
        "type": "link out",
        "z": "6d42dc07fde7a1cc",
        "name": "link out 82",
        "mode": "link",
        "links": [
            "a0625d89462443ad"
        ],
        "x": 2305,
        "y": 1960,
        "wires": []
    },
    {
        "id": "a0625d89462443ad",
        "type": "link in",
        "z": "6d42dc07fde7a1cc",
        "name": "Remove overlays",
        "links": [
            "9423cc23d14b07e7"
        ],
        "x": 165,
        "y": 2140,
        "wires": [
            [
                "7424979d2e1e6796"
            ]
        ]
    },
    {
        "id": "08ab754254beeb2a",
        "type": "link out",
        "z": "6d42dc07fde7a1cc",
        "name": "link out 83",
        "mode": "link",
        "links": [
            "ca41ccc0354f67f8"
        ],
        "x": 2105,
        "y": 2180,
        "wires": []
    },
    {
        "id": "90e2941c341e6a73",
        "type": "link in",
        "z": "6d42dc07fde7a1cc",
        "name": "Image Overlays",
        "links": [
            "0cfdeee4fd6c377c"
        ],
        "x": 165,
        "y": 2580,
        "wires": [
            [
                "d43ee2366bbb850d"
            ]
        ]
    },
    {
        "id": "55209209a53159f7",
        "type": "link out",
        "z": "6d42dc07fde7a1cc",
        "name": "link out 84",
        "mode": "link",
        "links": [
            "5f82cfdcc210b4bd"
        ],
        "x": 1415,
        "y": 2660,
        "wires": []
    },
    {
        "id": "73cebf468699bff1",
        "type": "link in",
        "z": "6d42dc07fde7a1cc",
        "name": "Set Name",
        "links": [
            "70628e9dc7527cfa"
        ],
        "x": 165,
        "y": 900,
        "wires": [
            [
                "ed02a84657b2c2ac"
            ]
        ]
    },
    {
        "id": "4cf535097dc8835c",
        "type": "link out",
        "z": "6d42dc07fde7a1cc",
        "name": "link out 85",
        "mode": "link",
        "links": [
            "4b88f0479c63ca0b"
        ],
        "x": 785,
        "y": 940,
        "wires": []
    },
    {
        "id": "4b88f0479c63ca0b",
        "type": "link in",
        "z": "6d42dc07fde7a1cc",
        "name": "Timezone",
        "links": [
            "4cf535097dc8835c"
        ],
        "x": 165,
        "y": 1100,
        "wires": [
            [
                "d15a293a5a6ad1d9"
            ]
        ]
    },
    {
        "id": "50458d9f081ce80d",
        "type": "link out",
        "z": "6d42dc07fde7a1cc",
        "name": "link out 86",
        "mode": "link",
        "links": [
            "bd93b353ad7c36a3"
        ],
        "x": 805,
        "y": 1140,
        "wires": []
    },
    {
        "id": "bd93b353ad7c36a3",
        "type": "link in",
        "z": "6d42dc07fde7a1cc",
        "name": "Zipstream",
        "links": [
            "50458d9f081ce80d"
        ],
        "x": 165,
        "y": 1300,
        "wires": [
            [
                "0d0515f512ae48b7"
            ]
        ]
    },
    {
        "id": "075bcdca09378465",
        "type": "link out",
        "z": "6d42dc07fde7a1cc",
        "name": "link out 87",
        "mode": "link",
        "links": [
            "b4453d53bb7384f2"
        ],
        "x": 1935,
        "y": 1420,
        "wires": []
    },
    {
        "id": "fe4b1a12295be390",
        "type": "link out",
        "z": "6d42dc07fde7a1cc",
        "name": "link out 93",
        "mode": "link",
        "links": [
            "fd813139961b13e6"
        ],
        "x": 1745,
        "y": 1580,
        "wires": []
    },
    {
        "id": "72f8b6bf63c1f3ba",
        "type": "link out",
        "z": "6d42dc07fde7a1cc",
        "name": "link out 94",
        "mode": "link",
        "links": [
            "fd813139961b13e6"
        ],
        "x": 2295,
        "y": 1780,
        "wires": []
    },
    {
        "id": "7cd69a23f761639c",
        "type": "link out",
        "z": "6d42dc07fde7a1cc",
        "name": "link out 95",
        "mode": "link",
        "links": [
            "fd813139961b13e6"
        ],
        "x": 1705,
        "y": 2340,
        "wires": []
    },
    {
        "id": "348c71bfd1abaa3a",
        "type": "link out",
        "z": "6d42dc07fde7a1cc",
        "name": "link out 96",
        "mode": "link",
        "links": [
            "fd813139961b13e6"
        ],
        "x": 1415,
        "y": 2580,
        "wires": []
    },
    {
        "id": "881a3255ec577797",
        "type": "link out",
        "z": "6d42dc07fde7a1cc",
        "name": "link out 97",
        "mode": "link",
        "links": [
            "fd813139961b13e6"
        ],
        "x": 1965,
        "y": 2820,
        "wires": []
    },
    {
        "id": "0f2c6175d944df9b",
        "type": "link out",
        "z": "6d42dc07fde7a1cc",
        "name": "link out 98",
        "mode": "link",
        "links": [
            "fd813139961b13e6"
        ],
        "x": 1205,
        "y": 3020,
        "wires": []
    },
    {
        "id": "c2d7c2a2b8161e5a",
        "type": "function",
        "z": "6d42dc07fde7a1cc",
        "g": "a6daea7094dcf3c1",
        "name": "For Each Cameras",
        "func": "msg.inventory.forEach(function(device){\n    msg.address = device.address;\n    msg.properties = device.properties || null;\n    node.send(msg);\n});\n",
        "outputs": 1,
        "timeout": "",
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "libs": [],
        "x": 570,
        "y": 260,
        "wires": [
            [
                "1f15e092e60c9844"
            ]
        ]
    },
    {
        "id": "1f15e092e60c9844",
        "type": "function",
        "z": "6d42dc07fde7a1cc",
        "g": "a6daea7094dcf3c1",
        "name": "Main Account",
        "func": "if (!msg.config.hasOwnProperty(\"accounts\") || !msg.config.accounts || !Array.isArray(msg.config.accounts)) {\n    node.error(\"Invalid accounts in config config\", msg);\n    return;\n}\n\nif( msg.config.accounts.length === 0 ) {\n    node.error(\"No accounts defined\", msg);\n    return;\n}\n\nif (!msg.config.accounts[0].hasOwnProperty(\"name\") || msg.config.accounts[0].name.length < 2) {\n    node.error(\"Invalid account name\", msg);\n    return;\n}\n\nif (!msg.config.accounts[0].hasOwnProperty(\"password\") || msg.config.accounts[0].password.length < 5) {\n    node.error(\"Invalid account password\", msg);\n    return;\n}\n\nmsg.user = msg.config.accounts[0].name;\nmsg.password = msg.config.accounts[0].password;\n\nmsg.payload = {\n    \"name\": msg.user,\n    \"password\": msg.password,\n    \"privileges\": \"Admin\"\n}\n\nreturn msg;",
        "outputs": 1,
        "timeout": "",
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "libs": [],
        "x": 360,
        "y": 320,
        "wires": [
            [
                "fc369dfee32ed2e3"
            ]
        ]
    },
    {
        "id": "fc369dfee32ed2e3",
        "type": "Axis Security",
        "z": "6d42dc07fde7a1cc",
        "g": "a6daea7094dcf3c1",
        "name": "",
        "preset": "1af13a1540441ff9",
        "address": "",
        "action": "Set account",
        "data": "",
        "options": "",
        "x": 550,
        "y": 320,
        "wires": [
            [
                "9f567c6239e2f210"
            ]
        ]
    },
    {
        "id": "9f567c6239e2f210",
        "type": "Axis device",
        "z": "6d42dc07fde7a1cc",
        "g": "a6daea7094dcf3c1",
        "name": "",
        "preset": "1af13a1540441ff9",
        "action": "Device Info",
        "cgi": "",
        "data": "",
        "options": "",
        "filename": "",
        "x": 350,
        "y": 380,
        "wires": [
            [
                "58641cab88f6e32c"
            ]
        ]
    },
    {
        "id": "58641cab88f6e32c",
        "type": "change",
        "z": "6d42dc07fde7a1cc",
        "g": "a6daea7094dcf3c1",
        "name": "msg.device",
        "rules": [
            {
                "t": "set",
                "p": "device",
                "pt": "msg",
                "to": "payload",
                "tot": "msg"
            }
        ],
        "action": "",
        "property": "",
        "from": "",
        "to": "",
        "reg": false,
        "x": 630,
        "y": 380,
        "wires": [
            [
                "d1f261abccdd89fb"
            ]
        ]
    },
    {
        "id": "ce1f9e18f9d2a93e",
        "type": "comment",
        "z": "6d42dc07fde7a1cc",
        "g": "a6daea7094dcf3c1",
        "name": "Run staging",
        "info": "",
        "x": 310,
        "y": 200,
        "wires": []
    },
    {
        "id": "d1f261abccdd89fb",
        "type": "Axis camera",
        "z": "6d42dc07fde7a1cc",
        "g": "a6daea7094dcf3c1",
        "name": "",
        "preset": "1af13a1540441ff9",
        "action": "Camera Info",
        "resolution": "640x360",
        "output": "Base64",
        "filename": "",
        "options": "",
        "data": "",
        "x": 350,
        "y": 440,
        "wires": [
            [
                "ddecb5534f5c267e"
            ]
        ]
    },
    {
        "id": "ddecb5534f5c267e",
        "type": "change",
        "z": "6d42dc07fde7a1cc",
        "g": "a6daea7094dcf3c1",
        "name": "msg.camera",
        "rules": [
            {
                "t": "set",
                "p": "camera",
                "pt": "msg",
                "to": "payload",
                "tot": "msg"
            }
        ],
        "action": "",
        "property": "",
        "from": "",
        "to": "",
        "reg": false,
        "x": 610,
        "y": 440,
        "wires": [
            [
                "22fd81e81e58a9bc"
            ]
        ]
    },
    {
        "id": "9ca3fb83104f2ec3",
        "type": "catch",
        "z": "6d42dc07fde7a1cc",
        "g": "a6daea7094dcf3c1",
        "name": "",
        "scope": [
            "d1f261abccdd89fb"
        ],
        "uncaught": false,
        "x": 350,
        "y": 480,
        "wires": [
            [
                "ff7cd4027a66f1da"
            ]
        ]
    },
    {
        "id": "ff7cd4027a66f1da",
        "type": "change",
        "z": "6d42dc07fde7a1cc",
        "g": "a6daea7094dcf3c1",
        "name": "msg.camera",
        "rules": [
            {
                "t": "set",
                "p": "camera",
                "pt": "msg",
                "to": "null",
                "tot": "json"
            }
        ],
        "action": "",
        "property": "",
        "from": "",
        "to": "",
        "reg": false,
        "x": 610,
        "y": 480,
        "wires": [
            [
                "22fd81e81e58a9bc"
            ]
        ]
    },
    {
        "id": "b71a276e97101779",
        "type": "function",
        "z": "6d42dc07fde7a1cc",
        "g": "a6daea7094dcf3c1",
        "name": "Validate",
        "func": "if(!msg.config || typeof msg.config !== \"object\"){\n    node.error(\"config undefined\", msg);\n    return;\n}\n\nif(!msg.inventory || !Array.isArray(msg.inventory) || msg.inventory.length === 0){\n    node.error(\"inventory undefined\", msg);\n    return;\n}\n\nreturn msg;",
        "outputs": 1,
        "timeout": 0,
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "libs": [],
        "x": 340,
        "y": 260,
        "wires": [
            [
                "c2d7c2a2b8161e5a"
            ]
        ]
    },
    {
        "id": "7407aee1d1cadd6f",
        "type": "Axis Security",
        "z": "6d42dc07fde7a1cc",
        "g": "97cd457f96f38f70",
        "name": "",
        "preset": "1af13a1540441ff9",
        "address": "",
        "action": "Allow SSH",
        "data": "",
        "options": "",
        "x": 490,
        "y": 3020,
        "wires": [
            [
                "f44d7f0c8df08e2d"
            ]
        ]
    },
    {
        "id": "685f821274b581ad",
        "type": "Axis Security",
        "z": "6d42dc07fde7a1cc",
        "g": "97cd457f96f38f70",
        "name": "",
        "preset": "1af13a1540441ff9",
        "address": "",
        "action": "Set SSH User",
        "data": "",
        "options": "",
        "x": 880,
        "y": 3020,
        "wires": [
            [
                "252b2f6d49f04f32",
                "4c3bb6c1a57d77fe"
            ]
        ]
    },
    {
        "id": "d069d879c526844e",
        "type": "comment",
        "z": "6d42dc07fde7a1cc",
        "g": "97cd457f96f38f70",
        "name": "Enable SSH",
        "info": "",
        "x": 310,
        "y": 2960,
        "wires": []
    },
    {
        "id": "e025f3668afecba6",
        "type": "function",
        "z": "6d42dc07fde7a1cc",
        "g": "97cd457f96f38f70",
        "name": "SSH",
        "func": "if( !msg.config.hasOwnProperty(\"ssh\") ) {\n  node.send([null,msg]);\n  return;\n}\n\nif( msg.config.ssh === false || msg.config.ssh === null )\n    msg.payload = false;\nelse    \n    msg.payload = true;\nnode.send([msg,null]);\n",
        "outputs": 2,
        "timeout": 0,
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "libs": [],
        "x": 290,
        "y": 3020,
        "wires": [
            [
                "7407aee1d1cadd6f"
            ],
            [
                "36b89933e57818cf"
            ]
        ]
    },
    {
        "id": "4c3bb6c1a57d77fe",
        "type": "function",
        "z": "6d42dc07fde7a1cc",
        "g": "97cd457f96f38f70",
        "name": "Status",
        "func": "msg.payload = msg.device.serial + \": SSH user \" + msg.config.ssh.user;\nreturn msg;",
        "outputs": 1,
        "timeout": 0,
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "libs": [],
        "x": 1070,
        "y": 3020,
        "wires": [
            [
                "0f2c6175d944df9b"
            ]
        ]
    },
    {
        "id": "40815d0a8e39cf7f",
        "type": "template",
        "z": "6d42dc07fde7a1cc",
        "g": "d0160cacc6bea5d9",
        "name": "MQTT Config",
        "field": "payload",
        "fieldType": "msg",
        "format": "handlebars",
        "syntax": "mustache",
        "template": "{\n    \"apiVersion\":\"1.5\",\n    \"method\":\"configureClient\",\n    \"params\":{\n        \"autoReconnect\":true,\n        \"cleanSession\":true,\n        \"clientId\": \"{{device.serial}}\",\n        \"connectTimeout\":60,\n        \"deviceTopicPrefix\":\"axis\",\n        \"id\":\"MqttClientConfig\",\n        \"keepAliveInterval\":60,\n        \"server\":{\n            \"host\": \"{{config.mqtt.address}}\",\n            \"id\":\"MqttClientServer\",\n            \"port\":1883,\n            \"protocol\":\"tcp\"\n        },\n        \"username\": \"{{config.mqtt.user}}\",\n        \"password\": \"{{config.mqtt.password}}\",\n        \"keepExistingPassword\":false\n    }\n}\n\n",
        "output": "str",
        "x": 540,
        "y": 2820,
        "wires": [
            [
                "27b64322651b243e"
            ]
        ],
        "info": "https://www.axis.com/vapix-library/subjects/t10175981/section/t10152603/display?section=t10152603-t10152921\r\n\r\n{\r\n  \"apiVersion\": \"<Major>.<Minor>\",\r\n  \"context\": <string>,\r\n  \"method\": \"configureClient\",\r\n  \"params\": {\r\n\r\n    \"server\": {\r\n      \"protocol\": <string>,\r\n      \"host\": <string>,\r\n      \"port\": <integer>,\r\n      \"basepath\": <string>,\r\n      \"alpnProtocol\": <string>\r\n    },\r\n\r\n    \"httpProxy\": <string>,\r\n    \"httpsProxy\": <string>,\r\n    \"username\": <string>,\r\n    \"password\": <string>,\r\n    \"keepExistingPassword\": <boolean>\r\n    \"clientId\": <string>,\r\n    \"keepAliveInterval\": <int>,\r\n    \"connectTimeout\": <int>,\r\n    \"cleanSession\": <boolean>,\r\n    \"autoReconnect\": <boolean>,\r\n    \"deviceTopicPrefix\": <string>,\r\n\r\n    \"lastWillTestament\": {\r\n      \"useDefault\": <boolean>,\r\n      \"topic\": <string>,\r\n      \"message\": <string>,\r\n      \"retain\": <boolean>,\r\n      \"qos\": <int>\r\n    },\r\n\r\n    \"connectMessage\": {\r\n      \"useDefault\": <boolean>,\r\n      \"topic\": <string>,\r\n      \"message\": <string>,\r\n      \"retain\": <boolean>,\r\n      \"qos\": <int>\r\n    },\r\n\r\n    \"disconnectMessage\": {\r\n      \"useDefault\": <boolean>,\r\n      \"topic\": <string>,\r\n      \"message\": <string>,\r\n      \"retain\": <boolean>,\r\n      \"qos\": <int>\r\n    },\r\n    \"ssl\": {\r\n      \"validateServerCert\": <boolean>,\r\n      \"clientCertID\": <string>,\r\n      \"CACertID\": <string>\r\n    }\r\n  }\r\n}\r\n"
    },
    {
        "id": "7ff2d3760f80a448",
        "type": "template",
        "z": "6d42dc07fde7a1cc",
        "g": "d0160cacc6bea5d9",
        "name": "Start MQTT",
        "field": "payload",
        "fieldType": "msg",
        "format": "handlebars",
        "syntax": "mustache",
        "template": "{\n    \"apiVersion\":\"1.5\",\n    \"method\":\"activateClient\"\n}",
        "output": "str",
        "x": 990,
        "y": 2820,
        "wires": [
            [
                "a5300af384ec9ba3"
            ]
        ]
    },
    {
        "id": "27b64322651b243e",
        "type": "Axis device",
        "z": "6d42dc07fde7a1cc",
        "g": "d0160cacc6bea5d9",
        "name": "/axis-cgi/mqtt/client.cgi",
        "preset": "1af13a1540441ff9",
        "action": "HTTP Post",
        "cgi": "/axis-cgi/mqtt/client.cgi",
        "data": "",
        "options": "",
        "filename": "",
        "x": 770,
        "y": 2820,
        "wires": [
            [
                "7ff2d3760f80a448"
            ]
        ]
    },
    {
        "id": "a5300af384ec9ba3",
        "type": "Axis device",
        "z": "6d42dc07fde7a1cc",
        "g": "d0160cacc6bea5d9",
        "name": "/axis-cgi/mqtt/client.cgi",
        "preset": "1af13a1540441ff9",
        "action": "HTTP Post",
        "cgi": "/axis-cgi/mqtt/client.cgi",
        "data": "",
        "options": "",
        "filename": "",
        "x": 1210,
        "y": 2820,
        "wires": [
            [
                "b011198d0b2b2578"
            ]
        ]
    },
    {
        "id": "11756940332c3eca",
        "type": "comment",
        "z": "6d42dc07fde7a1cc",
        "g": "d0160cacc6bea5d9",
        "name": "MQTT Client setup",
        "info": "",
        "x": 330,
        "y": 2760,
        "wires": []
    },
    {
        "id": "97481c69763ef2e7",
        "type": "function",
        "z": "6d42dc07fde7a1cc",
        "g": "d0160cacc6bea5d9",
        "name": "Set MQTT Client",
        "func": "if (!msg.config.hasOwnProperty(\"mqtt\") || !msg.config.mqtt || typeof msg.config.mqtt !== \"object\" ) {\n    node.send([null, msg]);\n    return;\n}\n\nif (!msg.config.mqtt.hasOwnProperty(\"address\") || msg.config.mqtt.address.length < 5) {\n    node.send([null, msg]);\n    return;\n}\n\nif (!msg.config.mqtt.hasOwnProperty(\"port\") )\n    msg.config.mqtt.port = \"1880\";\n\nif (!msg.config.mqtt.hasOwnProperty(\"user\"))\n    msg.config.mqtt.user = \"\";\n\nif (!msg.config.mqtt.hasOwnProperty(\"password\"))\n    msg.config.mqtt.pasword = \"\";\n\nnode.send([msg,null]);",
        "outputs": 2,
        "timeout": 0,
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "libs": [],
        "x": 330,
        "y": 2820,
        "wires": [
            [
                "40815d0a8e39cf7f"
            ],
            [
                "e8feb42a043b6459"
            ]
        ]
    },
    {
        "id": "b011198d0b2b2578",
        "type": "function",
        "z": "6d42dc07fde7a1cc",
        "g": "d0160cacc6bea5d9",
        "name": "Publish",
        "func": "if (!msg.config.mqtt.hasOwnProperty(\"publish\") || !Array.isArray(msg.config.mqtt.publish) || msg.config.mqtt.publish.length === 0 ) {\n    node.send([null,msg]);\n    return;\n}\n\nmsg.payload = {\n    apiVersion: \"1.2\",\n    method: \"configureEventPublication\",\n    params: {\n        appendEventTopic: true,\n        customTopicPrefix: \"event\",\n        eventFilterList: msg.config.mqtt.publish,\n        includeSerialNumberInPayload: true,\n        includeTopicNamespaces: false,\n        topicPrefix: \"custom\"\n    }\n}\nnode.send([msg,null]);",
        "outputs": 2,
        "timeout": 0,
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "libs": [],
        "x": 1420,
        "y": 2820,
        "wires": [
            [
                "880a9303f341b62b"
            ],
            [
                "40f73ce61b9326e0"
            ]
        ]
    },
    {
        "id": "880a9303f341b62b",
        "type": "Axis device",
        "z": "6d42dc07fde7a1cc",
        "g": "d0160cacc6bea5d9",
        "name": "/axis-cgi/mqtt/event.cgi",
        "preset": "1af13a1540441ff9",
        "action": "HTTP Post",
        "cgi": "/axis-cgi/mqtt/event.cgi",
        "data": "",
        "options": "",
        "filename": "",
        "x": 1630,
        "y": 2820,
        "wires": [
            [
                "49f6847da02f3bca",
                "b522eec6ae37f6a7"
            ]
        ]
    },
    {
        "id": "b522eec6ae37f6a7",
        "type": "function",
        "z": "6d42dc07fde7a1cc",
        "g": "d0160cacc6bea5d9",
        "name": "Status",
        "func": "msg.payload = msg.device.serial + \": MQTT client set\";\nreturn msg;",
        "outputs": 1,
        "timeout": 0,
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "libs": [],
        "x": 1830,
        "y": 2820,
        "wires": [
            [
                "881a3255ec577797"
            ]
        ]
    },
    {
        "id": "51a9a2c90c646848",
        "type": "function",
        "z": "6d42dc07fde7a1cc",
        "g": "7f637aa563c1770a",
        "name": "ACAPS",
        "func": "if( !msg.config.hasOwnProperty(\"acaps\") || msg.config.acaps.length === 0 ) {\n    node.send([null,msg]);\n    return;\n}\nmsg.payload = msg.config.acaps;\nnode.send([msg],null);\n",
        "outputs": 2,
        "timeout": 0,
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "libs": [],
        "x": 300,
        "y": 3220,
        "wires": [
            [
                "a23c59f972190425"
            ],
            [
                "c79c9c2e52709ddb"
            ]
        ]
    },
    {
        "id": "a23c59f972190425",
        "type": "split",
        "z": "6d42dc07fde7a1cc",
        "g": "7f637aa563c1770a",
        "name": "",
        "splt": "\\n",
        "spltType": "str",
        "arraySplt": 1,
        "arraySpltType": "len",
        "stream": false,
        "addname": "",
        "x": 460,
        "y": 3220,
        "wires": [
            [
                "95d352d5d00fc4b6"
            ]
        ]
    },
    {
        "id": "95d352d5d00fc4b6",
        "type": "change",
        "z": "6d42dc07fde7a1cc",
        "g": "7f637aa563c1770a",
        "name": "",
        "rules": [
            {
                "t": "set",
                "p": "acap",
                "pt": "msg",
                "to": "payload",
                "tot": "msg"
            },
            {
                "t": "set",
                "p": "payload",
                "pt": "msg",
                "to": "payload.package",
                "tot": "msg"
            }
        ],
        "action": "",
        "property": "",
        "from": "",
        "to": "",
        "reg": false,
        "x": 630,
        "y": 3220,
        "wires": [
            [
                "aacf36da03b730e4"
            ]
        ]
    },
    {
        "id": "aacf36da03b730e4",
        "type": "Axis ACAP",
        "z": "6d42dc07fde7a1cc",
        "g": "7f637aa563c1770a",
        "name": "",
        "preset": "1af13a1540441ff9",
        "action": "ACAP Status",
        "acap": "",
        "filename": "",
        "x": 820,
        "y": 3220,
        "wires": [
            [
                "06562e6428a7e980"
            ]
        ]
    },
    {
        "id": "988ffbe92f5eb1c2",
        "type": "catch",
        "z": "6d42dc07fde7a1cc",
        "g": "7f637aa563c1770a",
        "name": "Installation required",
        "scope": [
            "aacf36da03b730e4"
        ],
        "uncaught": false,
        "x": 620,
        "y": 3300,
        "wires": [
            [
                "1ec4fa0197a70334"
            ]
        ]
    },
    {
        "id": "1ec4fa0197a70334",
        "type": "function",
        "z": "6d42dc07fde7a1cc",
        "g": "7f637aa563c1770a",
        "name": "Install ACAP",
        "func": "msg.filename = msg.acap[msg.device.platform];\nmsg.payload = msg.filename;\nreturn msg;",
        "outputs": 1,
        "timeout": 0,
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "libs": [],
        "x": 860,
        "y": 3300,
        "wires": [
            [
                "589a48123f0f6e37"
            ]
        ]
    },
    {
        "id": "589a48123f0f6e37",
        "type": "Axis ACAP",
        "z": "6d42dc07fde7a1cc",
        "g": "7f637aa563c1770a",
        "name": "",
        "preset": "1af13a1540441ff9",
        "action": "Install ACAP",
        "acap": "",
        "filename": "",
        "x": 1040,
        "y": 3300,
        "wires": [
            [
                "b576e4918ad5cac8"
            ]
        ]
    },
    {
        "id": "06562e6428a7e980",
        "type": "function",
        "z": "6d42dc07fde7a1cc",
        "g": "7f637aa563c1770a",
        "name": "Need Update",
        "func": "if( msg.acap.version === msg.payload.Version ) {\n    msg.payload = msg.payload.Name;\n    node.send([msg,null]);\n    return;\n}\nmsg.payload = msg.payload.Name;\nnode.send([null,msg]);\n",
        "outputs": 2,
        "timeout": 0,
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "libs": [],
        "x": 1020,
        "y": 3220,
        "wires": [
            [
                "b576e4918ad5cac8"
            ],
            [
                "1ec4fa0197a70334",
                "11697d9f8c0f7233"
            ]
        ]
    },
    {
        "id": "b576e4918ad5cac8",
        "type": "Axis ACAP",
        "z": "6d42dc07fde7a1cc",
        "g": "7f637aa563c1770a",
        "name": "",
        "preset": "1af13a1540441ff9",
        "action": "Start ACAP",
        "acap": "",
        "filename": "",
        "x": 1240,
        "y": 3300,
        "wires": [
            [
                "75797dfc2d3e399f",
                "139603f1191905d6"
            ]
        ]
    },
    {
        "id": "0fadb4c7d0d190df",
        "type": "comment",
        "z": "6d42dc07fde7a1cc",
        "g": "7f637aa563c1770a",
        "name": "Install ACAPS",
        "info": "",
        "x": 310,
        "y": 3160,
        "wires": []
    },
    {
        "id": "75797dfc2d3e399f",
        "type": "function",
        "z": "6d42dc07fde7a1cc",
        "g": "7f637aa563c1770a",
        "name": "Status",
        "func": "msg.payload = msg.device.serial + \": \" + msg.acap.package + \" installed and started\";\nreturn msg;",
        "outputs": 1,
        "timeout": 0,
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "libs": [],
        "x": 1470,
        "y": 3300,
        "wires": [
            [
                "8f55c63b83b2328c"
            ]
        ]
    },
    {
        "id": "5a05bdb53ee2f174",
        "type": "template",
        "z": "6d42dc07fde7a1cc",
        "g": "3763a604cedcadd6",
        "name": "Set TLS Policy",
        "field": "payload",
        "fieldType": "msg",
        "format": "handlebars",
        "syntax": "mustache",
        "template": "<?xml version=\"1.0\" encoding=\"UTF-8\"?>\n<Envelope xmlns=\"http://www.w3.org/2003/05/soap-envelope\">\n <Header/>\n <Body >\n<SetWebServerTlsConfiguration xmlns=\"http://www.axis.com/vapix/ws/webserver\" xmlns:acert=\"http://www.axis.com/vapix/ws/cert\">\n          <Configuration>\n              <Tls>true</Tls>\n              <ConnectionPolicies>\n                  <Admin>{{config.tls.policy}}</Admin>\n              </ConnectionPolicies>\n              <Ciphers>\n                  <acert:Cipher>ECDHE-ECDSA-AES128-GCM-SHA256</acert:Cipher><acert:Cipher>ECDHE-RSA-AES128-GCM-SHA256</acert:Cipher><acert:Cipher>ECDHE-ECDSA-AES256-GCM-SHA384</acert:Cipher><acert:Cipher>ECDHE-RSA-AES256-GCM-SHA384</acert:Cipher><acert:Cipher>ECDHE-ECDSA-CHACHA20-POLY1305</acert:Cipher><acert:Cipher>ECDHE-RSA-CHACHA20-POLY1305</acert:Cipher><acert:Cipher>DHE-RSA-AES128-GCM-SHA256</acert:Cipher><acert:Cipher>DHE-RSA-AES256-GCM-SHA384</acert:Cipher>\n              </Ciphers>\n              <CertificateSet>\n                  <acert:Certificates><acert:Id>{{payload}}</acert:Id></acert:Certificates>\n                  <acert:CACertificates></acert:CACertificates>\n                  <acert:TrustedCertificates></acert:TrustedCertificates>\n              </CertificateSet>\n          </Configuration>\n      </SetWebServerTlsConfiguration>\n </Body>\n</Envelope>",
        "output": "str",
        "x": 1220,
        "y": 1580,
        "wires": [
            [
                "e33b6f02485bdd07"
            ]
        ]
    },
    {
        "id": "e33b6f02485bdd07",
        "type": "Axis device",
        "z": "6d42dc07fde7a1cc",
        "g": "3763a604cedcadd6",
        "name": "/vapix/services",
        "preset": "1af13a1540441ff9",
        "action": "HTTP Post",
        "cgi": "/vapix/services",
        "data": "",
        "options": "",
        "filename": "",
        "x": 1420,
        "y": 1580,
        "wires": [
            [
                "63b73943e7fd0961",
                "e491bd57e68ab8ed"
            ]
        ]
    },
    {
        "id": "020c6ba4f1a9fd51",
        "type": "template",
        "z": "6d42dc07fde7a1cc",
        "g": "3763a604cedcadd6",
        "name": "Get TLS Policy",
        "field": "payload",
        "fieldType": "msg",
        "format": "handlebars",
        "syntax": "mustache",
        "template": "<?xml version=\"1.0\" encoding=\"UTF-8\"?>\n<Envelope xmlns=\"http://www.w3.org/2003/05/soap-envelope\">\n <Header/>\n <Body >\n<GetWebServerTlsConfiguration xmlns=\"http://www.axis.com/vapix/ws/webserver\">\n    </GetWebServerTlsConfiguration>\n </Body>\n</Envelope>",
        "output": "str",
        "x": 500,
        "y": 1580,
        "wires": [
            [
                "e0accfd45ba0304b"
            ]
        ]
    },
    {
        "id": "e0accfd45ba0304b",
        "type": "Axis device",
        "z": "6d42dc07fde7a1cc",
        "g": "3763a604cedcadd6",
        "name": "/vapix/services",
        "preset": "1af13a1540441ff9",
        "action": "HTTP Post",
        "cgi": "/vapix/services",
        "data": "",
        "options": "",
        "filename": "",
        "x": 700,
        "y": 1580,
        "wires": [
            [
                "05e2a2fe0e9d9aff"
            ]
        ]
    },
    {
        "id": "05e2a2fe0e9d9aff",
        "type": "xml",
        "z": "6d42dc07fde7a1cc",
        "g": "3763a604cedcadd6",
        "name": "",
        "property": "payload",
        "attr": "",
        "chr": "",
        "x": 870,
        "y": 1580,
        "wires": [
            [
                "c264fb8b19354902"
            ]
        ]
    },
    {
        "id": "c264fb8b19354902",
        "type": "change",
        "z": "6d42dc07fde7a1cc",
        "g": "3763a604cedcadd6",
        "name": "Certificate ID",
        "rules": [
            {
                "t": "set",
                "p": "payload",
                "pt": "msg",
                "to": "payload['SOAP-ENV:Envelope']['SOAP-ENV:Body'][0]['aweb:GetWebServerTlsConfigurationResponse'][0]['aweb:Configuration'][0]['aweb:CertificateSet'][0]['acert:Certificates'][0]['acert:Id'][0]",
                "tot": "msg"
            }
        ],
        "action": "",
        "property": "",
        "from": "",
        "to": "",
        "reg": false,
        "x": 1030,
        "y": 1580,
        "wires": [
            [
                "5a05bdb53ee2f174"
            ]
        ]
    },
    {
        "id": "ee5890e96376b6e0",
        "type": "comment",
        "z": "6d42dc07fde7a1cc",
        "g": "3763a604cedcadd6",
        "name": "Set access policy (HTTP and/or HTTP)",
        "info": "",
        "x": 390,
        "y": 1520,
        "wires": []
    },
    {
        "id": "189d5aeb99b9aeac",
        "type": "function",
        "z": "6d42dc07fde7a1cc",
        "g": "3763a604cedcadd6",
        "name": "TLS policy",
        "func": "if( !msg.config.hasOwnProperty(\"tls\") || !msg.config.tls || typeof msg.config.tls !== \"string\" || msg.config.tls.length < 4) {\n  node.send([null,msg]);\n  return;\n}\nnode.send([msg,null]);\n",
        "outputs": 2,
        "timeout": 0,
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "libs": [],
        "x": 310,
        "y": 1580,
        "wires": [
            [
                "020c6ba4f1a9fd51"
            ],
            [
                "46d9574007c8b241"
            ]
        ]
    },
    {
        "id": "e491bd57e68ab8ed",
        "type": "function",
        "z": "6d42dc07fde7a1cc",
        "g": "3763a604cedcadd6",
        "name": "Status",
        "func": "msg.payload = msg.device.serial + \": Connection policy set to \" + msg.config.tls.policy;\nreturn msg;",
        "outputs": 1,
        "timeout": 0,
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "libs": [],
        "x": 1610,
        "y": 1580,
        "wires": [
            [
                "fe4b1a12295be390"
            ]
        ]
    },
    {
        "id": "428a3635bc61cf24",
        "type": "template",
        "z": "6d42dc07fde7a1cc",
        "g": "694ab4032aea3d26",
        "name": "XML",
        "field": "payload",
        "fieldType": "msg",
        "format": "handlebars",
        "syntax": "mustache",
        "template": "<? xml version = \"1.0\" encoding = \"UTF-8\" ?>\n<Envelope xmlns=\"http://www.w3.org/2003/05/soap-envelope\">\n    <Header />\n    <Body >\n        <CreateUsers xmlns=\"http://www.onvif.org/ver10/device/wsdl\" xmlns:tt=\"http://www.onvif.org/ver10/schema\">\n            <User>\n                <tt:Username>{{payload.name}}</tt:Username>\n                <tt:Password>{{payload.password}}</tt:Password>\n                <tt:UserLevel>{{payload.privileges}}</tt:UserLevel>\n            </User>\n        </CreateUsers>\n    </Body>\n</Envelope>\n",
        "output": "str",
        "x": 550,
        "y": 1780,
        "wires": [
            [
                "18b630a17fa5d707"
            ]
        ]
    },
    {
        "id": "d2780e923c4dd3f8",
        "type": "function",
        "z": "6d42dc07fde7a1cc",
        "g": "694ab4032aea3d26",
        "name": "ONVIF USER 1",
        "func": "if (!msg.config.hasOwnProperty(\"onvif\") || !msg.config.onvif || !Array.isArray(msg.config.onvif) || msg.config.onvif.length < 1 ) {\n    node.send([null,msg]);\n    return;\n}\n\nif (!msg.config.onvif[0].hasOwnProperty(\"name\") || !msg.config.onvif[0].name || typeof msg.config.onvif[0].name !== \"string\" || msg.config.onvif[0].name.length < 3 ) {\n    node.send([null,msg]);\n    return;\n}\n\nif (!msg.config.onvif[0].hasOwnProperty(\"password\") || !msg.config.onvif[0].password || typeof msg.config.onvif[0].password !== \"string\" || msg.config.onvif[0].password.length < 3 ) {\n    node.send([null,msg]);\n    return;\n}\n\n\nmsg.payload = msg.config.onvif[0];\nnode.send([msg,null]);",
        "outputs": 2,
        "timeout": "",
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "libs": [],
        "x": 320,
        "y": 1780,
        "wires": [
            [
                "428a3635bc61cf24"
            ],
            [
                "4a0ee7956c5cb56e"
            ]
        ]
    },
    {
        "id": "18b630a17fa5d707",
        "type": "Axis device",
        "z": "6d42dc07fde7a1cc",
        "g": "694ab4032aea3d26",
        "name": "Add ONVIF User 1",
        "preset": "1af13a1540441ff9",
        "action": "HTTP Post",
        "cgi": "/vapix/services",
        "data": "",
        "options": "",
        "filename": "",
        "x": 730,
        "y": 1780,
        "wires": [
            [
                "c7d47c20e5cf2a53",
                "1933d552baa68898"
            ]
        ]
    },
    {
        "id": "2814367f0e955133",
        "type": "catch",
        "z": "6d42dc07fde7a1cc",
        "g": "694ab4032aea3d26",
        "name": "",
        "scope": [
            "18b630a17fa5d707"
        ],
        "uncaught": false,
        "x": 290,
        "y": 1840,
        "wires": [
            [
                "aaa8fae12177c982"
            ]
        ]
    },
    {
        "id": "bc2606da493e183b",
        "type": "template",
        "z": "6d42dc07fde7a1cc",
        "g": "694ab4032aea3d26",
        "name": "XML",
        "field": "payload",
        "fieldType": "msg",
        "format": "handlebars",
        "syntax": "mustache",
        "template": "<? xml version = \"1.0\" encoding = \"UTF-8\" ?>\n<Envelope xmlns=\"http://www.w3.org/2003/05/soap-envelope\">\n    <Header />\n    <Body >\n        <CreateUsers xmlns=\"http://www.onvif.org/ver10/device/wsdl\" xmlns:tt=\"http://www.onvif.org/ver10/schema\">\n            <User>\n                <tt:Username>{{payload.name}}</tt:Username>\n                <tt:Password>{{payload.password}}</tt:Password>\n                <tt:UserLevel>{{payload.privileges}}</tt:UserLevel>\n            </User>\n        </CreateUsers>\n    </Body>\n</Envelope>\n",
        "output": "str",
        "x": 1130,
        "y": 1840,
        "wires": [
            [
                "87bcc88a1385a978"
            ]
        ]
    },
    {
        "id": "c7d47c20e5cf2a53",
        "type": "function",
        "z": "6d42dc07fde7a1cc",
        "g": "694ab4032aea3d26",
        "name": "ONVIF USER 2",
        "func": "if (!msg.config.hasOwnProperty(\"onvif\") ||  !msg.config.onvif ||  !Array.isArray(msg.config.onvif) || msg.config.onvif.length < 2) {\n    node.send([null, msg]);\n    return;\n}\n\nif (!msg.config.onvif[1].hasOwnProperty(\"name\") || !msg.config.onvif[1].name || typeof msg.config.onvif[1].name !== \"string\" || msg.config.onvif[1].name.length < 3 ) {\n    node.send([null,msg]);\n    return;\n}\n\nif (!msg.config.onvif[1].hasOwnProperty(\"password\") || !msg.config.onvif[1].password || typeof msg.config.onvif[1].password !== \"string\" || msg.config.onvif[1].password.length < 3 ) {\n    node.send([null,msg]);\n    return;\n}\n\n\nmsg.payload = msg.config.onvif[1];\nnode.send([msg, null]);",
        "outputs": 2,
        "timeout": "",
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "libs": [],
        "x": 960,
        "y": 1840,
        "wires": [
            [
                "bc2606da493e183b"
            ],
            [
                "fc15a00405db3416"
            ]
        ]
    },
    {
        "id": "87bcc88a1385a978",
        "type": "Axis device",
        "z": "6d42dc07fde7a1cc",
        "g": "694ab4032aea3d26",
        "name": "Add ONVIF User 2",
        "preset": "1af13a1540441ff9",
        "action": "HTTP Post",
        "cgi": "/vapix/services",
        "data": "",
        "options": "",
        "filename": "",
        "x": 1310,
        "y": 1840,
        "wires": [
            [
                "bbf7489d41b939df",
                "26e99cca6d5b9146"
            ]
        ]
    },
    {
        "id": "bff6f8b48bc52816",
        "type": "catch",
        "z": "6d42dc07fde7a1cc",
        "g": "694ab4032aea3d26",
        "name": "",
        "scope": [
            "87bcc88a1385a978"
        ],
        "uncaught": false,
        "x": 850,
        "y": 1900,
        "wires": [
            [
                "152d2d2564b52758"
            ]
        ]
    },
    {
        "id": "a496eacc48ae25b6",
        "type": "comment",
        "z": "6d42dc07fde7a1cc",
        "g": "694ab4032aea3d26",
        "name": "Set ONVIF users",
        "info": "",
        "x": 330,
        "y": 1720,
        "wires": []
    },
    {
        "id": "c8c26e1dc9a11e6d",
        "type": "comment",
        "z": "6d42dc07fde7a1cc",
        "g": "694ab4032aea3d26",
        "name": "On error, user already exists.",
        "info": "",
        "x": 440,
        "y": 1880,
        "wires": []
    },
    {
        "id": "bbf7489d41b939df",
        "type": "function",
        "z": "6d42dc07fde7a1cc",
        "g": "694ab4032aea3d26",
        "name": "ONVIF USER 3",
        "func": "if (!msg.config.hasOwnProperty(\"onvif\") ||  !msg.config.onvif || !Array.isArray(msg.config.onvif) || msg.config.onvif.length < 3) {\n    node.send([null, msg]);\n    return;\n}\n\n\nif (!msg.config.onvif[2].hasOwnProperty(\"name\") || !msg.config.onvif[2].name || typeof msg.config.onvif[2].name !== \"string\" || msg.config.onvif[2].name.length < 3 ) {\n    node.send([null,msg]);\n    return;\n}\n\nif (!msg.config.onvif[2].hasOwnProperty(\"password\") || !msg.config.onvif[2].password || typeof msg.config.onvif[2].password !== \"string\" || msg.config.onvif[2].password.length < 3 ) {\n    node.send([null,msg]);\n    return;\n}\n\n\nmsg.payload = msg.config.onvif[2];\nnode.send([msg, null]);",
        "outputs": 2,
        "timeout": "",
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "libs": [],
        "x": 1540,
        "y": 1900,
        "wires": [
            [
                "1cb753bc54c658e0"
            ],
            [
                "95cbd1d5cdc41cf8"
            ]
        ]
    },
    {
        "id": "1cb753bc54c658e0",
        "type": "template",
        "z": "6d42dc07fde7a1cc",
        "g": "694ab4032aea3d26",
        "name": "XML",
        "field": "payload",
        "fieldType": "msg",
        "format": "handlebars",
        "syntax": "mustache",
        "template": "<? xml version = \"1.0\" encoding = \"UTF-8\" ?>\n<Envelope xmlns=\"http://www.w3.org/2003/05/soap-envelope\">\n    <Header />\n    <Body >\n        <CreateUsers xmlns=\"http://www.onvif.org/ver10/device/wsdl\" xmlns:tt=\"http://www.onvif.org/ver10/schema\">\n            <User>\n                <tt:Username>{{payload.name}}</tt:Username>\n                <tt:Password>{{payload.password}}</tt:Password>\n                <tt:UserLevel>{{payload.privileges}}</tt:UserLevel>\n            </User>\n        </CreateUsers>\n    </Body>\n</Envelope>\n",
        "output": "str",
        "x": 1710,
        "y": 1900,
        "wires": [
            [
                "9a33afc952aa712b"
            ]
        ]
    },
    {
        "id": "9a33afc952aa712b",
        "type": "Axis device",
        "z": "6d42dc07fde7a1cc",
        "g": "694ab4032aea3d26",
        "name": "Add ONVIF User 3",
        "preset": "1af13a1540441ff9",
        "action": "HTTP Post",
        "cgi": "/vapix/services",
        "data": "",
        "options": "",
        "filename": "",
        "x": 1930,
        "y": 1900,
        "wires": [
            [
                "7c870688bcfd8874",
                "36d9e67fd9a82ce3"
            ]
        ]
    },
    {
        "id": "332510d839492d2d",
        "type": "catch",
        "z": "6d42dc07fde7a1cc",
        "g": "694ab4032aea3d26",
        "name": "",
        "scope": [
            "9a33afc952aa712b"
        ],
        "uncaught": false,
        "x": 1430,
        "y": 1960,
        "wires": [
            [
                "312d8c960aa543c9"
            ]
        ]
    },
    {
        "id": "aaa8fae12177c982",
        "type": "change",
        "z": "6d42dc07fde7a1cc",
        "g": "694ab4032aea3d26",
        "name": "error",
        "rules": [
            {
                "t": "delete",
                "p": "error",
                "pt": "msg"
            }
        ],
        "action": "",
        "property": "",
        "from": "",
        "to": "",
        "reg": false,
        "x": 430,
        "y": 1840,
        "wires": [
            [
                "4a0ee7956c5cb56e"
            ]
        ]
    },
    {
        "id": "152d2d2564b52758",
        "type": "change",
        "z": "6d42dc07fde7a1cc",
        "g": "694ab4032aea3d26",
        "name": "error",
        "rules": [
            {
                "t": "delete",
                "p": "error",
                "pt": "msg"
            }
        ],
        "action": "",
        "property": "",
        "from": "",
        "to": "",
        "reg": false,
        "x": 990,
        "y": 1900,
        "wires": [
            [
                "fc15a00405db3416"
            ]
        ]
    },
    {
        "id": "312d8c960aa543c9",
        "type": "change",
        "z": "6d42dc07fde7a1cc",
        "g": "694ab4032aea3d26",
        "name": "error",
        "rules": [
            {
                "t": "delete",
                "p": "error",
                "pt": "msg"
            }
        ],
        "action": "",
        "property": "",
        "from": "",
        "to": "",
        "reg": false,
        "x": 1570,
        "y": 1960,
        "wires": [
            [
                "95cbd1d5cdc41cf8"
            ]
        ]
    },
    {
        "id": "1933d552baa68898",
        "type": "function",
        "z": "6d42dc07fde7a1cc",
        "g": "694ab4032aea3d26",
        "name": "Status",
        "func": "msg.payload = msg.device.serial + \": ONVIF User \" + msg.config.onvif[0].name;\nreturn msg;",
        "outputs": 1,
        "timeout": 0,
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "libs": [],
        "x": 2110,
        "y": 1780,
        "wires": [
            [
                "c8cff23232942cbb"
            ]
        ]
    },
    {
        "id": "26e99cca6d5b9146",
        "type": "function",
        "z": "6d42dc07fde7a1cc",
        "g": "694ab4032aea3d26",
        "name": "Status",
        "func": "msg.payload = msg.device.serial + \": ONVIF User \" + msg.config.onvif[1].name;\nreturn msg;",
        "outputs": 1,
        "timeout": 0,
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "libs": [],
        "x": 2110,
        "y": 1840,
        "wires": [
            [
                "c8cff23232942cbb"
            ]
        ]
    },
    {
        "id": "36d9e67fd9a82ce3",
        "type": "function",
        "z": "6d42dc07fde7a1cc",
        "g": "694ab4032aea3d26",
        "name": "Status",
        "func": "msg.payload = msg.device.serial + \": ONVIF User \" + msg.config.onvif[2].name;\nreturn msg;",
        "outputs": 1,
        "timeout": 0,
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "libs": [],
        "x": 2110,
        "y": 1900,
        "wires": [
            [
                "c8cff23232942cbb"
            ]
        ]
    },
    {
        "id": "84b351949961649a",
        "type": "Axis device",
        "z": "6d42dc07fde7a1cc",
        "g": "842b50752690e040",
        "name": "dynamicoverlay.cgi",
        "preset": "1af13a1540441ff9",
        "action": "HTTP Post",
        "cgi": "/axis-cgi/dynamicoverlay/dynamicoverlay.cgi",
        "data": "",
        "options": "",
        "filename": "",
        "x": 530,
        "y": 2340,
        "wires": [
            [
                "6af33764ac20ced9"
            ]
        ]
    },
    {
        "id": "74ba3b3d07c0e06f",
        "type": "Axis device",
        "z": "6d42dc07fde7a1cc",
        "g": "842b50752690e040",
        "name": "dynamicoverlay.cgi",
        "preset": "1af13a1540441ff9",
        "action": "HTTP Post",
        "cgi": "/axis-cgi/dynamicoverlay/dynamicoverlay.cgi",
        "data": "",
        "options": "",
        "filename": "",
        "x": 1150,
        "y": 2380,
        "wires": [
            [
                "6b41e351c450af6f"
            ]
        ]
    },
    {
        "id": "678fe5842926a171",
        "type": "comment",
        "z": "6d42dc07fde7a1cc",
        "g": "842b50752690e040",
        "name": "Set Text Overlays",
        "info": "",
        "x": 320,
        "y": 2280,
        "wires": []
    },
    {
        "id": "6af33764ac20ced9",
        "type": "delay",
        "z": "6d42dc07fde7a1cc",
        "g": "842b50752690e040",
        "name": "",
        "pauseType": "delay",
        "timeout": "250",
        "timeoutUnits": "milliseconds",
        "rate": "1",
        "nbRateUnits": "1",
        "rateUnits": "second",
        "randomFirst": "1",
        "randomLast": "5",
        "randomUnits": "seconds",
        "drop": false,
        "allowrate": false,
        "outputs": 1,
        "x": 730,
        "y": 2340,
        "wires": [
            [
                "969a68618c44d383",
                "401db2b155a6b1d3"
            ]
        ]
    },
    {
        "id": "6b41e351c450af6f",
        "type": "delay",
        "z": "6d42dc07fde7a1cc",
        "g": "842b50752690e040",
        "name": "",
        "pauseType": "delay",
        "timeout": "250",
        "timeoutUnits": "milliseconds",
        "rate": "1",
        "nbRateUnits": "1",
        "rateUnits": "second",
        "randomFirst": "1",
        "randomLast": "5",
        "randomUnits": "seconds",
        "drop": false,
        "allowrate": false,
        "outputs": 1,
        "x": 1350,
        "y": 2380,
        "wires": [
            [
                "99b3908b2a9bf0d7",
                "a275a52bb44e23b8"
            ]
        ]
    },
    {
        "id": "1cfb4860b2074b07",
        "type": "function",
        "z": "6d42dc07fde7a1cc",
        "g": "842b50752690e040",
        "name": "Set Overlay 1",
        "func": "if (!msg.config.hasOwnProperty(\"textOverlays\") || !msg.config.textOverlays || !Array.isArray(msg.config.textOverlays) || msg.config.textOverlays.length < 1 ) {\n    node.send([null,msg]);\n    return;\n}\n\nmsg.payload = {\n    apiVersion: \"1.6\",\n    method: \"addText\",\n    params: {\n        text: msg.config.textOverlays[0].text || \"%F %X\",\n        camera: 1,\n        position: msg.config.textOverlays[0].position || \"topLeft\",\n        reference: \"channel\",\n        textColor: msg.config.textOverlays[0].textColor || \"white\",\n        textBGColor: msg.config.textOverlays[0].textBGColor || \"black\",\n        textOLColor: \"transparent\",\n        fontSize: msg.config.textOverlays[0].fontSize || 48\n    }\n}\nreturn msg; \n",
        "outputs": 2,
        "timeout": "",
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "libs": [],
        "x": 320,
        "y": 2340,
        "wires": [
            [
                "84b351949961649a"
            ],
            [
                "123cf7f0675c8bc7"
            ]
        ]
    },
    {
        "id": "969a68618c44d383",
        "type": "function",
        "z": "6d42dc07fde7a1cc",
        "g": "842b50752690e040",
        "name": "Set Overlay 2",
        "func": "if (!msg.config.hasOwnProperty(\"textOverlays\") || !msg.config.textOverlays || !Array.isArray(msg.config.textOverlays) || msg.config.textOverlays.length < 2 ) {\n    node.send([null,msg]);\n    return;\n}\n\nmsg.payload = {\n    apiVersion: \"1.6\",\n    method: \"addText\",\n    params: {\n        text: msg.config.textOverlays[1].text || \"%F %X\",\n        camera: 1,\n        position: msg.config.textOverlays[1].position || \"topLeft\",\n        reference: \"channel\",\n        textColor: msg.config.textOverlays[1].textColor || \"white\",\n        textBGColor: msg.config.textOverlays[1].textBGColor || \"black\",\n        textOLColor: \"transparent\",\n        fontSize: msg.config.textOverlays[1].fontSize || 48\n    }\n}\nreturn msg; \n",
        "outputs": 2,
        "timeout": "",
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "libs": [],
        "x": 920,
        "y": 2380,
        "wires": [
            [
                "74ba3b3d07c0e06f"
            ],
            [
                "9e499843723085ec"
            ]
        ]
    },
    {
        "id": "401db2b155a6b1d3",
        "type": "function",
        "z": "6d42dc07fde7a1cc",
        "g": "842b50752690e040",
        "name": "Status",
        "func": "msg.payload = msg.device.serial + \": Overlay 1 set\";\nreturn msg;",
        "outputs": 1,
        "timeout": 0,
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "libs": [],
        "x": 1530,
        "y": 2340,
        "wires": [
            [
                "917dd678d389432a"
            ]
        ]
    },
    {
        "id": "a275a52bb44e23b8",
        "type": "function",
        "z": "6d42dc07fde7a1cc",
        "g": "842b50752690e040",
        "name": "Status",
        "func": "msg.payload = msg.device.serial + \": Overlay 2 set\";\nreturn msg;",
        "outputs": 1,
        "timeout": 0,
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "libs": [],
        "x": 1530,
        "y": 2380,
        "wires": [
            [
                "917dd678d389432a"
            ]
        ]
    },
    {
        "id": "7424979d2e1e6796",
        "type": "function",
        "z": "6d42dc07fde7a1cc",
        "g": "4f509f8db6a94932",
        "name": "List Overlay",
        "func": "if (!msg.config.hasOwnProperty(\"textOverlays\") || !Array.isArray(msg.config.textOverlays) || msg.config.textOverlays.length === 0) {\n    node.send([null,msg]);\n    return;\n}\n\nmsg.payload = {\n    \"apiVersion\": \"1.6\",\n    \"method\": \"list\",\n    \"params\": {}\n}\nreturn msg;",
        "outputs": 2,
        "timeout": "",
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "libs": [],
        "x": 310,
        "y": 2140,
        "wires": [
            [
                "757f081471a8193c"
            ],
            [
                "bbd2e5efe0c51bad"
            ]
        ]
    },
    {
        "id": "448cd799474252dd",
        "type": "function",
        "z": "6d42dc07fde7a1cc",
        "g": "4f509f8db6a94932",
        "name": "Check error",
        "func": "if( msg.payload.hasOwnProperty(\"error\") ) {\n    node.error( msg.payload.error.message, msg);\n    return;\n}\nreturn msg;",
        "outputs": 1,
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "libs": [],
        "x": 710,
        "y": 2140,
        "wires": [
            [
                "aea92d5d322e3878"
            ]
        ]
    },
    {
        "id": "757f081471a8193c",
        "type": "Axis device",
        "z": "6d42dc07fde7a1cc",
        "g": "4f509f8db6a94932",
        "name": "dynamicoverlay.cgi",
        "preset": "1af13a1540441ff9",
        "action": "HTTP Post",
        "cgi": "/axis-cgi/dynamicoverlay/dynamicoverlay.cgi",
        "data": "",
        "options": "",
        "filename": "",
        "x": 510,
        "y": 2140,
        "wires": [
            [
                "448cd799474252dd"
            ]
        ]
    },
    {
        "id": "aea92d5d322e3878",
        "type": "change",
        "z": "6d42dc07fde7a1cc",
        "g": "4f509f8db6a94932",
        "name": "textOverlays",
        "rules": [
            {
                "t": "set",
                "p": "imageOverlays",
                "pt": "msg",
                "to": "payload.imageOverlays",
                "tot": "msg"
            },
            {
                "t": "set",
                "p": "payload",
                "pt": "msg",
                "to": "payload.data.textOverlays",
                "tot": "msg"
            }
        ],
        "action": "",
        "property": "",
        "from": "",
        "to": "",
        "reg": false,
        "x": 890,
        "y": 2140,
        "wires": [
            [
                "ad2de24dd4a408be"
            ]
        ]
    },
    {
        "id": "a505b906df13a8da",
        "type": "split",
        "z": "6d42dc07fde7a1cc",
        "g": "4f509f8db6a94932",
        "name": "",
        "splt": "\\n",
        "spltType": "str",
        "arraySplt": 1,
        "arraySpltType": "len",
        "stream": false,
        "addname": "",
        "x": 1250,
        "y": 2140,
        "wires": [
            [
                "a4d219723d6ff384"
            ]
        ]
    },
    {
        "id": "a4d219723d6ff384",
        "type": "function",
        "z": "6d42dc07fde7a1cc",
        "g": "4f509f8db6a94932",
        "name": "Remove",
        "func": "msg.payload = {\n    \"apiVersion\": \"1.6\",\n    \"method\": \"remove\",\n    \"params\": {\n         \"identity\": msg.payload.identity \n    }\n}\nreturn msg;",
        "outputs": 1,
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "libs": [],
        "x": 1400,
        "y": 2140,
        "wires": [
            [
                "46015b16eb6cc572"
            ]
        ]
    },
    {
        "id": "46015b16eb6cc572",
        "type": "Axis device",
        "z": "6d42dc07fde7a1cc",
        "g": "4f509f8db6a94932",
        "name": "dynamicoverlay.cgi",
        "preset": "1af13a1540441ff9",
        "action": "HTTP Post",
        "cgi": "/axis-cgi/dynamicoverlay/dynamicoverlay.cgi",
        "data": "",
        "options": "",
        "filename": "",
        "x": 1590,
        "y": 2140,
        "wires": [
            [
                "e4a2ee146a8a7fbb"
            ]
        ]
    },
    {
        "id": "e4a2ee146a8a7fbb",
        "type": "join",
        "z": "6d42dc07fde7a1cc",
        "g": "4f509f8db6a94932",
        "name": "",
        "mode": "auto",
        "build": "object",
        "property": "payload",
        "propertyType": "msg",
        "key": "topic",
        "joiner": "\\n",
        "joinerType": "str",
        "accumulate": "false",
        "timeout": "",
        "count": "",
        "reduceRight": false,
        "x": 1770,
        "y": 2140,
        "wires": [
            [
                "23180ff1379aafe9"
            ]
        ]
    },
    {
        "id": "ad2de24dd4a408be",
        "type": "switch",
        "z": "6d42dc07fde7a1cc",
        "g": "4f509f8db6a94932",
        "name": "Found previous",
        "property": "payload.length",
        "propertyType": "msg",
        "rules": [
            {
                "t": "gt",
                "v": "0",
                "vt": "num"
            },
            {
                "t": "else"
            }
        ],
        "checkall": "true",
        "repair": false,
        "outputs": 2,
        "x": 1080,
        "y": 2140,
        "wires": [
            [
                "a505b906df13a8da"
            ],
            [
                "393cd272a763a4c7"
            ]
        ]
    },
    {
        "id": "ff152ffe11d2f159",
        "type": "comment",
        "z": "6d42dc07fde7a1cc",
        "g": "4f509f8db6a94932",
        "name": "Remove previous overlays",
        "info": "",
        "x": 350,
        "y": 2080,
        "wires": []
    },
    {
        "id": "23180ff1379aafe9",
        "type": "delay",
        "z": "6d42dc07fde7a1cc",
        "g": "4f509f8db6a94932",
        "name": "",
        "pauseType": "delay",
        "timeout": "250",
        "timeoutUnits": "milliseconds",
        "rate": "1",
        "nbRateUnits": "1",
        "rateUnits": "second",
        "randomFirst": "1",
        "randomLast": "5",
        "randomUnits": "seconds",
        "drop": false,
        "allowrate": false,
        "outputs": 1,
        "x": 1930,
        "y": 2140,
        "wires": [
            [
                "42607c5cc0f0e98e"
            ]
        ]
    },
    {
        "id": "27e54a433aa80648",
        "type": "comment",
        "z": "6d42dc07fde7a1cc",
        "g": "a8977cc109a268cc",
        "name": "Set Image Overlay",
        "info": "",
        "x": 330,
        "y": 2520,
        "wires": []
    },
    {
        "id": "d43ee2366bbb850d",
        "type": "function",
        "z": "6d42dc07fde7a1cc",
        "g": "a8977cc109a268cc",
        "name": "Upload Overlay",
        "func": "if (!msg.config.hasOwnProperty(\"imageOverlay\") || !msg.config.imageOverlay || typeof msg.config.imageOverlay !== \"object\") {\n    node.send([null, msg]);\n    return;\n}\n\n\nif( !msg.config.imageOverlay.hasOwnProperty(\"filepath\") || msg.config.imageOverlay.filepath.length === 0 ) {\n    node.send([null, msg]);\n    return;\n}\n\nmsg.filename = msg.config.imageOverlay.filepath;\n\nmsg.payload = {\n    scale: msg.config.imageOverlay.scale || true\n//    alpha: msg.config.imageOverlay.alpha || 0\n}\nnode.send([msg,null]);\n",
        "outputs": 2,
        "timeout": "",
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "libs": [],
        "x": 320,
        "y": 2580,
        "wires": [
            [
                "cbeb9b255f869442"
            ],
            [
                "db5f954c67eecf68"
            ]
        ]
    },
    {
        "id": "cbeb9b255f869442",
        "type": "Axis camera",
        "z": "6d42dc07fde7a1cc",
        "g": "a8977cc109a268cc",
        "name": "",
        "preset": "1af13a1540441ff9",
        "action": "Upload overlay",
        "resolution": "640x360",
        "output": "Base64",
        "filename": "",
        "options": "",
        "data": "",
        "x": 540,
        "y": 2580,
        "wires": [
            [
                "5a2cd68315838f2a"
            ]
        ]
    },
    {
        "id": "5a2cd68315838f2a",
        "type": "function",
        "z": "6d42dc07fde7a1cc",
        "g": "a8977cc109a268cc",
        "name": "Set Overlay",
        "func": "var paths = msg.config.imageOverlay.filepath.split('/');\nvar name = paths[paths.length-1].split('.')[0]\n\nmsg.payload = {\n    apiVersion:\"1.6\",\n    method:\"addImage\",\n    params:{\n        camera:1,\n        overlayPath: \"/etc/overlays/\" + name + \".ovl\",\n        position: msg.config.imageOverlay.position || \"bottomRight\"\n    }\n}\n\nreturn msg;",
        "outputs": 1,
        "timeout": "",
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "libs": [],
        "x": 830,
        "y": 2580,
        "wires": [
            [
                "7079f502804805af"
            ]
        ]
    },
    {
        "id": "7079f502804805af",
        "type": "Axis device",
        "z": "6d42dc07fde7a1cc",
        "g": "a8977cc109a268cc",
        "name": "",
        "preset": "1af13a1540441ff9",
        "action": "HTTP Post",
        "cgi": "/axis-cgi/dynamicoverlay/dynamicoverlay.cgi",
        "data": "",
        "options": "",
        "filename": "",
        "x": 1010,
        "y": 2580,
        "wires": [
            [
                "a63526db4676dc3e"
            ]
        ]
    },
    {
        "id": "218fa24505b57ccb",
        "type": "catch",
        "z": "6d42dc07fde7a1cc",
        "g": "a8977cc109a268cc",
        "name": "",
        "scope": [
            "cbeb9b255f869442"
        ],
        "uncaught": false,
        "x": 570,
        "y": 2620,
        "wires": [
            [
                "5a2cd68315838f2a"
            ]
        ]
    },
    {
        "id": "a63526db4676dc3e",
        "type": "function",
        "z": "6d42dc07fde7a1cc",
        "g": "a8977cc109a268cc",
        "name": "Status",
        "func": "msg.payload = msg.device.serial + \": Image Overlay set\";\nreturn msg;",
        "outputs": 1,
        "timeout": 0,
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "libs": [],
        "x": 1190,
        "y": 2580,
        "wires": [
            [
                "348c71bfd1abaa3a",
                "69915560eca0c310"
            ]
        ]
    },
    {
        "id": "c09f158dcbafa87f",
        "type": "Axis device",
        "z": "6d42dc07fde7a1cc",
        "g": "21a9057e4e10ebb9",
        "name": "",
        "preset": "1af13a1540441ff9",
        "action": "Set name",
        "cgi": "",
        "data": "",
        "options": "",
        "filename": "",
        "x": 480,
        "y": 900,
        "wires": [
            [
                "70ae9792b05ab9f7",
                "cbd106422127709a"
            ]
        ]
    },
    {
        "id": "42c047372c348694",
        "type": "comment",
        "z": "6d42dc07fde7a1cc",
        "g": "21a9057e4e10ebb9",
        "name": "Set name for host, PnP and Bonjour",
        "info": "",
        "x": 380,
        "y": 840,
        "wires": []
    },
    {
        "id": "cbd106422127709a",
        "type": "function",
        "z": "6d42dc07fde7a1cc",
        "g": "21a9057e4e10ebb9",
        "name": "Status",
        "func": "msg.payload = msg.device.serial + \": Name set to \" + msg.properties.name;\nreturn msg;",
        "outputs": 1,
        "timeout": 0,
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "libs": [],
        "x": 650,
        "y": 900,
        "wires": [
            [
                "fdbaa4470bce1194"
            ]
        ]
    },
    {
        "id": "e1473b59ba10923b",
        "type": "Axis device",
        "z": "6d42dc07fde7a1cc",
        "g": "276a8159eef7e288",
        "name": "",
        "preset": "1af13a1540441ff9",
        "action": "Set time",
        "cgi": "",
        "data": "",
        "options": "",
        "filename": "",
        "x": 520,
        "y": 1100,
        "wires": [
            [
                "abf6cb640caf1531",
                "1db6ba083ea7e2b2"
            ]
        ]
    },
    {
        "id": "d15a293a5a6ad1d9",
        "type": "function",
        "z": "6d42dc07fde7a1cc",
        "g": "276a8159eef7e288",
        "name": "Timezone & NTP",
        "func": "if( !msg.config.hasOwnProperty(\"time\") || !msg.config.time || typeof msg.config.time !== \"object\") {\n  node.send([null,msg]);\n  return;\n}\n\nmsg.payload = msg.config.time\nnode.send([msg,null]);\n",
        "outputs": 2,
        "timeout": "",
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "libs": [],
        "x": 330,
        "y": 1100,
        "wires": [
            [
                "e1473b59ba10923b"
            ],
            [
                "537bdcd6ac2ad7c9"
            ]
        ]
    },
    {
        "id": "aa34e840a99fe97b",
        "type": "comment",
        "z": "6d42dc07fde7a1cc",
        "g": "276a8159eef7e288",
        "name": "Timezone                                            ",
        "info": "",
        "x": 300,
        "y": 1040,
        "wires": []
    },
    {
        "id": "1db6ba083ea7e2b2",
        "type": "function",
        "z": "6d42dc07fde7a1cc",
        "g": "276a8159eef7e288",
        "name": "Status",
        "func": "msg.payload = msg.device.serial + \": Time set\";\nreturn msg;",
        "outputs": 1,
        "timeout": 0,
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "libs": [],
        "x": 690,
        "y": 1100,
        "wires": [
            [
                "440885d85801af50"
            ]
        ]
    },
    {
        "id": "0d0515f512ae48b7",
        "type": "function",
        "z": "6d42dc07fde7a1cc",
        "g": "5d3e30c1d3d94d93",
        "name": "Settings",
        "func": "if( !msg.config.hasOwnProperty(\"zipstream\") || !msg.config.zipstream || typeof msg.config.zipstream !== \"object\" || !msg.config.zipstream.hasOwnProperty(\"strength\")) {\n    node.send([null,msg]);\n    return;\n}\n\nmsg.cgi = \"/axis-cgi/zipstream/setstrength.cgi?schemaversion=1\";\nmsg.cgi += \"&strength=\" + msg.config.zipstream.strength;\n//msg.cgi += \"&fpsmode=fixed\"\nmsg.cgi += \"&camera=1\";\nnode.send([msg,null]);",
        "outputs": 2,
        "timeout": 0,
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "libs": [],
        "x": 300,
        "y": 1300,
        "wires": [
            [
                "3f75c9f2703f3950"
            ],
            [
                "087190aaf5296d26"
            ]
        ]
    },
    {
        "id": "3f75c9f2703f3950",
        "type": "Axis device",
        "z": "6d42dc07fde7a1cc",
        "g": "5d3e30c1d3d94d93",
        "name": "/axis-cgi/zipstream/setstrength.cgi",
        "preset": "1af13a1540441ff9",
        "action": "HTTP Get",
        "cgi": "",
        "data": "",
        "options": "",
        "filename": "",
        "x": 540,
        "y": 1300,
        "wires": [
            [
                "d9ea0d820ccd9ef6",
                "dbbfcd107e4df916"
            ]
        ]
    },
    {
        "id": "6327790c424da490",
        "type": "comment",
        "z": "6d42dc07fde7a1cc",
        "g": "5d3e30c1d3d94d93",
        "name": "Zip Stream",
        "info": "",
        "x": 300,
        "y": 1240,
        "wires": []
    },
    {
        "id": "d9ea0d820ccd9ef6",
        "type": "function",
        "z": "6d42dc07fde7a1cc",
        "g": "5d3e30c1d3d94d93",
        "name": "Min FPS",
        "func": "if (!msg.config.hasOwnProperty(\"zipstream\") || typeof msg.config.zipstream !== \"object\" || !msg.config.zipstream.hasOwnProperty(\"minfps\")) {\n    node.send([null, msg]);\n    return;\n}\n\nnode.send([msg,null]);\n",
        "outputs": 2,
        "timeout": 0,
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "libs": [],
        "x": 780,
        "y": 1360,
        "wires": [
            [
                "7759867b2f6e90f7"
            ],
            [
                "35496865191becf9"
            ]
        ]
    },
    {
        "id": "76a5cd067fe025ce",
        "type": "Axis device",
        "z": "6d42dc07fde7a1cc",
        "g": "5d3e30c1d3d94d93",
        "name": "/axis-cgi/zipstream/setminfps.cgi",
        "preset": "1af13a1540441ff9",
        "action": "HTTP Get",
        "cgi": "",
        "data": "",
        "options": "",
        "filename": "",
        "x": 1530,
        "y": 1360,
        "wires": [
            [
                "d6c058f41bfeb7f1",
                "30d61153c703b760"
            ]
        ]
    },
    {
        "id": "7759867b2f6e90f7",
        "type": "Axis device",
        "z": "6d42dc07fde7a1cc",
        "g": "5d3e30c1d3d94d93",
        "name": "/axis-cgi/zipstream/setfpsmode.cgi",
        "preset": "1af13a1540441ff9",
        "action": "HTTP Get",
        "cgi": "/axis-cgi/zipstream/setfpsmode.cgi?schemaversion=1&fpsmode=dynamic&camera=1",
        "data": "",
        "options": "",
        "filename": "",
        "x": 1040,
        "y": 1360,
        "wires": [
            [
                "a8e494b1d7b8eb22"
            ]
        ]
    },
    {
        "id": "a8e494b1d7b8eb22",
        "type": "function",
        "z": "6d42dc07fde7a1cc",
        "g": "5d3e30c1d3d94d93",
        "name": "minfps",
        "func": "msg.cgi = \"/axis-cgi/zipstream/setminfps.cgi?schemaversion=1\";\nmsg.cgi += \"&minfps=\" + msg.config.zipstream.minfps;\nmsg.cgi += \"&camera=1\";\nreturn msg;",
        "outputs": 1,
        "timeout": 0,
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "libs": [],
        "x": 1270,
        "y": 1360,
        "wires": [
            [
                "76a5cd067fe025ce"
            ]
        ]
    },
    {
        "id": "dbbfcd107e4df916",
        "type": "function",
        "z": "6d42dc07fde7a1cc",
        "g": "5d3e30c1d3d94d93",
        "name": "Status",
        "func": "msg.payload = msg.device.serial + \": Zipstream strength set to \" + msg.config.zipstream.strength;\nreturn msg;",
        "outputs": 1,
        "timeout": 0,
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "libs": [],
        "x": 1770,
        "y": 1300,
        "wires": [
            [
                "c886e6027616c1f5"
            ]
        ]
    },
    {
        "id": "30d61153c703b760",
        "type": "function",
        "z": "6d42dc07fde7a1cc",
        "g": "5d3e30c1d3d94d93",
        "name": "Status",
        "func": "msg.payload = msg.device.serial + \": Zipstream min. fps set to \" + msg.config.zipstream.minfps;\nreturn msg;",
        "outputs": 1,
        "timeout": 0,
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "libs": [],
        "x": 1770,
        "y": 1360,
        "wires": [
            [
                "c886e6027616c1f5"
            ]
        ]
    },
    {
        "id": "975527adea1923dd",
        "type": "function",
        "z": "6d42dc07fde7a1cc",
        "g": "d9ae516f30811818",
        "name": "2:nd Account",
        "func": "if( msg.config.accounts.length < 2 ) {\n    node.send([null,msg]);\n    return;\n}\n\nif( !msg.config.accounts[1].hasOwnProperty(\"name\") || !msg.config.accounts[1].name || msg.config.accounts[1].name.length < 2 ) {\n    node.send([null,msg]);\n    return;\n}\n\nif( !msg.config.accounts[1].hasOwnProperty(\"password\") || !msg.config.accounts[1].password || msg.config.accounts[1].password.length < 2 ) {\n    node.send([null,msg]);\n    return;\n}\n\n\nmsg.payload = {\n    name: msg.config.accounts[1].name,\n    password: msg.config.accounts[1].password,\n    privileges: msg.config.accounts[1].privileges\n}\nnode.send([msg,null]);",
        "outputs": 2,
        "timeout": "",
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "libs": [],
        "x": 330,
        "y": 660,
        "wires": [
            [
                "3f9c92629957da85"
            ],
            [
                "49b57b5fa5210f54"
            ]
        ]
    },
    {
        "id": "3f9c92629957da85",
        "type": "Axis Security",
        "z": "6d42dc07fde7a1cc",
        "g": "d9ae516f30811818",
        "name": "",
        "preset": "1af13a1540441ff9",
        "address": "",
        "action": "Set account",
        "data": "",
        "options": "",
        "x": 550,
        "y": 660,
        "wires": [
            [
                "3489dbfc560ca8fa",
                "d1231be23aa43114"
            ]
        ]
    },
    {
        "id": "3489dbfc560ca8fa",
        "type": "function",
        "z": "6d42dc07fde7a1cc",
        "g": "d9ae516f30811818",
        "name": "3:nd Account",
        "func": "if( msg.config.accounts.length < 3 ) {\n    node.send([null,msg]);\n    return;\n}\n\nif( !msg.config.accounts[2].hasOwnProperty(\"name\") || !msg.config.accounts[2].name || msg.config.accounts[2].name.length < 2 ) {\n    node.send([null,msg]);\n    return;\n}\n\nif( !msg.config.accounts[2].hasOwnProperty(\"password\") || !msg.config.accounts[2].password || msg.config.accounts[2].password.length < 2 ) {\n    node.send([null,msg]);\n    return;\n}\n\nmsg.payload = {\n    name: msg.config.accounts[2].name,\n    password: msg.config.accounts[2].password,\n    privileges: msg.config.accounts[2].privileges\n}\nnode.send([msg,null]);",
        "outputs": 2,
        "timeout": "",
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "libs": [],
        "x": 710,
        "y": 700,
        "wires": [
            [
                "c08945b0bbb0537e"
            ],
            [
                "aca60e0a16550cd4"
            ]
        ]
    },
    {
        "id": "c08945b0bbb0537e",
        "type": "Axis Security",
        "z": "6d42dc07fde7a1cc",
        "g": "d9ae516f30811818",
        "name": "",
        "preset": "1af13a1540441ff9",
        "address": "",
        "action": "Set account",
        "data": "",
        "options": "",
        "x": 910,
        "y": 700,
        "wires": [
            [
                "02307f52bf23c820",
                "79959fb142caa654"
            ]
        ]
    },
    {
        "id": "8f16e423b251d2ee",
        "type": "comment",
        "z": "6d42dc07fde7a1cc",
        "g": "d9ae516f30811818",
        "name": "Add additional accounts",
        "info": "",
        "x": 340,
        "y": 600,
        "wires": []
    },
    {
        "id": "79959fb142caa654",
        "type": "function",
        "z": "6d42dc07fde7a1cc",
        "g": "d9ae516f30811818",
        "name": "Status",
        "func": "msg.payload = msg.device.serial + \": Account \" + msg.config.accounts[1].name + \" set\";\nreturn msg;",
        "outputs": 1,
        "timeout": 0,
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "libs": [],
        "x": 1090,
        "y": 700,
        "wires": [
            [
                "50c4e741fc166d83"
            ]
        ]
    },
    {
        "id": "867cb3ed82ecd9fe",
        "type": "link in",
        "z": "6d42dc07fde7a1cc",
        "name": "Add accounts",
        "links": [
            "118eccf99d66c609"
        ],
        "x": 155,
        "y": 660,
        "wires": [
            [
                "975527adea1923dd"
            ]
        ]
    },
    {
        "id": "70628e9dc7527cfa",
        "type": "link out",
        "z": "6d42dc07fde7a1cc",
        "name": "link out 76",
        "mode": "link",
        "links": [
            "73cebf468699bff1"
        ],
        "x": 1235,
        "y": 740,
        "wires": []
    },
    {
        "id": "d1231be23aa43114",
        "type": "function",
        "z": "6d42dc07fde7a1cc",
        "name": "Status",
        "func": "msg.payload = msg.device.serial + \": Account \" + msg.config.accounts[0].name + \" set\";\nreturn msg;",
        "outputs": 1,
        "timeout": 0,
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "libs": [],
        "x": 720,
        "y": 660,
        "wires": [
            [
                "50c4e741fc166d83"
            ]
        ]
    },
    {
        "id": "963e6715cfdcb9ec",
        "type": "link out",
        "z": "6d42dc07fde7a1cc",
        "name": "link out 92",
        "mode": "link",
        "links": [
            "fd813139961b13e6"
        ],
        "x": 1935,
        "y": 1300,
        "wires": []
    },
    {
        "id": "440885d85801af50",
        "type": "link out",
        "z": "6d42dc07fde7a1cc",
        "name": "link out 91",
        "mode": "link",
        "links": [
            "fd813139961b13e6"
        ],
        "x": 805,
        "y": 1100,
        "wires": []
    },
    {
        "id": "fdbaa4470bce1194",
        "type": "link out",
        "z": "6d42dc07fde7a1cc",
        "name": "link out 90",
        "mode": "link",
        "links": [
            "fd813139961b13e6"
        ],
        "x": 785,
        "y": 900,
        "wires": []
    },
    {
        "id": "ed774fe42cb3c12a",
        "type": "link out",
        "z": "6d42dc07fde7a1cc",
        "name": "link out 89",
        "mode": "link",
        "links": [
            "fd813139961b13e6"
        ],
        "x": 1235,
        "y": 660,
        "wires": []
    },
    {
        "id": "fd813139961b13e6",
        "type": "link in",
        "z": "6d42dc07fde7a1cc",
        "name": "Status",
        "links": [
            "0f2c6175d944df9b",
            "348c71bfd1abaa3a",
            "3af3e207e5bfeda5",
            "440885d85801af50",
            "72f8b6bf63c1f3ba",
            "7cd69a23f761639c",
            "881a3255ec577797",
            "95d88d6640e961f1",
            "963e6715cfdcb9ec",
            "a99c0c5e5703b340",
            "e8c80ece8355b37d",
            "ed774fe42cb3c12a",
            "f24dfada3b507dfc",
            "fdbaa4470bce1194",
            "fe4b1a12295be390"
        ],
        "x": 1125,
        "y": 60,
        "wires": [
            []
        ]
    },
    {
        "id": "6d500eec20e0cb44",
        "type": "comment",
        "z": "6d42dc07fde7a1cc",
        "name": "Status",
        "info": "",
        "x": 1230,
        "y": 60,
        "wires": []
    },
    {
        "id": "139603f1191905d6",
        "type": "join",
        "z": "6d42dc07fde7a1cc",
        "g": "7f637aa563c1770a",
        "name": "",
        "mode": "auto",
        "build": "object",
        "property": "payload",
        "propertyType": "msg",
        "key": "topic",
        "joiner": "\\n",
        "joinerType": "str",
        "accumulate": true,
        "timeout": "",
        "count": "",
        "reduceRight": false,
        "reduceExp": "",
        "reduceInit": "",
        "reduceInitType": "",
        "reduceFixup": "",
        "x": 1420,
        "y": 3360,
        "wires": [
            [
                "a6d5343b7d107066"
            ]
        ]
    },
    {
        "id": "3776a78bd7fa1121",
        "type": "catch",
        "z": "6d42dc07fde7a1cc",
        "name": "",
        "scope": null,
        "uncaught": true,
        "x": 1260,
        "y": 220,
        "wires": [
            []
        ]
    },
    {
        "id": "fa8593c2e85edc94",
        "type": "template",
        "z": "6d42dc07fde7a1cc",
        "g": "7698c4cc4df6bf4f",
        "name": "setIPv4AddressConfiguration",
        "field": "payload",
        "fieldType": "msg",
        "format": "handlebars",
        "syntax": "mustache",
        "template": "{\n  \"apiVersion\": \"1.0\",\n  \"context\": \"Nodered\",\n  \"method\": \"setIPv4AddressConfiguration\",\n  \"params\": {\n    \"deviceName\": \"eth0\",\n    \"configurationMode\": \"static\",\n    \"staticDefaultRouter\": \"{{payload.router}}\",\n    \"staticAddressConfigurations\": [\n      {\n        \"address\": \"{{payload.address}}\",\n        \"prefixLength\": 24\n      }\n    ]\n  }\n}",
        "output": "json",
        "x": 620,
        "y": 4320,
        "wires": [
            [
                "8a465ea38f5bb8f4"
            ]
        ]
    },
    {
        "id": "8a465ea38f5bb8f4",
        "type": "Axis device",
        "z": "6d42dc07fde7a1cc",
        "g": "7698c4cc4df6bf4f",
        "name": "/axis-cgi/network_settings.cgi",
        "preset": "1af13a1540441ff9",
        "action": "HTTP Post",
        "cgi": "/axis-cgi/network_settings.cgi",
        "data": "",
        "options": "",
        "filename": "",
        "x": 920,
        "y": 4320,
        "wires": [
            [
                "56290d8aa7263bf2",
                "7a5b539bca30018b"
            ]
        ]
    },
    {
        "id": "56290d8aa7263bf2",
        "type": "function",
        "z": "6d42dc07fde7a1cc",
        "g": "7698c4cc4df6bf4f",
        "name": "Catch error",
        "func": "if( msg.payload.hasOwnProperty(\"error\"))\n    node.error(msg.payload.error.message,msg);\nreturn msg;",
        "outputs": 1,
        "timeout": 0,
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "libs": [],
        "x": 1170,
        "y": 4320,
        "wires": [
            [
                "02910d22ae4c8469"
            ]
        ]
    },
    {
        "id": "6030aa150ff838f3",
        "type": "link out",
        "z": "6d42dc07fde7a1cc",
        "name": "link out 108",
        "mode": "link",
        "links": [
            "3f61b9b71ea88809"
        ],
        "x": 1745,
        "y": 3400,
        "wires": []
    },
    {
        "id": "ed02a84657b2c2ac",
        "type": "function",
        "z": "6d42dc07fde7a1cc",
        "g": "21a9057e4e10ebb9",
        "name": "Name",
        "func": "if( !msg.hasOwnProperty(\"properties\") || !msg.properties  ) {\n    node.send([null,msg]);\n    return;\n}\n\nif( !msg.properties.hasOwnProperty(\"name\") || !msg.properties.name || typeof msg.properties.name !== \"string\" || msg.properties.name.length < 2 ) {\n    node.send([null,msg]);\n    return;\n}\n\nmsg.payload = msg.properties.name;\nnode.send([msg],null);\n",
        "outputs": 2,
        "timeout": 0,
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "libs": [],
        "x": 290,
        "y": 900,
        "wires": [
            [
                "c09f158dcbafa87f"
            ],
            [
                "117a2205b1cf652c"
            ]
        ]
    },
    {
        "id": "74d3eefd8a0c1999",
        "type": "function",
        "z": "6d42dc07fde7a1cc",
        "g": "7698c4cc4df6bf4f",
        "name": "Static Address",
        "func": "if( !msg.hasOwnProperty(\"properties\") || !msg.properties  ) {\n    node.send([null,msg]);\n    return;\n}\n\n\nif( !msg.properties.hasOwnProperty(\"static\") || !msg.properties.static || typeof msg.properties.static !== \"object\" ) {\n    node.send([null,msg]);\n    return;\n}\n\n\nif( !msg.properties.static.hasOwnProperty(\"address\") || !msg.properties.static.address || typeof msg.properties.static.address !== \"string\" || msg.properties.static.address < 3 ) {\n    node.error(\"Missing static name\",msg);\n    node.send([null,msg]);\n    return;\n}\n\nif( !msg.properties.static.hasOwnProperty(\"router\") || !msg.properties.static.router || typeof msg.properties.static.router !== \"string\" || msg.properties.static.router < 3 ) {\n    node.error(\"Missing static router\",msg);\n    node.send([null,msg]);\n    return;\n}\n\n\nmsg.payload = {\n    address: msg.properties.static.address,\n    router:  msg.properties.static.router\n}\n\nnode.send([msg],null);\n",
        "outputs": 2,
        "timeout": 0,
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "libs": [],
        "x": 340,
        "y": 4320,
        "wires": [
            [
                "fa8593c2e85edc94"
            ],
            [
                "31528cf617c5f940"
            ]
        ]
    },
    {
        "id": "02910d22ae4c8469",
        "type": "function",
        "z": "6d42dc07fde7a1cc",
        "g": "7698c4cc4df6bf4f",
        "name": "Status",
        "func": "msg.payload = msg.device.serial + \": Static address set to \" + msg.properties.static.address;\nreturn msg;",
        "outputs": 1,
        "timeout": 0,
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "libs": [],
        "x": 1330,
        "y": 4320,
        "wires": [
            [
                "a99c0c5e5703b340"
            ]
        ]
    },
    {
        "id": "a99c0c5e5703b340",
        "type": "link out",
        "z": "6d42dc07fde7a1cc",
        "name": "link out 109",
        "mode": "link",
        "links": [
            "fd813139961b13e6"
        ],
        "x": 1455,
        "y": 4320,
        "wires": []
    },
    {
        "id": "4409070b748256e5",
        "type": "link in",
        "z": "6d42dc07fde7a1cc",
        "name": "link in 32",
        "links": [
            "d8c5893e5cb8553d"
        ],
        "x": 155,
        "y": 4320,
        "wires": [
            [
                "74d3eefd8a0c1999"
            ]
        ]
    },
    {
        "id": "845b3e302add8ec2",
        "type": "link in",
        "z": "6d42dc07fde7a1cc",
        "name": "Complete",
        "links": [
            "287cb6ace8dd5738"
        ],
        "x": 1125,
        "y": 120,
        "wires": [
            [
                "abb41098846a6d4f"
            ]
        ]
    },
    {
        "id": "287cb6ace8dd5738",
        "type": "link out",
        "z": "6d42dc07fde7a1cc",
        "name": "link out 110",
        "mode": "link",
        "links": [
            "845b3e302add8ec2"
        ],
        "x": 1455,
        "y": 4380,
        "wires": []
    },
    {
        "id": "5ab33709fcbfd2cb",
        "type": "comment",
        "z": "6d42dc07fde7a1cc",
        "g": "7698c4cc4df6bf4f",
        "name": "Static IPv4",
        "info": "",
        "x": 300,
        "y": 4260,
        "wires": []
    },
    {
        "id": "f44d7f0c8df08e2d",
        "type": "function",
        "z": "6d42dc07fde7a1cc",
        "g": "97cd457f96f38f70",
        "name": "user",
        "func": "if( !msg.config.ssh.hasOwnProperty(\"user\") || msg.config.ssh.user.length < 3 ) {\n    node.send([null,msg]);\n    return;\n}\n\nif( !msg.config.ssh.hasOwnProperty(\"password\") || msg.config.ssh.password.length < 3 ) {\n    node.send([null,msg]);\n    return;\n}\n\nmsg.payload = {\n    name: msg.config.ssh.user,\n    password: msg.config.ssh.password\n}\nreturn msg;",
        "outputs": 2,
        "timeout": 0,
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "libs": [],
        "x": 660,
        "y": 3020,
        "wires": [
            [
                "685f821274b581ad"
            ],
            [
                "f2ceb909953a4b46"
            ]
        ]
    },
    {
        "id": "bc44ba762351f4a7",
        "type": "catch",
        "z": "6d42dc07fde7a1cc",
        "g": "a8977cc109a268cc",
        "name": "",
        "scope": [
            "7079f502804805af"
        ],
        "uncaught": false,
        "x": 990,
        "y": 2620,
        "wires": [
            [
                "fcff279f966c43bd"
            ]
        ]
    },
    {
        "id": "fcff279f966c43bd",
        "type": "function",
        "z": "6d42dc07fde7a1cc",
        "g": "a8977cc109a268cc",
        "name": "Error",
        "func": "node.error(msg.error.message,msg);\nreturn msg;",
        "outputs": 1,
        "timeout": 0,
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "libs": [],
        "x": 1190,
        "y": 2620,
        "wires": [
            [
                "69915560eca0c310"
            ]
        ]
    },
    {
        "id": "c14e8b254aaaf7d9",
        "type": "template",
        "z": "6d42dc07fde7a1cc",
        "g": "35bf777b2ebfe389",
        "name": "Cross-Origin",
        "field": "payload",
        "fieldType": "msg",
        "format": "handlebars",
        "syntax": "mustache",
        "template": "{\n    \"apiVersion\": \"1.0\",\n    \"context\":\"OptionalContext\",\n    \"method\":\"set\",\n    \"params\":{\n        \"X-Frame-Options\": \"*\",\n        \"Content-Security-Policy\": \"\"\n    }\n}\n",
        "output": "str",
        "x": 450,
        "y": 3880,
        "wires": [
            [
                "6e2aa7ea52190f17"
            ]
        ]
    },
    {
        "id": "6e2aa7ea52190f17",
        "type": "Axis device",
        "z": "6d42dc07fde7a1cc",
        "g": "35bf777b2ebfe389",
        "name": "/axis-cgi/customhttpheader.cgi",
        "preset": "1af13a1540441ff9",
        "action": "HTTP Post",
        "cgi": "/axis-cgi/customhttpheader.cgi",
        "data": "",
        "options": "",
        "filename": "",
        "x": 710,
        "y": 3880,
        "wires": [
            [
                "2e6c91bc5312f883",
                "6feb3086c321cf21"
            ]
        ]
    },
    {
        "id": "b69e0535406e6083",
        "type": "function",
        "z": "6d42dc07fde7a1cc",
        "g": "35bf777b2ebfe389",
        "name": "xframe",
        "func": "if( !msg.config.hasOwnProperty(\"xframe\") || !msg.config.xframe  ) {\n  node.send([null,msg]);\n  return;\n}\nnode.send([msg,null]);\n",
        "outputs": 2,
        "timeout": 0,
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "libs": [],
        "x": 290,
        "y": 3880,
        "wires": [
            [
                "c14e8b254aaaf7d9"
            ],
            [
                "dc9345ae4f124cc2"
            ]
        ]
    },
    {
        "id": "23d2a5e773d5e946",
        "type": "link in",
        "z": "6d42dc07fde7a1cc",
        "name": "link in 33",
        "links": [
            "a129eca3fce91dc0",
            "2c3b0c096ccd6092"
        ],
        "x": 175,
        "y": 3880,
        "wires": [
            [
                "b69e0535406e6083"
            ]
        ]
    },
    {
        "id": "f24dfada3b507dfc",
        "type": "link out",
        "z": "6d42dc07fde7a1cc",
        "name": "link out 111",
        "mode": "link",
        "links": [
            "fd813139961b13e6"
        ],
        "x": 1135,
        "y": 3880,
        "wires": []
    },
    {
        "id": "d8c5893e5cb8553d",
        "type": "link out",
        "z": "6d42dc07fde7a1cc",
        "name": "link out 112",
        "mode": "link",
        "links": [
            "4409070b748256e5"
        ],
        "x": 1135,
        "y": 3980,
        "wires": []
    },
    {
        "id": "2e6c91bc5312f883",
        "type": "function",
        "z": "6d42dc07fde7a1cc",
        "g": "35bf777b2ebfe389",
        "name": "Status",
        "func": "msg.payload = msg.device.serial + \": xframe set\";\nreturn msg;",
        "outputs": 1,
        "timeout": 0,
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "libs": [],
        "x": 970,
        "y": 3880,
        "wires": [
            [
                "f24dfada3b507dfc"
            ]
        ]
    },
    {
        "id": "e7260cc294b423e6",
        "type": "comment",
        "z": "6d42dc07fde7a1cc",
        "name": "When Adding more configurations, add them below this comment before potentially device changes to fixed IP",
        "info": "",
        "x": 590,
        "y": 4060,
        "wires": []
    },
    {
        "id": "27759148675546cf",
        "type": "comment",
        "z": "6d42dc07fde7a1cc",
        "g": "35bf777b2ebfe389",
        "name": "xFrame.  Enable camer web interface to be included in an HTML iframe",
        "info": "",
        "x": 500,
        "y": 3820,
        "wires": []
    },
    {
        "id": "0c86d8fe4e3bc8e0",
        "type": "catch",
        "z": "6d42dc07fde7a1cc",
        "g": "7f637aa563c1770a",
        "name": "",
        "scope": [
            "589a48123f0f6e37",
            "b576e4918ad5cac8"
        ],
        "uncaught": false,
        "x": 1030,
        "y": 3360,
        "wires": [
            [
                "fdbe155fc9141766"
            ]
        ]
    },
    {
        "id": "fdbe155fc9141766",
        "type": "function",
        "z": "6d42dc07fde7a1cc",
        "g": "7f637aa563c1770a",
        "name": "Error",
        "func": "node.error(msg.error.message,msg);\nreturn msg;",
        "outputs": 1,
        "timeout": 0,
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "libs": [],
        "x": 1190,
        "y": 3360,
        "wires": [
            [
                "139603f1191905d6"
            ]
        ]
    },
    {
        "id": "abb41098846a6d4f",
        "type": "function",
        "z": "6d42dc07fde7a1cc",
        "name": "Complete",
        "func": "msg.topic = \"complete\";\nmsg.payload = msg.device.serial + \": Complete\";\nreturn msg;",
        "outputs": 1,
        "timeout": 0,
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "libs": [],
        "x": 1240,
        "y": 120,
        "wires": [
            []
        ]
    },
    {
        "id": "11697d9f8c0f7233",
        "type": "function",
        "z": "6d42dc07fde7a1cc",
        "g": "7f637aa563c1770a",
        "name": "Status",
        "func": "msg.payload = msg.device.serial + \": Installing ACAP\";\nreturn msg;",
        "outputs": 1,
        "timeout": 0,
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "libs": [],
        "x": 1470,
        "y": 3260,
        "wires": [
            [
                "8f55c63b83b2328c"
            ]
        ]
    },
    {
        "id": "3f61b9b71ea88809",
        "type": "link in",
        "z": "6d42dc07fde7a1cc",
        "name": "ACAPS",
        "links": [
            "6030aa150ff838f3"
        ],
        "x": 175,
        "y": 3580,
        "wires": [
            [
                "6a18d98e605fd305"
            ]
        ]
    },
    {
        "id": "6a18d98e605fd305",
        "type": "function",
        "z": "6d42dc07fde7a1cc",
        "g": "041b20d0789a6844",
        "name": "VAPIX",
        "func": "if( !msg.config.hasOwnProperty(\"vapix\") ) {\n    node.send([null,msg]);\n    return;\n}\n\nif( !Array.isArray(msg.config.vapix) ) {\n    node.send([null,msg]);\n    return;\n}\n\nif( Array.isArray(msg.config.vapix.length < 1 ) ) {\n    node.send([null,msg]);\n    return;\n}\n\nmsg.payload = msg.config.vapix;\nnode.send([msg],null);\n",
        "outputs": 2,
        "timeout": 0,
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "libs": [],
        "x": 290,
        "y": 3580,
        "wires": [
            [
                "84a58015f56e282d"
            ],
            [
                "60f56af62319b30d"
            ]
        ]
    },
    {
        "id": "2c3b0c096ccd6092",
        "type": "link out",
        "z": "6d42dc07fde7a1cc",
        "name": "link out 114",
        "mode": "link",
        "links": [
            "23d2a5e773d5e946"
        ],
        "x": 1365,
        "y": 3720,
        "wires": []
    },
    {
        "id": "84a58015f56e282d",
        "type": "split",
        "z": "6d42dc07fde7a1cc",
        "g": "041b20d0789a6844",
        "name": "",
        "splt": "\\n",
        "spltType": "str",
        "arraySplt": 1,
        "arraySpltType": "len",
        "stream": false,
        "addname": "",
        "x": 480,
        "y": 3580,
        "wires": [
            [
                "445d57d05ad9e0c8"
            ]
        ]
    },
    {
        "id": "445d57d05ad9e0c8",
        "type": "function",
        "z": "6d42dc07fde7a1cc",
        "g": "041b20d0789a6844",
        "name": "function 1",
        "func": "if( !msg.payload.hasOwnProperty(\"method\") ) {\n    node.send([null,null,msg]);\n    return;\n}\n\nif( typeof msg.payload.method !== \"string\" || typeof msg.payload.method.length < 2 ) {\n    node.send([null,null,msg]);\n    return;\n}\n\nif( !msg.payload.hasOwnProperty(\"cgi\") ) {\n    node.send([null,null,msg]);\n    return;\n}\n\nif( typeof msg.payload.cgi !== \"string\" || typeof msg.payload.cgi.length < 5 ) {\n    node.send([null,null,msg]);\n    return;\n}\n\nvar body = null;\nif( msg.payload.hasOwnProperty(\"body\") )\n    body = msg.payload.body;\nif( msg.payload.hasOwnProperty(\"data\") )\n    body = msg.payload.data;\nif( msg.payload.hasOwnProperty(\"payload\") )\n    body = msg.payload.payload;\n\nswitch( msg.payload.method ) {\n    case \"get\":\n        msg.cgi = msg.payload.cgi;\n        node.send([msg,null,null]);\n        break;\n    case \"post\":\n        if(!body) {\n            node.error(\"HTTP Popst body missing\");\n            node.send([null,null,msg]);\n            return;\n        }\n        msg.cgi = msg.payload.cgi;\n        msg.payload = body;\n        node.send([null,msg,null]);\n        break;\n    default:\n        node.send([null,null,msg]);\n        break;\n}\n",
        "outputs": 3,
        "timeout": 0,
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "libs": [],
        "x": 660,
        "y": 3580,
        "wires": [
            [
                "5b1d4e2f67d651cf"
            ],
            [
                "ce085b4599a2ea44"
            ],
            [
                "7c5e9e8c00935010"
            ]
        ]
    },
    {
        "id": "a0abcc8262210030",
        "type": "join",
        "z": "6d42dc07fde7a1cc",
        "g": "041b20d0789a6844",
        "name": "",
        "mode": "auto",
        "build": "object",
        "property": "payload",
        "propertyType": "msg",
        "key": "topic",
        "joiner": "\\n",
        "joinerType": "str",
        "accumulate": "false",
        "timeout": "",
        "count": "",
        "reduceRight": false,
        "x": 1160,
        "y": 3680,
        "wires": [
            [
                "cb745dbe07b94249"
            ]
        ]
    },
    {
        "id": "5b1d4e2f67d651cf",
        "type": "Axis device",
        "z": "6d42dc07fde7a1cc",
        "g": "041b20d0789a6844",
        "name": "",
        "preset": "1af13a1540441ff9",
        "action": "HTTP Get",
        "cgi": "",
        "data": "",
        "options": "",
        "filename": "",
        "x": 850,
        "y": 3520,
        "wires": [
            [
                "925b5b036e82bc89",
                "a0abcc8262210030"
            ]
        ]
    },
    {
        "id": "925b5b036e82bc89",
        "type": "function",
        "z": "6d42dc07fde7a1cc",
        "g": "041b20d0789a6844",
        "name": "Message",
        "func": "msg.response = msg.payload;\nmsg.payload = \"HTTP Get: \" + msg.cgi;\nreturn msg;",
        "outputs": 1,
        "timeout": 0,
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "libs": [],
        "x": 1030,
        "y": 3520,
        "wires": [
            [
                "95d88d6640e961f1"
            ]
        ]
    },
    {
        "id": "95d88d6640e961f1",
        "type": "link out",
        "z": "6d42dc07fde7a1cc",
        "name": "link out 115",
        "mode": "link",
        "links": [
            "fd813139961b13e6"
        ],
        "x": 1365,
        "y": 3520,
        "wires": []
    },
    {
        "id": "b7ad2c811cc448cc",
        "type": "catch",
        "z": "6d42dc07fde7a1cc",
        "g": "041b20d0789a6844",
        "name": "",
        "scope": [
            "5b1d4e2f67d651cf"
        ],
        "uncaught": false,
        "x": 840,
        "y": 3560,
        "wires": [
            [
                "a0abcc8262210030",
                "513453f276e3a282"
            ]
        ]
    },
    {
        "id": "09eb56c5433ca289",
        "type": "link in",
        "z": "6d42dc07fde7a1cc",
        "name": "Error",
        "links": [
            "513453f276e3a282",
            "a046d81f10eda1c3"
        ],
        "x": 1125,
        "y": 180,
        "wires": [
            []
        ]
    },
    {
        "id": "55183c191b5d8f63",
        "type": "comment",
        "z": "6d42dc07fde7a1cc",
        "name": "Error",
        "info": "",
        "x": 1230,
        "y": 180,
        "wires": []
    },
    {
        "id": "ce085b4599a2ea44",
        "type": "Axis device",
        "z": "6d42dc07fde7a1cc",
        "g": "041b20d0789a6844",
        "name": "",
        "preset": "1af13a1540441ff9",
        "action": "HTTP Post",
        "cgi": "",
        "data": "",
        "options": "",
        "filename": "",
        "x": 860,
        "y": 3600,
        "wires": [
            [
                "39e098e46f709d10",
                "a0abcc8262210030"
            ]
        ]
    },
    {
        "id": "39e098e46f709d10",
        "type": "function",
        "z": "6d42dc07fde7a1cc",
        "g": "041b20d0789a6844",
        "name": "Message",
        "func": "msg.response = msg.payload;\nmsg.payload = \"HTTP Post : \" + msg.cgi;\nreturn msg;",
        "outputs": 1,
        "timeout": 0,
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "libs": [],
        "x": 1030,
        "y": 3600,
        "wires": [
            [
                "3af3e207e5bfeda5"
            ]
        ]
    },
    {
        "id": "564bddaed34cec09",
        "type": "catch",
        "z": "6d42dc07fde7a1cc",
        "g": "041b20d0789a6844",
        "name": "",
        "scope": [
            "ce085b4599a2ea44"
        ],
        "uncaught": false,
        "x": 840,
        "y": 3640,
        "wires": [
            [
                "a046d81f10eda1c3",
                "a0abcc8262210030"
            ]
        ]
    },
    {
        "id": "513453f276e3a282",
        "type": "link out",
        "z": "6d42dc07fde7a1cc",
        "name": "link out 116",
        "mode": "link",
        "links": [
            "09eb56c5433ca289"
        ],
        "x": 1365,
        "y": 3560,
        "wires": []
    },
    {
        "id": "a046d81f10eda1c3",
        "type": "link out",
        "z": "6d42dc07fde7a1cc",
        "name": "link out 117",
        "mode": "link",
        "links": [
            "09eb56c5433ca289"
        ],
        "x": 1365,
        "y": 3640,
        "wires": []
    },
    {
        "id": "3af3e207e5bfeda5",
        "type": "link out",
        "z": "6d42dc07fde7a1cc",
        "name": "link out 118",
        "mode": "link",
        "links": [
            "fd813139961b13e6"
        ],
        "x": 1365,
        "y": 3600,
        "wires": []
    },
    {
        "id": "e16638baaa19dc6a",
        "type": "comment",
        "z": "6d42dc07fde7a1cc",
        "g": "041b20d0789a6844",
        "name": "VAPIX",
        "info": "",
        "x": 290,
        "y": 3500,
        "wires": []
    },
    {
        "id": "22fd81e81e58a9bc",
        "type": "junction",
        "z": "6d42dc07fde7a1cc",
        "g": "a6daea7094dcf3c1",
        "x": 820,
        "y": 440,
        "wires": [
            [
                "118eccf99d66c609"
            ]
        ]
    },
    {
        "id": "36b89933e57818cf",
        "type": "junction",
        "z": "6d42dc07fde7a1cc",
        "g": "97cd457f96f38f70",
        "x": 420,
        "y": 3060,
        "wires": [
            [
                "f2ceb909953a4b46"
            ]
        ]
    },
    {
        "id": "252b2f6d49f04f32",
        "type": "junction",
        "z": "6d42dc07fde7a1cc",
        "g": "97cd457f96f38f70",
        "x": 1000,
        "y": 3060,
        "wires": [
            [
                "4779962d80c06de3"
            ]
        ]
    },
    {
        "id": "e8feb42a043b6459",
        "type": "junction",
        "z": "6d42dc07fde7a1cc",
        "g": "d0160cacc6bea5d9",
        "x": 460,
        "y": 2860,
        "wires": [
            [
                "40f73ce61b9326e0"
            ]
        ]
    },
    {
        "id": "40f73ce61b9326e0",
        "type": "junction",
        "z": "6d42dc07fde7a1cc",
        "g": "d0160cacc6bea5d9",
        "x": 1520,
        "y": 2860,
        "wires": [
            [
                "49f6847da02f3bca"
            ]
        ]
    },
    {
        "id": "49f6847da02f3bca",
        "type": "junction",
        "z": "6d42dc07fde7a1cc",
        "g": "d0160cacc6bea5d9",
        "x": 1780,
        "y": 2860,
        "wires": [
            [
                "215045de4161c6d9"
            ]
        ]
    },
    {
        "id": "c79c9c2e52709ddb",
        "type": "junction",
        "z": "6d42dc07fde7a1cc",
        "g": "7f637aa563c1770a",
        "x": 410,
        "y": 3400,
        "wires": [
            [
                "a6d5343b7d107066"
            ]
        ]
    },
    {
        "id": "a6d5343b7d107066",
        "type": "junction",
        "z": "6d42dc07fde7a1cc",
        "g": "7f637aa563c1770a",
        "x": 1650,
        "y": 3400,
        "wires": [
            [
                "6030aa150ff838f3"
            ]
        ]
    },
    {
        "id": "46d9574007c8b241",
        "type": "junction",
        "z": "6d42dc07fde7a1cc",
        "g": "3763a604cedcadd6",
        "x": 420,
        "y": 1620,
        "wires": [
            [
                "63b73943e7fd0961"
            ]
        ]
    },
    {
        "id": "63b73943e7fd0961",
        "type": "junction",
        "z": "6d42dc07fde7a1cc",
        "g": "3763a604cedcadd6",
        "x": 1540,
        "y": 1620,
        "wires": [
            [
                "5bf4a8a8a272f0fd"
            ]
        ]
    },
    {
        "id": "fc15a00405db3416",
        "type": "junction",
        "z": "6d42dc07fde7a1cc",
        "g": "694ab4032aea3d26",
        "x": 1080,
        "y": 1900,
        "wires": [
            [
                "bbf7489d41b939df"
            ]
        ]
    },
    {
        "id": "4a0ee7956c5cb56e",
        "type": "junction",
        "z": "6d42dc07fde7a1cc",
        "g": "694ab4032aea3d26",
        "x": 560,
        "y": 1840,
        "wires": [
            [
                "c7d47c20e5cf2a53"
            ]
        ]
    },
    {
        "id": "95cbd1d5cdc41cf8",
        "type": "junction",
        "z": "6d42dc07fde7a1cc",
        "g": "694ab4032aea3d26",
        "x": 1680,
        "y": 1960,
        "wires": [
            [
                "7c870688bcfd8874"
            ]
        ]
    },
    {
        "id": "7c870688bcfd8874",
        "type": "junction",
        "z": "6d42dc07fde7a1cc",
        "g": "694ab4032aea3d26",
        "x": 2080,
        "y": 1960,
        "wires": [
            [
                "9423cc23d14b07e7"
            ]
        ]
    },
    {
        "id": "c8cff23232942cbb",
        "type": "junction",
        "z": "6d42dc07fde7a1cc",
        "g": "694ab4032aea3d26",
        "x": 2220,
        "y": 1780,
        "wires": [
            [
                "72f8b6bf63c1f3ba"
            ]
        ]
    },
    {
        "id": "123cf7f0675c8bc7",
        "type": "junction",
        "z": "6d42dc07fde7a1cc",
        "g": "842b50752690e040",
        "x": 440,
        "y": 2380,
        "wires": [
            [
                "969a68618c44d383"
            ]
        ]
    },
    {
        "id": "9e499843723085ec",
        "type": "junction",
        "z": "6d42dc07fde7a1cc",
        "g": "842b50752690e040",
        "x": 1060,
        "y": 2420,
        "wires": [
            [
                "99b3908b2a9bf0d7"
            ]
        ]
    },
    {
        "id": "917dd678d389432a",
        "type": "junction",
        "z": "6d42dc07fde7a1cc",
        "g": "842b50752690e040",
        "x": 1640,
        "y": 2340,
        "wires": [
            [
                "7cd69a23f761639c"
            ]
        ]
    },
    {
        "id": "99b3908b2a9bf0d7",
        "type": "junction",
        "z": "6d42dc07fde7a1cc",
        "g": "842b50752690e040",
        "x": 1460,
        "y": 2420,
        "wires": [
            [
                "0cfdeee4fd6c377c"
            ]
        ]
    },
    {
        "id": "bbd2e5efe0c51bad",
        "type": "junction",
        "z": "6d42dc07fde7a1cc",
        "g": "4f509f8db6a94932",
        "x": 420,
        "y": 2180,
        "wires": [
            [
                "393cd272a763a4c7"
            ]
        ]
    },
    {
        "id": "393cd272a763a4c7",
        "type": "junction",
        "z": "6d42dc07fde7a1cc",
        "g": "4f509f8db6a94932",
        "x": 1200,
        "y": 2180,
        "wires": [
            [
                "42607c5cc0f0e98e"
            ]
        ]
    },
    {
        "id": "42607c5cc0f0e98e",
        "type": "junction",
        "z": "6d42dc07fde7a1cc",
        "g": "4f509f8db6a94932",
        "x": 2040,
        "y": 2180,
        "wires": [
            [
                "08ab754254beeb2a"
            ]
        ]
    },
    {
        "id": "db5f954c67eecf68",
        "type": "junction",
        "z": "6d42dc07fde7a1cc",
        "g": "a8977cc109a268cc",
        "x": 460,
        "y": 2660,
        "wires": [
            [
                "69915560eca0c310"
            ]
        ]
    },
    {
        "id": "69915560eca0c310",
        "type": "junction",
        "z": "6d42dc07fde7a1cc",
        "g": "a8977cc109a268cc",
        "x": 1340,
        "y": 2660,
        "wires": [
            [
                "55209209a53159f7"
            ]
        ]
    },
    {
        "id": "117a2205b1cf652c",
        "type": "junction",
        "z": "6d42dc07fde7a1cc",
        "g": "21a9057e4e10ebb9",
        "x": 400,
        "y": 940,
        "wires": [
            [
                "70ae9792b05ab9f7"
            ]
        ]
    },
    {
        "id": "70ae9792b05ab9f7",
        "type": "junction",
        "z": "6d42dc07fde7a1cc",
        "g": "21a9057e4e10ebb9",
        "x": 580,
        "y": 940,
        "wires": [
            [
                "4cf535097dc8835c"
            ]
        ]
    },
    {
        "id": "537bdcd6ac2ad7c9",
        "type": "junction",
        "z": "6d42dc07fde7a1cc",
        "g": "276a8159eef7e288",
        "x": 460,
        "y": 1140,
        "wires": [
            [
                "abf6cb640caf1531"
            ]
        ]
    },
    {
        "id": "abf6cb640caf1531",
        "type": "junction",
        "z": "6d42dc07fde7a1cc",
        "g": "276a8159eef7e288",
        "x": 640,
        "y": 1140,
        "wires": [
            [
                "50458d9f081ce80d"
            ]
        ]
    },
    {
        "id": "087190aaf5296d26",
        "type": "junction",
        "z": "6d42dc07fde7a1cc",
        "g": "5d3e30c1d3d94d93",
        "x": 420,
        "y": 1420,
        "wires": [
            [
                "35496865191becf9"
            ]
        ]
    },
    {
        "id": "35496865191becf9",
        "type": "junction",
        "z": "6d42dc07fde7a1cc",
        "g": "5d3e30c1d3d94d93",
        "x": 880,
        "y": 1420,
        "wires": [
            [
                "d6c058f41bfeb7f1"
            ]
        ]
    },
    {
        "id": "d6c058f41bfeb7f1",
        "type": "junction",
        "z": "6d42dc07fde7a1cc",
        "g": "5d3e30c1d3d94d93",
        "x": 1720,
        "y": 1420,
        "wires": [
            [
                "075bcdca09378465"
            ]
        ]
    },
    {
        "id": "c886e6027616c1f5",
        "type": "junction",
        "z": "6d42dc07fde7a1cc",
        "g": "5d3e30c1d3d94d93",
        "x": 1860,
        "y": 1300,
        "wires": [
            [
                "963e6715cfdcb9ec"
            ]
        ]
    },
    {
        "id": "49b57b5fa5210f54",
        "type": "junction",
        "z": "6d42dc07fde7a1cc",
        "g": "d9ae516f30811818",
        "x": 480,
        "y": 700,
        "wires": [
            [
                "3489dbfc560ca8fa"
            ]
        ]
    },
    {
        "id": "aca60e0a16550cd4",
        "type": "junction",
        "z": "6d42dc07fde7a1cc",
        "g": "d9ae516f30811818",
        "x": 840,
        "y": 740,
        "wires": [
            [
                "02307f52bf23c820"
            ]
        ]
    },
    {
        "id": "02307f52bf23c820",
        "type": "junction",
        "z": "6d42dc07fde7a1cc",
        "g": "d9ae516f30811818",
        "x": 1040,
        "y": 740,
        "wires": [
            [
                "70628e9dc7527cfa"
            ]
        ]
    },
    {
        "id": "50c4e741fc166d83",
        "type": "junction",
        "z": "6d42dc07fde7a1cc",
        "g": "d9ae516f30811818",
        "x": 1160,
        "y": 660,
        "wires": [
            [
                "ed774fe42cb3c12a"
            ]
        ]
    },
    {
        "id": "31528cf617c5f940",
        "type": "junction",
        "z": "6d42dc07fde7a1cc",
        "g": "7698c4cc4df6bf4f",
        "x": 460,
        "y": 4380,
        "wires": [
            [
                "7a5b539bca30018b"
            ]
        ]
    },
    {
        "id": "7a5b539bca30018b",
        "type": "junction",
        "z": "6d42dc07fde7a1cc",
        "g": "7698c4cc4df6bf4f",
        "x": 1100,
        "y": 4380,
        "wires": [
            [
                "287cb6ace8dd5738"
            ]
        ]
    },
    {
        "id": "f2ceb909953a4b46",
        "type": "junction",
        "z": "6d42dc07fde7a1cc",
        "g": "97cd457f96f38f70",
        "x": 750,
        "y": 3060,
        "wires": [
            [
                "252b2f6d49f04f32"
            ]
        ]
    },
    {
        "id": "dc9345ae4f124cc2",
        "type": "junction",
        "z": "6d42dc07fde7a1cc",
        "g": "35bf777b2ebfe389",
        "x": 380,
        "y": 3980,
        "wires": [
            [
                "6feb3086c321cf21"
            ]
        ]
    },
    {
        "id": "6feb3086c321cf21",
        "type": "junction",
        "z": "6d42dc07fde7a1cc",
        "g": "35bf777b2ebfe389",
        "x": 900,
        "y": 3980,
        "wires": [
            [
                "d8c5893e5cb8553d"
            ]
        ]
    },
    {
        "id": "8f55c63b83b2328c",
        "type": "junction",
        "z": "6d42dc07fde7a1cc",
        "x": 1620,
        "y": 3300,
        "wires": [
            [
                "e8c80ece8355b37d"
            ]
        ]
    },
    {
        "id": "60f56af62319b30d",
        "type": "junction",
        "z": "6d42dc07fde7a1cc",
        "g": "041b20d0789a6844",
        "x": 410,
        "y": 3720,
        "wires": [
            [
                "cb745dbe07b94249"
            ]
        ]
    },
    {
        "id": "7c5e9e8c00935010",
        "type": "junction",
        "z": "6d42dc07fde7a1cc",
        "g": "041b20d0789a6844",
        "x": 790,
        "y": 3680,
        "wires": [
            [
                "a0abcc8262210030"
            ]
        ]
    },
    {
        "id": "cb745dbe07b94249",
        "type": "junction",
        "z": "6d42dc07fde7a1cc",
        "g": "041b20d0789a6844",
        "x": 1270,
        "y": 3720,
        "wires": [
            [
                "2c3b0c096ccd6092"
            ]
        ]
    },
    {
        "id": "a6daea7094dcf3c1",
        "type": "group",
        "z": "6d42dc07fde7a1cc",
        "name": "",
        "style": {
            "stroke": "#000000",
            "fill": "#ffffbf",
            "label": true,
            "color": "#000000"
        },
        "nodes": [
            "c2d7c2a2b8161e5a",
            "1f15e092e60c9844",
            "fc369dfee32ed2e3",
            "9f567c6239e2f210",
            "58641cab88f6e32c",
            "ce1f9e18f9d2a93e",
            "d1f261abccdd89fb",
            "ddecb5534f5c267e",
            "9ca3fb83104f2ec3",
            "ff7cd4027a66f1da",
            "22fd81e81e58a9bc",
            "b71a276e97101779"
        ],
        "x": 214,
        "y": 159,
        "w": 632,
        "h": 362
    },
    {
        "id": "97cd457f96f38f70",
        "type": "group",
        "z": "6d42dc07fde7a1cc",
        "name": "",
        "style": {
            "stroke": "#000000",
            "fill": "#ffffbf",
            "label": true,
            "color": "#000000"
        },
        "nodes": [
            "7407aee1d1cadd6f",
            "685f821274b581ad",
            "d069d879c526844e",
            "e025f3668afecba6",
            "36b89933e57818cf",
            "252b2f6d49f04f32",
            "4c3bb6c1a57d77fe",
            "f44d7f0c8df08e2d",
            "f2ceb909953a4b46"
        ],
        "x": 214,
        "y": 2919,
        "w": 932,
        "h": 167
    },
    {
        "id": "d0160cacc6bea5d9",
        "type": "group",
        "z": "6d42dc07fde7a1cc",
        "name": "",
        "style": {
            "label": true,
            "stroke": "#000000",
            "fill": "#ffffbf",
            "color": "#000000"
        },
        "nodes": [
            "40815d0a8e39cf7f",
            "7ff2d3760f80a448",
            "27b64322651b243e",
            "a5300af384ec9ba3",
            "11756940332c3eca",
            "97481c69763ef2e7",
            "e8feb42a043b6459",
            "b011198d0b2b2578",
            "880a9303f341b62b",
            "40f73ce61b9326e0",
            "49f6847da02f3bca",
            "b522eec6ae37f6a7"
        ],
        "x": 214,
        "y": 2719,
        "w": 1692,
        "h": 167
    },
    {
        "id": "7f637aa563c1770a",
        "type": "group",
        "z": "6d42dc07fde7a1cc",
        "name": "",
        "style": {
            "stroke": "#000000",
            "fill": "#ffffbf",
            "label": true,
            "color": "#ffffbf"
        },
        "nodes": [
            "51a9a2c90c646848",
            "a23c59f972190425",
            "95d352d5d00fc4b6",
            "aacf36da03b730e4",
            "988ffbe92f5eb1c2",
            "1ec4fa0197a70334",
            "589a48123f0f6e37",
            "06562e6428a7e980",
            "b576e4918ad5cac8",
            "0fadb4c7d0d190df",
            "75797dfc2d3e399f",
            "c79c9c2e52709ddb",
            "a6d5343b7d107066",
            "139603f1191905d6",
            "0c86d8fe4e3bc8e0",
            "fdbe155fc9141766",
            "11697d9f8c0f7233"
        ],
        "x": 214,
        "y": 3119,
        "w": 1462,
        "h": 307
    },
    {
        "id": "3763a604cedcadd6",
        "type": "group",
        "z": "6d42dc07fde7a1cc",
        "name": "",
        "style": {
            "stroke": "#000000",
            "fill": "#ffffbf",
            "label": true,
            "color": "#000000"
        },
        "nodes": [
            "5a05bdb53ee2f174",
            "e33b6f02485bdd07",
            "020c6ba4f1a9fd51",
            "e0accfd45ba0304b",
            "05e2a2fe0e9d9aff",
            "c264fb8b19354902",
            "ee5890e96376b6e0",
            "189d5aeb99b9aeac",
            "46d9574007c8b241",
            "63b73943e7fd0961",
            "e491bd57e68ab8ed"
        ],
        "x": 214,
        "y": 1479,
        "w": 1472,
        "h": 167
    },
    {
        "id": "694ab4032aea3d26",
        "type": "group",
        "z": "6d42dc07fde7a1cc",
        "name": "",
        "style": {
            "fill": "#ffffbf",
            "label": true
        },
        "nodes": [
            "428a3635bc61cf24",
            "d2780e923c4dd3f8",
            "18b630a17fa5d707",
            "2814367f0e955133",
            "bc2606da493e183b",
            "c7d47c20e5cf2a53",
            "87bcc88a1385a978",
            "bff6f8b48bc52816",
            "fc15a00405db3416",
            "a496eacc48ae25b6",
            "c8c26e1dc9a11e6d",
            "4a0ee7956c5cb56e",
            "bbf7489d41b939df",
            "1cb753bc54c658e0",
            "9a33afc952aa712b",
            "332510d839492d2d",
            "95cbd1d5cdc41cf8",
            "aaa8fae12177c982",
            "152d2d2564b52758",
            "312d8c960aa543c9",
            "7c870688bcfd8874",
            "1933d552baa68898",
            "26e99cca6d5b9146",
            "c8cff23232942cbb",
            "36d9e67fd9a82ce3"
        ],
        "x": 214,
        "y": 1679,
        "w": 2032,
        "h": 322
    },
    {
        "id": "842b50752690e040",
        "type": "group",
        "z": "6d42dc07fde7a1cc",
        "name": "",
        "style": {
            "label": true,
            "stroke": "#000000",
            "fill": "#ffffbf",
            "color": "#000000"
        },
        "nodes": [
            "84b351949961649a",
            "74ba3b3d07c0e06f",
            "678fe5842926a171",
            "6af33764ac20ced9",
            "6b41e351c450af6f",
            "1cfb4860b2074b07",
            "969a68618c44d383",
            "123cf7f0675c8bc7",
            "9e499843723085ec",
            "401db2b155a6b1d3",
            "917dd678d389432a",
            "99b3908b2a9bf0d7",
            "a275a52bb44e23b8"
        ],
        "x": 214,
        "y": 2239,
        "w": 1452,
        "h": 207
    },
    {
        "id": "4f509f8db6a94932",
        "type": "group",
        "z": "6d42dc07fde7a1cc",
        "name": "",
        "style": {
            "label": true,
            "stroke": "#000000",
            "fill": "#ffffbf",
            "color": "#000000"
        },
        "nodes": [
            "7424979d2e1e6796",
            "448cd799474252dd",
            "757f081471a8193c",
            "aea92d5d322e3878",
            "a505b906df13a8da",
            "a4d219723d6ff384",
            "46015b16eb6cc572",
            "e4a2ee146a8a7fbb",
            "ad2de24dd4a408be",
            "ff152ffe11d2f159",
            "bbd2e5efe0c51bad",
            "393cd272a763a4c7",
            "23180ff1379aafe9",
            "42607c5cc0f0e98e"
        ],
        "x": 214,
        "y": 2039,
        "w": 1852,
        "h": 167
    },
    {
        "id": "a8977cc109a268cc",
        "type": "group",
        "z": "6d42dc07fde7a1cc",
        "name": "",
        "style": {
            "stroke": "#000000",
            "fill": "#ffffbf",
            "label": true,
            "color": "#000000"
        },
        "nodes": [
            "27e54a433aa80648",
            "d43ee2366bbb850d",
            "cbeb9b255f869442",
            "5a2cd68315838f2a",
            "7079f502804805af",
            "db5f954c67eecf68",
            "69915560eca0c310",
            "218fa24505b57ccb",
            "a63526db4676dc3e",
            "bc44ba762351f4a7",
            "fcff279f966c43bd"
        ],
        "x": 214,
        "y": 2479,
        "w": 1152,
        "h": 207
    },
    {
        "id": "21a9057e4e10ebb9",
        "type": "group",
        "z": "6d42dc07fde7a1cc",
        "name": "",
        "style": {
            "label": true,
            "stroke": "#000000",
            "fill": "#ffffbf",
            "color": "#000000"
        },
        "nodes": [
            "c09f158dcbafa87f",
            "42c047372c348694",
            "117a2205b1cf652c",
            "70ae9792b05ab9f7",
            "cbd106422127709a",
            "ed02a84657b2c2ac"
        ],
        "x": 214,
        "y": 799,
        "w": 512,
        "h": 167
    },
    {
        "id": "276a8159eef7e288",
        "type": "group",
        "z": "6d42dc07fde7a1cc",
        "name": "",
        "style": {
            "stroke": "#000000",
            "fill": "#ffffbf",
            "label": true,
            "color": "#000000"
        },
        "nodes": [
            "e1473b59ba10923b",
            "d15a293a5a6ad1d9",
            "aa34e840a99fe97b",
            "537bdcd6ac2ad7c9",
            "1db6ba083ea7e2b2",
            "abf6cb640caf1531"
        ],
        "x": 214,
        "y": 999,
        "w": 552,
        "h": 167
    },
    {
        "id": "5d3e30c1d3d94d93",
        "type": "group",
        "z": "6d42dc07fde7a1cc",
        "name": "",
        "style": {
            "stroke": "#000000",
            "fill": "#ffffbf",
            "label": true,
            "color": "#000000"
        },
        "nodes": [
            "0d0515f512ae48b7",
            "3f75c9f2703f3950",
            "6327790c424da490",
            "d9ea0d820ccd9ef6",
            "76a5cd067fe025ce",
            "7759867b2f6e90f7",
            "a8e494b1d7b8eb22",
            "087190aaf5296d26",
            "35496865191becf9",
            "d6c058f41bfeb7f1",
            "dbbfcd107e4df916",
            "30d61153c703b760",
            "c886e6027616c1f5"
        ],
        "x": 214,
        "y": 1199,
        "w": 1672,
        "h": 247
    },
    {
        "id": "d9ae516f30811818",
        "type": "group",
        "z": "6d42dc07fde7a1cc",
        "name": "",
        "style": {
            "stroke": "#000000",
            "fill": "#ffffbf",
            "label": true,
            "color": "#000000"
        },
        "nodes": [
            "975527adea1923dd",
            "3f9c92629957da85",
            "3489dbfc560ca8fa",
            "c08945b0bbb0537e",
            "8f16e423b251d2ee",
            "49b57b5fa5210f54",
            "aca60e0a16550cd4",
            "02307f52bf23c820",
            "79959fb142caa654",
            "50c4e741fc166d83"
        ],
        "x": 204,
        "y": 559,
        "w": 982,
        "h": 207
    },
    {
        "id": "7698c4cc4df6bf4f",
        "type": "group",
        "z": "6d42dc07fde7a1cc",
        "name": "",
        "style": {
            "stroke": "#000000",
            "fill": "#ffffbf",
            "label": true,
            "color": "#000000"
        },
        "nodes": [
            "fa8593c2e85edc94",
            "8a465ea38f5bb8f4",
            "56290d8aa7263bf2",
            "74d3eefd8a0c1999",
            "02910d22ae4c8469",
            "5ab33709fcbfd2cb",
            "31528cf617c5f940",
            "7a5b539bca30018b"
        ],
        "x": 214,
        "y": 4219,
        "w": 1192,
        "h": 187
    },
    {
        "id": "35bf777b2ebfe389",
        "type": "group",
        "z": "6d42dc07fde7a1cc",
        "name": "",
        "style": {
            "stroke": "#000000",
            "fill": "#ffffbf",
            "label": true,
            "color": "#000000"
        },
        "nodes": [
            "c14e8b254aaaf7d9",
            "6e2aa7ea52190f17",
            "b69e0535406e6083",
            "2e6c91bc5312f883",
            "dc9345ae4f124cc2",
            "6feb3086c321cf21",
            "27759148675546cf"
        ],
        "x": 214,
        "y": 3779,
        "w": 832,
        "h": 227
    },
    {
        "id": "041b20d0789a6844",
        "type": "group",
        "z": "6d42dc07fde7a1cc",
        "name": "",
        "style": {
            "stroke": "#000000",
            "fill": "#ffffbf",
            "label": true,
            "color": "#000000"
        },
        "nodes": [
            "6a18d98e605fd305",
            "84a58015f56e282d",
            "445d57d05ad9e0c8",
            "a0abcc8262210030",
            "5b1d4e2f67d651cf",
            "925b5b036e82bc89",
            "b7ad2c811cc448cc",
            "ce085b4599a2ea44",
            "39e098e46f709d10",
            "564bddaed34cec09",
            "60f56af62319b30d",
            "7c5e9e8c00935010",
            "cb745dbe07b94249",
            "e16638baaa19dc6a"
        ],
        "x": 214,
        "y": 3459,
        "w": 1082,
        "h": 287
    },
    {
        "id": "1af13a1540441ff9",
        "type": "Device Access",
        "name": "Provision",
        "address": "",
        "protocol": "http"
    },
    {
        "id": "97a054e1f9fc6e45",
        "type": "subflow:6d42dc07fde7a1cc",
        "z": "bf2c986ad16b9713",
        "name": "",
        "x": 740,
        "y": 360,
        "wires": [
            [
                "2c18a8b2f65ad7f8"
            ],
            [
                "71f89d7d9a2b5b12"
            ],
            [
                "4eb97279f932e5f7"
            ]
        ]
    }
]
