[
    {
        "id": "92c6d13e032d11d1",
        "type": "tab",
        "label": "Products Definitions",
        "disabled": false,
        "info": "",
        "env": []
    },
    {
        "id": "49ce06069d302379",
        "type": "group",
        "z": "92c6d13e032d11d1",
        "style": {
            "stroke": "#999999",
            "stroke-opacity": "1",
            "fill": "none",
            "fill-opacity": "1",
            "label": true,
            "label-position": "nw",
            "color": "#a4a4a4"
        },
        "nodes": [
            "bb156b26a354cd06",
            "3060aced76d8559e",
            "fa3734aeae1ffb4c",
            "d384475f2a7792b9",
            "9eeb713e9cad7cec",
            "2681d11344edbb8e",
            "5c9e3fb9c3603308",
            "2ac89a5f8ce54586",
            "29013ea3bb39ab97",
            "b53b919f78756ea4",
            "7620ef3f28d7d308",
            "4b1f29594863957f",
            "701deefcc22556d0",
            "6224c81c08fa9350",
            "688d0bd1ad202159",
            "7e751dcc4ef20cd9",
            "26b90b389375dc61",
            "4af91d2cc9198e52",
            "0e950ccbd6c26446",
            "daee77df1f4ff99b",
            "3bad05eb16d2a89e",
            "439b6b7afdaf2ed6",
            "a4b4472a2a24818d",
            "1bc69c5cc3167098",
            "9cc7abd5f10f0ca1",
            "be7449333e7408ed",
            "44b0fe3f9f0ff82e",
            "f3201c8281fe064a",
            "66df4b4a30506404",
            "e4ad4c127ace4380",
            "44907712d1c1994e"
        ],
        "x": 144,
        "y": 1479,
        "w": 1442,
        "h": 422
    },
    {
        "id": "6779a5465ed285ba",
        "type": "group",
        "z": "92c6d13e032d11d1",
        "style": {
            "stroke": "#999999",
            "stroke-opacity": "1",
            "fill": "none",
            "fill-opacity": "1",
            "label": true,
            "label-position": "nw",
            "color": "#a4a4a4"
        },
        "nodes": [
            "7f5f0ef4bcb0990f",
            "97c13fcb5e73f6c5",
            "91e2d296ff496910",
            "e757f5750e7be54b",
            "e470d2e6f4d8a074",
            "a717b4fa0d115731",
            "e531e5588f35e2de",
            "57fc4467c0823f42",
            "ca4478ea416088b5",
            "9d51aa51e7f7966d",
            "081c1ee930f47e9c",
            "907a993cbf76e43d",
            "37dd7fa98f7944f7",
            "2c3239f3ecc86fcf",
            "8f631bbc177ecd36",
            "627111281c4f5e55",
            "c7478fa9ad3a9b1f"
        ],
        "x": 154,
        "y": 2039,
        "w": 1532,
        "h": 202
    },
    {
        "id": "3bad05eb16d2a89e",
        "type": "junction",
        "z": "92c6d13e032d11d1",
        "g": "49ce06069d302379",
        "x": 370,
        "y": 1520,
        "wires": [
            [
                "4b1f29594863957f"
            ]
        ]
    },
    {
        "id": "a849598740333132",
        "type": "junction",
        "z": "92c6d13e032d11d1",
        "x": 260,
        "y": 560,
        "wires": [
            [
                "e3011b68bc8b6b27",
                "3b83eaec76e28473"
            ]
        ]
    },
    {
        "id": "3d4fc51f3da7633d",
        "type": "mongodb in",
        "z": "92c6d13e032d11d1",
        "mongodb": "d46f6f83035fe091",
        "name": "",
        "collection": "products",
        "operation": "find",
        "x": 480,
        "y": 760,
        "wires": [
            [
                "c3533fb2a7fa275f",
                "8f1258c31076ab9b"
            ]
        ]
    },
    {
        "id": "a796ea98c18662e0",
        "type": "function",
        "z": "92c6d13e032d11d1",
        "name": "search",
        "func": "msg.payload = {\n    ignore: false,\n    unsupported: false,\n    timestamp: {\n        $lte: new Date().getTime() - (2 * 24 * 3600 * 1000)\n    },\n}\nreturn msg;",
        "outputs": 1,
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "libs": [],
        "x": 240,
        "y": 760,
        "wires": [
            [
                "3d4fc51f3da7633d"
            ]
        ]
    },
    {
        "id": "c3533fb2a7fa275f",
        "type": "split",
        "z": "92c6d13e032d11d1",
        "name": "",
        "splt": "\\n",
        "spltType": "str",
        "arraySplt": 1,
        "arraySpltType": "len",
        "stream": false,
        "addname": "",
        "x": 250,
        "y": 820,
        "wires": [
            [
                "79a3e95e261ea9ad"
            ]
        ]
    },
    {
        "id": "88d38b72edd78732",
        "type": "function",
        "z": "92c6d13e032d11d1",
        "name": "Axis FTP",
        "func": "msg.url = \"http://ftp.axis.com/pub_soft/\" + msg.payload.path + \"/latest/ver.txt\"\nreturn msg;",
        "outputs": 1,
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "libs": [],
        "x": 1020,
        "y": 820,
        "wires": [
            [
                "b6e53d22b63957a8"
            ]
        ]
    },
    {
        "id": "79a3e95e261ea9ad",
        "type": "change",
        "z": "92c6d13e032d11d1",
        "name": "",
        "rules": [
            {
                "t": "set",
                "p": "product",
                "pt": "msg",
                "to": "payload",
                "tot": "msg"
            }
        ],
        "action": "",
        "property": "",
        "from": "",
        "to": "",
        "reg": false,
        "x": 420,
        "y": 820,
        "wires": [
            [
                "a601f4c1ff125fb1"
            ]
        ]
    },
    {
        "id": "b6e53d22b63957a8",
        "type": "http request",
        "z": "92c6d13e032d11d1",
        "name": "",
        "method": "GET",
        "ret": "txt",
        "paytoqs": "ignore",
        "url": "",
        "tls": "",
        "persist": false,
        "proxy": "",
        "authType": "",
        "senderr": false,
        "headers": [],
        "x": 1210,
        "y": 820,
        "wires": [
            [
                "6aef369ead5a0ba9"
            ]
        ]
    },
    {
        "id": "6aef369ead5a0ba9",
        "type": "switch",
        "z": "92c6d13e032d11d1",
        "name": "OK",
        "property": "statusCode",
        "propertyType": "msg",
        "rules": [
            {
                "t": "eq",
                "v": "200",
                "vt": "num"
            },
            {
                "t": "else"
            }
        ],
        "checkall": "true",
        "repair": false,
        "outputs": 2,
        "x": 1370,
        "y": 820,
        "wires": [
            [
                "e45ee79a488ac60d"
            ],
            []
        ]
    },
    {
        "id": "a601f4c1ff125fb1",
        "type": "switch",
        "z": "92c6d13e032d11d1",
        "name": "Path Set",
        "property": "payload.path",
        "propertyType": "msg",
        "rules": [
            {
                "t": "istype",
                "v": "string",
                "vt": "string"
            },
            {
                "t": "else"
            }
        ],
        "checkall": "true",
        "repair": false,
        "outputs": 2,
        "x": 620,
        "y": 820,
        "wires": [
            [
                "ad0fcf8c7d7c5138"
            ],
            []
        ]
    },
    {
        "id": "e45ee79a488ac60d",
        "type": "switch",
        "z": "92c6d13e032d11d1",
        "name": "",
        "property": "payload",
        "propertyType": "msg",
        "rules": [
            {
                "t": "istype",
                "v": "string",
                "vt": "string"
            },
            {
                "t": "else"
            }
        ],
        "checkall": "true",
        "repair": false,
        "outputs": 2,
        "x": 1530,
        "y": 820,
        "wires": [
            [
                "305f2aa2c0f18ae1"
            ],
            []
        ]
    },
    {
        "id": "ad0fcf8c7d7c5138",
        "type": "switch",
        "z": "92c6d13e032d11d1",
        "name": "Path Length?",
        "property": "payload.path.length",
        "propertyType": "msg",
        "rules": [
            {
                "t": "gt",
                "v": "0",
                "vt": "num"
            },
            {
                "t": "else"
            }
        ],
        "checkall": "true",
        "repair": false,
        "outputs": 2,
        "x": 820,
        "y": 820,
        "wires": [
            [
                "88d38b72edd78732"
            ],
            []
        ]
    },
    {
        "id": "94a0acdc044c281f",
        "type": "inject",
        "z": "92c6d13e032d11d1",
        "name": "Update global.devices",
        "props": [
            {
                "p": "payload"
            },
            {
                "p": "topic",
                "vt": "str"
            }
        ],
        "repeat": "",
        "crontab": "10 00 * * *",
        "once": false,
        "onceDelay": 0.1,
        "topic": "",
        "payload": "",
        "payloadType": "date",
        "x": 190,
        "y": 220,
        "wires": [
            [
                "26746b2eb62346be"
            ]
        ]
    },
    {
        "id": "26746b2eb62346be",
        "type": "function",
        "z": "92c6d13e032d11d1",
        "name": "Request",
        "func": "//\"Authorization: Token token=\\\"yourtoken\\\"\" \nmsg.headers = {};\nmsg.headers['Content-type'] = 'application/json';\nmsg.headers['Accept'] = 'application/json;charset=utf-8';\nmsg.headers['Authorization'] = 'apikey da6cac02-e554-44c5-8125-1281982c3cdb';\nmsg.url = \"http://www.axis.com/api/pia/v2/items?type=Product&categories=cameras,audio,modular,peopleCounters,networkswitches,encdec,fixeddome,fixed,ptz,encoders,pac,speakers,audioandio,radardetectors,doorstations,doorcontrollers,bridges,iorelays,amplifiers,mainunits,alerters,bridges,bwCameras&includeSubcategories=false&includeProperties=true&includeLargeTextValues=false\"\nreturn msg;\n",
        "outputs": 1,
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "libs": [],
        "x": 420,
        "y": 220,
        "wires": [
            [
                "5b22d8de9d39d865"
            ]
        ]
    },
    {
        "id": "5b22d8de9d39d865",
        "type": "http request",
        "z": "92c6d13e032d11d1",
        "name": "http://www.axis.com/api/pia/v2/items",
        "method": "GET",
        "ret": "obj",
        "paytoqs": "ignore",
        "url": "",
        "tls": "04c1803a51accb8f",
        "persist": false,
        "proxy": "",
        "authType": "",
        "senderr": false,
        "headers": [],
        "x": 660,
        "y": 220,
        "wires": [
            [
                "65238dd60dd89657",
                "c1652f16f84fe0f0"
            ]
        ]
    },
    {
        "id": "65238dd60dd89657",
        "type": "switch",
        "z": "92c6d13e032d11d1",
        "name": "OK",
        "property": "statusCode",
        "propertyType": "msg",
        "rules": [
            {
                "t": "lt",
                "v": "300",
                "vt": "num"
            }
        ],
        "checkall": "true",
        "repair": false,
        "outputs": 1,
        "x": 910,
        "y": 220,
        "wires": [
            [
                "56506aa467d271c5"
            ]
        ]
    },
    {
        "id": "56506aa467d271c5",
        "type": "change",
        "z": "92c6d13e032d11d1",
        "name": "",
        "rules": [
            {
                "t": "set",
                "p": "pia",
                "pt": "global",
                "to": "payload",
                "tot": "msg"
            }
        ],
        "action": "",
        "property": "",
        "from": "",
        "to": "",
        "reg": false,
        "x": 430,
        "y": 280,
        "wires": [
            [
                "4ce1888e9216ecee"
            ]
        ]
    },
    {
        "id": "4ce1888e9216ecee",
        "type": "function",
        "z": "92c6d13e032d11d1",
        "name": "Parse to global.products",
        "func": "var pia = global.get(\"pia\") || [];\nvar devices = [];\n\npia.forEach( function(item ) {\n    if( !item )\n        return;\n    var device = {\n        name: item.name,\n        state: item.state===40?\"Supported\":item.state===50?\"End of life\":item.state===60?\"End of support\":\"Undefined\",\n        chip: item.properties.hasOwnProperty(\"platform\") ? item.properties.platform:\"Undefined\",\n        inputs: 0,\n        outputs: 0,\n        discontinued: item.state >= 50,\n        unsupported: item.state === 60,\n        firmware: item.properties.latestFirmwareVersion || \"Undefined\",\n        dlpu: item.properties.hasOwnProperty(\"analyticsComputeCapability\") && (item.properties.analyticsComputeCapability.search(\"DLPU\")  > 0 ),\n        mlpu: item.properties.hasOwnProperty(\"analyticsComputeCapability\") && (item.properties.analyticsComputeCapability.search(\"MLPU\")  > 0 ),\n        tpm: item.properties.hasOwnProperty(\"TPM\") && item.properties.TPM === \"Yes\",\n        birth: item.properties.hasOwnProperty(\"externalReleaseDate\") ?new Date(item.properties.externalReleaseDate).getTime():null,\n        death: item.properties.hasOwnProperty(\"EndOfSupportDate\")? new Date(item.properties.EndOfSupportDate).getTime():null,\n        memory: item.properties.hasOwnProperty(\"afiRAM\")?parseInt(item.properties.afiRAM):0,\n        outdoor: item.properties.outdoorReady === \"Yes\",\n        flash: item.properties.hasOwnProperty(\"persistentStorageCapacity\")?parseInt(item.properties.persistentStorageCapacity):0,\n    //    device.io = (item.properties.hasOwnProperty(\"digitalIO\") && item.properties.digitalIO.length > 2) ? true:false;\n        ir: ( item.properties.hasOwnProperty(\"IRLEDs\") && item.properties.IRLEDs.length > 2 ) ?true:false,\n        led: ( item.properties.hasOwnProperty(\"whiteLEDs\") && item.properties.whiteLEDs.length > 2)  ? true:false,\n    //    device.zoom = item.properties.hasOwnProperty(\"opticalZoom\") ? item.properties.opticalZoom:false;\n        sd: item.properties.hasOwnProperty(\"slotForMemoryCard\") ? true:false,\n        audio: ( item.properties.hasOwnProperty(\"audioSupport\") && item.properties.audioSupport.length > 2)? true:false,\n        hwID:  item.properties.hwId,\n        ignore: false,\n        created: new Date(item.created).getTime()\n    }\n\n    if( item.properties.hasOwnProperty(\"alarmInputsOutputs\") && item.properties.alarmInputsOutputs.length > 0 ) {\n        var ports = item.properties.alarmInputsOutputs.split(\"/\");\n        device.inputs = parseInt(ports[0]);\n        if( ports.length === 2 )\n            device.outputs = parseInt(ports[1]);\n        if( ports.length === 1 && device.inputs === 4 ) {\n            device.inputs = 4;\n            device.outputs = 4;\n        }\n        if( ports.length === 1 && device.inputs === 2 ) {\n            device.inputs = 2;\n            device.outputs = 2;\n        }\n    }\n\n    switch( item.category ) {\n        case \"fixed\": device.group = \"Box camera\";break;\n        case \"fixeddome\": device.group = \"Dome camera\";break;\n        case \"ptz\": device.group = \"PTZ camera\";break;\n        case \"speakers\": device.group = \"Audio\";break;\n        case \"amplifiers\": device.group = \"Audio\";break;\n        case \"bridges\": device.group = \"Audio\";break;\n        case \"networkswitches\": device.group = \"Switch\";break;\n        case \"radardetectors\": device.group = \"Radar\";break;\n        case \"doorcontrollers\": device.group = \"Access control\";break;\n        case \"doorstations\": device.group = \"Access control\";break;\n        case \"encdec\": device.group = \"Encoder\";break;\n        case \"encoders\": device.group = \"Encoder\";break;\n        case \"thermal\": device.group = \"Thermal camera\";break;\n        case \"audioandio\": device.group = \"I/O\";break;\n        case \"iorelays\": device.group = \"I/O\";break;\n        case \"mainunits\":  device.group = \"Main Unit\";break;\n        case \"cameraEx\": device.group = \"Expolosion Proof\";break;\n        case \"peopleCounters\": device.group = \"3D Counter\";break;\n        default: \n            device.group = item.category;break;\n    }\n    \n    \n    switch( device.chip ) {\n        case 'ARTPEC-A':\n            device.platform =  'ARTPEC-A';\n            device.state = \"End of support\";\n        break;\n        case 'ARTPEC-B':\n            device.platform =  'ARTPEC-B';\n            device.state = \"End of support\";\n        break;\n        case 'ARTPEC-2':\n        case 'ARTPEC-3':\n        case 'ARTPEC-3 (x4)':\n        case 'ARTPEC-3 (x6)':\n           device.platform =  'crisv32';\n            device.state = \"End of support\";\n        break;\n        case 'ARTPEC-4':\n        case 'ARTPEC-5':\n        case 'ARTPEC-4 (x4)':\n        case 'ARTPEC-5 (x6)':\n           device.platform =  'mips';\n        break;        \n        case 'ARTPEC-6':\n        case 'ARTPEC-7':\n        case 'ARTPEC-7 (x2)':\n        case 'ARTPEC-7 (x4)':\n           device.platform =  'armv7hf';\n        break;        \n        case 'A5S':\n           device.platform =  'armv6l';\n           device.chip = \"Ambarella \" +device.chip;\n        break;        \n        case 'S2':\n        case 'S2 (x3)':\n           device.platform =  'armv7l';\n           device.chip = \"Ambarella \" +device.chip;\n        break;        \n        case 'S2L':\n        case 'S2E':\n        case 'S2E':\n        case 'S3L':\n        case 'S3E':\n           device.chip = \"Ambarella \" +device.chip;\n           device.platform =  'armv7hf';\n        break;        \n        case 'S5':\n        case 'S5L':\n           device.chip = \"Ambarella \" +device.chip;\n           device.platform =  'aarch64';\n        break;\n        case 'ARTPEC-8':\n           device.platform =  'aarch64';\n        break;\n        case '6SX':\n            device.platform = 'armv7hf';\n        break;\n        case 'CV25':\n            device.chip = \"Ambarella CV25\";\n            device.platform =  'aarch64';\n        break;\n        case '6ULL':\n            device.chip = \"i.MX 6ULL\";\n            device.platform = \"armv7hf\";\n        break;\n        case 'Undefined':\n            device.platform = \"Undefined\"\n        break;\n        case 'Companion L1':\n        case 'L1':\n            device.platform = \"Companion L1\";\n        break;\n        default:\n            device.platform = \"Undefined\";\n    }\n\n    if(item.name === 'AXIS F34 Surveillance system')\n        device.ignore = true;\n//    if(item.name.search('Companion') >= 0)\n//        device.ignore = true;\n    if(item.name.search('Cassette') >= 0)\n        device.ignore = true;\n    if(item.name.search('Rack') >= 0)\n        device.ignore = true;\n    if(item.name.search('Kit') >= 0)\n        device.ignore = true;\n    if(item.name.search('Blade') >= 0)\n        device.ignore = true;\n    if(item.name.search('XF') >= 0)\n        device.ignore = true;\n    if(item.name.search('system') >= 0)\n        device.ignore = true;\n    if(item.name.search('Extension') >= 0)\n        device.ignore = true;\n    if(item.name.search('Panorama') >= 0)\n        device.ignore = true;\n    if(item.name.search('Mount') >= 0)\n        device.ignore = true;\n    if(item.name.search('ExCam') >= 0)\n        device.ignore = true;\n    if(item.name.search('XPT') >= 0)\n        device.ignore = true;\n    if(item.name.search('PIR') >= 0)\n        device.ignore = true;\n    if(item.name.search('Sensor') >= 0)\n        device.ignore = true;\n    if(item.name.search('Plug') >= 0)\n        device.ignore = true;\n    if(item.name.search('Microphone') >= 0)\n        device.ignore = true;\n    if(item.name.search('2N SIP Mic') >= 0)\n        device.ignore = true;\n    if(item.name.search('Neteye') >= 0)\n        device.ignore = true;\n    if(item.name.search('Intrusion') >= 0)\n        device.ignore = true;\n    if(item.name.search('Indication') >= 0)\n        device.ignore = true;\n    if(item.name.search('Tampering') >= 0)\n        device.ignore = true;\n        \n        \n    //ADD specific features\n    var features = \"\";\n    if( item.properties.hasOwnProperty(\"SFPEnabler\") && item.properties.SFPEnabler === \"Yes\" )\n        features += \"SFP,\";\n        \n    device.features = features;\n\n    devices.push(device);\n});\n\nglobal.set(\"products\",devices);\nmsg.payload = devices;\n\nreturn msg;\n\n",
        "outputs": 1,
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "libs": [],
        "x": 650,
        "y": 280,
        "wires": [
            [
                "7f768197cbd8fb37"
            ]
        ]
    },
    {
        "id": "7f768197cbd8fb37",
        "type": "split",
        "z": "92c6d13e032d11d1",
        "name": "",
        "splt": "\\n",
        "spltType": "str",
        "arraySplt": 1,
        "arraySpltType": "len",
        "stream": false,
        "addname": "",
        "x": 850,
        "y": 280,
        "wires": [
            [
                "209c86a521a65774"
            ]
        ]
    },
    {
        "id": "209c86a521a65774",
        "type": "function",
        "z": "92c6d13e032d11d1",
        "name": "Update",
        "func": "msg.query = {\n    name: msg.payload.name\n}\n\nreturn msg;",
        "outputs": 1,
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "libs": [],
        "x": 1000,
        "y": 280,
        "wires": [
            [
                "66f2d66d3a4e08db",
                "1bdc8d6c1c175a8a"
            ]
        ]
    },
    {
        "id": "66f2d66d3a4e08db",
        "type": "mongodb out",
        "z": "92c6d13e032d11d1",
        "mongodb": "d46f6f83035fe091",
        "name": "",
        "collection": "pia",
        "payonly": false,
        "upsert": true,
        "multi": false,
        "operation": "update",
        "x": 1180,
        "y": 280,
        "wires": []
    },
    {
        "id": "1bdc8d6c1c175a8a",
        "type": "trigger",
        "z": "92c6d13e032d11d1",
        "name": "",
        "op1": "",
        "op2": "0",
        "op1type": "nul",
        "op2type": "str",
        "duration": "10",
        "extend": true,
        "overrideDelay": false,
        "units": "s",
        "reset": "",
        "bytopic": "all",
        "topic": "topic",
        "outputs": 1,
        "x": 1150,
        "y": 320,
        "wires": [
            [
                "3be9f211ea12d828"
            ]
        ]
    },
    {
        "id": "791a3a64f1192e6f",
        "type": "comment",
        "z": "92c6d13e032d11d1",
        "name": "PIA Updated",
        "info": "",
        "x": 150,
        "y": 160,
        "wires": []
    },
    {
        "id": "81f050672111a172",
        "type": "mongodb in",
        "z": "92c6d13e032d11d1",
        "mongodb": "d46f6f83035fe091",
        "name": "",
        "collection": "pia",
        "operation": "find",
        "x": 400,
        "y": 480,
        "wires": [
            [
                "068033630b91dba1",
                "645e2287c1a030d7"
            ]
        ]
    },
    {
        "id": "068033630b91dba1",
        "type": "split",
        "z": "92c6d13e032d11d1",
        "name": "",
        "splt": "\\n",
        "spltType": "str",
        "arraySplt": 1,
        "arraySpltType": "len",
        "stream": false,
        "addname": "",
        "x": 600,
        "y": 480,
        "wires": [
            [
                "f4bcbbd6705c8005"
            ]
        ]
    },
    {
        "id": "2274cf2cdafe1842",
        "type": "function",
        "z": "92c6d13e032d11d1",
        "name": "Find",
        "func": "msg.payload = {\n    name: msg.pia.name\n}\nreturn msg;",
        "outputs": 1,
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "libs": [],
        "x": 940,
        "y": 480,
        "wires": [
            [
                "98b4374377b1ee86"
            ]
        ]
    },
    {
        "id": "f4bcbbd6705c8005",
        "type": "change",
        "z": "92c6d13e032d11d1",
        "name": "",
        "rules": [
            {
                "t": "set",
                "p": "pia",
                "pt": "msg",
                "to": "payload",
                "tot": "msg"
            }
        ],
        "action": "",
        "property": "",
        "from": "",
        "to": "",
        "reg": false,
        "x": 760,
        "y": 480,
        "wires": [
            [
                "2274cf2cdafe1842"
            ]
        ]
    },
    {
        "id": "98b4374377b1ee86",
        "type": "mongodb in",
        "z": "92c6d13e032d11d1",
        "mongodb": "d46f6f83035fe091",
        "name": "",
        "collection": "products",
        "operation": "find",
        "x": 1170,
        "y": 480,
        "wires": [
            [
                "a849598740333132"
            ]
        ]
    },
    {
        "id": "3b83eaec76e28473",
        "type": "switch",
        "z": "92c6d13e032d11d1",
        "name": "Not found",
        "property": "payload.length",
        "propertyType": "msg",
        "rules": [
            {
                "t": "eq",
                "v": "0",
                "vt": "num"
            }
        ],
        "checkall": "true",
        "repair": false,
        "outputs": 1,
        "x": 360,
        "y": 600,
        "wires": [
            [
                "faf487e46a467db0"
            ]
        ]
    },
    {
        "id": "faf487e46a467db0",
        "type": "switch",
        "z": "92c6d13e032d11d1",
        "name": "Igonre",
        "property": "pia.ignore",
        "propertyType": "msg",
        "rules": [
            {
                "t": "eq",
                "v": "false",
                "vt": "jsonata"
            }
        ],
        "checkall": "true",
        "repair": false,
        "outputs": 1,
        "x": 530,
        "y": 600,
        "wires": [
            [
                "4e578461a63b06d7"
            ]
        ]
    },
    {
        "id": "e3011b68bc8b6b27",
        "type": "switch",
        "z": "92c6d13e032d11d1",
        "name": "Found",
        "property": "payload.length",
        "propertyType": "msg",
        "rules": [
            {
                "t": "eq",
                "v": "1",
                "vt": "num"
            }
        ],
        "checkall": "true",
        "repair": false,
        "outputs": 1,
        "x": 350,
        "y": 560,
        "wires": [
            [
                "e3851f3d01abb810"
            ]
        ]
    },
    {
        "id": "e3851f3d01abb810",
        "type": "change",
        "z": "92c6d13e032d11d1",
        "name": "",
        "rules": [
            {
                "t": "set",
                "p": "payload",
                "pt": "msg",
                "to": "payload[0]",
                "tot": "msg"
            }
        ],
        "action": "",
        "property": "",
        "from": "",
        "to": "",
        "reg": false,
        "x": 550,
        "y": 560,
        "wires": [
            [
                "425df4ba86b16049"
            ]
        ]
    },
    {
        "id": "425df4ba86b16049",
        "type": "function",
        "z": "92c6d13e032d11d1",
        "name": "Update state",
        "func": "msg.payload = [\n    { name: msg.pia.name },\n    {\n        '$set': {\n            state: msg.pia.state,\n            discontinued: msg.pia.discontinued,\n            unsupported: msg.pia.unsupported,\n            death: msg.pia.death,\n            birth: msg.pia.birth,\n            features: msg.pia.features || \"\"\n        }\n    },\n    {\n        upsert: false\n    }\n];\nreturn msg;\n",
        "outputs": 1,
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "libs": [],
        "x": 750,
        "y": 560,
        "wires": [
            [
                "1bed15fcf70a7af2"
            ]
        ]
    },
    {
        "id": "1bed15fcf70a7af2",
        "type": "mongodb2 in",
        "z": "92c6d13e032d11d1",
        "service": "_ext_",
        "configNode": "45f7848e51e14c0b",
        "name": "",
        "collection": "products",
        "operation": "updateOne",
        "x": 1110,
        "y": 560,
        "wires": [
            [
                "17937c71a8d7a70a"
            ]
        ]
    },
    {
        "id": "4e578461a63b06d7",
        "type": "function",
        "z": "92c6d13e032d11d1",
        "name": "Insert",
        "func": "var model = msg.pia.name;\nvar items = model.split(\" \");\nif( items.length > 1 && items[0] === \"AXIS\")\n    model = items[1];\n\n\nmsg.payload = [\n    { name: msg.pia.name },\n    {\n        \"name\": msg.pia.name,\n        \"model\": model,\n        \"group\": msg.pia.group,\n        \"latest\": msg.pia.firmware,\n        \"lts\": \"Undefined\",\n        \"discontinued\": msg.pia.discontinued,\n        \"unsupported\": msg.pia.unsupported,\n        \"state\": msg.pia.state ,\n        \"chip\": msg.pia.chip,\n        \"platform\": msg.pia.platform,\n        \"birth\": msg.pia.birth,\n        \"death\": msg.pia.death,\n        \"ignore\": msg.pia.ignore,\n        \"path\": null,\n        \"timestamp\": new Date().getTime(),\n        \"created\": msg.pia.created\n    },\n    {\n        upsert: true\n    }\n];\nreturn msg;\n",
        "outputs": 1,
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "libs": [],
        "x": 730,
        "y": 600,
        "wires": [
            [
                "1bed15fcf70a7af2",
                "d36a572f7423a75c"
            ]
        ]
    },
    {
        "id": "c1652f16f84fe0f0",
        "type": "switch",
        "z": "92c6d13e032d11d1",
        "name": "Error",
        "property": "statusCode",
        "propertyType": "msg",
        "rules": [
            {
                "t": "gte",
                "v": "300",
                "vt": "num"
            }
        ],
        "checkall": "true",
        "repair": false,
        "outputs": 1,
        "x": 910,
        "y": 180,
        "wires": [
            [
                "1c898e249d323db2"
            ]
        ]
    },
    {
        "id": "3be9f211ea12d828",
        "type": "link out",
        "z": "92c6d13e032d11d1",
        "name": "link out 1",
        "mode": "link",
        "links": [
            "7252506567c84d4c"
        ],
        "x": 1255,
        "y": 320,
        "wires": []
    },
    {
        "id": "7252506567c84d4c",
        "type": "link in",
        "z": "92c6d13e032d11d1",
        "name": "link in 1",
        "links": [
            "3be9f211ea12d828"
        ],
        "x": 245,
        "y": 480,
        "wires": [
            [
                "81f050672111a172"
            ]
        ]
    },
    {
        "id": "ecf5fe35cfff1b1a",
        "type": "comment",
        "z": "92c6d13e032d11d1",
        "name": "Update products database",
        "info": "",
        "x": 190,
        "y": 440,
        "wires": []
    },
    {
        "id": "17937c71a8d7a70a",
        "type": "trigger",
        "z": "92c6d13e032d11d1",
        "name": "",
        "op1": "",
        "op2": "0",
        "op1type": "nul",
        "op2type": "str",
        "duration": "10",
        "extend": true,
        "overrideDelay": false,
        "units": "s",
        "reset": "",
        "bytopic": "all",
        "topic": "topic",
        "outputs": 1,
        "x": 1440,
        "y": 560,
        "wires": [
            [
                "76e9ea4037b1a972"
            ]
        ]
    },
    {
        "id": "76e9ea4037b1a972",
        "type": "link out",
        "z": "92c6d13e032d11d1",
        "name": "link out 2",
        "mode": "link",
        "links": [
            "a10dd474b53a571b"
        ],
        "x": 1575,
        "y": 560,
        "wires": []
    },
    {
        "id": "a10dd474b53a571b",
        "type": "link in",
        "z": "92c6d13e032d11d1",
        "name": "link in 2",
        "links": [
            "76e9ea4037b1a972"
        ],
        "x": 95,
        "y": 760,
        "wires": [
            [
                "a796ea98c18662e0"
            ]
        ]
    },
    {
        "id": "f10d129a6641bf5d",
        "type": "comment",
        "z": "92c6d13e032d11d1",
        "name": "Update firmware",
        "info": "",
        "x": 160,
        "y": 700,
        "wires": []
    },
    {
        "id": "8f1258c31076ab9b",
        "type": "trigger",
        "z": "92c6d13e032d11d1",
        "name": "",
        "op1": "",
        "op2": "0",
        "op1type": "nul",
        "op2type": "str",
        "duration": "2",
        "extend": true,
        "overrideDelay": false,
        "units": "min",
        "reset": "",
        "bytopic": "all",
        "topic": "topic",
        "outputs": 1,
        "x": 730,
        "y": 760,
        "wires": [
            [
                "e18173ea7f61dbd6"
            ]
        ]
    },
    {
        "id": "e18173ea7f61dbd6",
        "type": "link out",
        "z": "92c6d13e032d11d1",
        "name": "link out 3",
        "mode": "link",
        "links": [
            "180783e677394c08"
        ],
        "x": 915,
        "y": 760,
        "wires": []
    },
    {
        "id": "0484567a7361e863",
        "type": "link in",
        "z": "92c6d13e032d11d1",
        "name": "link in 3",
        "links": [
            "fced6812d0c7d162"
        ],
        "x": 155,
        "y": 1340,
        "wires": [
            [
                "fdc52eba39e5b39d"
            ]
        ]
    },
    {
        "id": "6955e6cc46a75e4a",
        "type": "comment",
        "z": "92c6d13e032d11d1",
        "name": "Update api.aintegration.team",
        "info": "",
        "x": 230,
        "y": 1280,
        "wires": []
    },
    {
        "id": "fdc52eba39e5b39d",
        "type": "mongodb in",
        "z": "92c6d13e032d11d1",
        "mongodb": "d46f6f83035fe091",
        "name": "",
        "collection": "products",
        "operation": "aggregate",
        "x": 350,
        "y": 1340,
        "wires": [
            [
                "27abb738cfa1934a"
            ]
        ]
    },
    {
        "id": "7f720e2014208fc0",
        "type": "http request",
        "z": "92c6d13e032d11d1",
        "name": "https://api.aintegration.team/products/update",
        "method": "POST",
        "ret": "txt",
        "paytoqs": "ignore",
        "url": "",
        "tls": "e4723ca9669f877c",
        "persist": false,
        "proxy": "",
        "authType": "",
        "senderr": false,
        "headers": [],
        "x": 970,
        "y": 1340,
        "wires": [
            [
                "72289bebcc0dc616"
            ]
        ]
    },
    {
        "id": "6bd3835f64d2ddf9",
        "type": "inject",
        "z": "92c6d13e032d11d1",
        "name": "",
        "props": [
            {
                "p": "payload"
            },
            {
                "p": "topic",
                "vt": "str"
            }
        ],
        "repeat": "",
        "crontab": "",
        "once": false,
        "onceDelay": 0.1,
        "topic": "",
        "payload": "",
        "payloadType": "date",
        "x": 150,
        "y": 1380,
        "wires": [
            [
                "fdc52eba39e5b39d"
            ]
        ]
    },
    {
        "id": "bb156b26a354cd06",
        "type": "mongodb in",
        "z": "92c6d13e032d11d1",
        "g": "49ce06069d302379",
        "mongodb": "d46f6f83035fe091",
        "name": "",
        "collection": "products",
        "operation": "find",
        "x": 640,
        "y": 1780,
        "wires": [
            [
                "f3201c8281fe064a"
            ]
        ]
    },
    {
        "id": "3060aced76d8559e",
        "type": "ui_table",
        "z": "92c6d13e032d11d1",
        "g": "49ce06069d302379",
        "group": "924f79a7514a3b73",
        "name": "",
        "order": 4,
        "width": "20",
        "height": "13",
        "columns": [
            {
                "field": "name",
                "title": "Name",
                "width": "",
                "align": "left",
                "formatter": "plaintext",
                "formatterParams": {
                    "target": "_blank"
                }
            },
            {
                "field": "model",
                "title": "Model",
                "width": "",
                "align": "left",
                "formatter": "plaintext",
                "formatterParams": {
                    "target": "_blank"
                }
            },
            {
                "field": "path",
                "title": "Path",
                "width": "",
                "align": "left",
                "formatter": "plaintext",
                "formatterParams": {
                    "target": "_blank"
                }
            },
            {
                "field": "group",
                "title": "Group",
                "width": "",
                "align": "left",
                "formatter": "plaintext",
                "formatterParams": {
                    "target": "_blank"
                }
            },
            {
                "field": "platform",
                "title": "Plaform",
                "width": "",
                "align": "left",
                "formatter": "plaintext",
                "formatterParams": {
                    "target": "_blank"
                }
            },
            {
                "field": "state",
                "title": "State",
                "width": "",
                "align": "left",
                "formatter": "plaintext",
                "formatterParams": {
                    "target": "_blank"
                }
            }
        ],
        "outputs": 1,
        "cts": true,
        "x": 970,
        "y": 1860,
        "wires": [
            [
                "4af91d2cc9198e52",
                "1bc69c5cc3167098"
            ]
        ]
    },
    {
        "id": "fa3734aeae1ffb4c",
        "type": "sort",
        "z": "92c6d13e032d11d1",
        "g": "49ce06069d302379",
        "name": "",
        "order": "ascending",
        "as_num": false,
        "target": "payload",
        "targetType": "msg",
        "msgKey": "name",
        "msgKeyType": "jsonata",
        "seqKey": "payload",
        "seqKeyType": "msg",
        "x": 730,
        "y": 1860,
        "wires": [
            [
                "3060aced76d8559e"
            ]
        ]
    },
    {
        "id": "d384475f2a7792b9",
        "type": "ui_button",
        "z": "92c6d13e032d11d1",
        "g": "49ce06069d302379",
        "name": "",
        "group": "924f79a7514a3b73",
        "order": 1,
        "width": "4",
        "height": "1",
        "passthru": false,
        "label": "Reset",
        "tooltip": "",
        "color": "",
        "bgcolor": "",
        "className": "",
        "icon": "refresh",
        "payload": "",
        "payloadType": "str",
        "topic": "topic",
        "topicType": "msg",
        "x": 260,
        "y": 1520,
        "wires": [
            [
                "3bad05eb16d2a89e",
                "701deefcc22556d0"
            ]
        ]
    },
    {
        "id": "9eeb713e9cad7cec",
        "type": "link out",
        "z": "92c6d13e032d11d1",
        "g": "49ce06069d302379",
        "name": "Edit",
        "mode": "link",
        "links": [
            "97c13fcb5e73f6c5"
        ],
        "x": 1275,
        "y": 1860,
        "wires": []
    },
    {
        "id": "2681d11344edbb8e",
        "type": "comment",
        "z": "92c6d13e032d11d1",
        "g": "49ce06069d302379",
        "name": "Edit",
        "info": "",
        "x": 980,
        "y": 1740,
        "wires": []
    },
    {
        "id": "7f5f0ef4bcb0990f",
        "type": "comment",
        "z": "92c6d13e032d11d1",
        "g": "6779a5465ed285ba",
        "name": "Edit",
        "info": "",
        "x": 230,
        "y": 2120,
        "wires": []
    },
    {
        "id": "97c13fcb5e73f6c5",
        "type": "link in",
        "z": "92c6d13e032d11d1",
        "g": "6779a5465ed285ba",
        "name": "",
        "links": [
            "9eeb713e9cad7cec",
            "745d4070bfc85e3c"
        ],
        "x": 315,
        "y": 2120,
        "wires": [
            [
                "91e2d296ff496910"
            ]
        ]
    },
    {
        "id": "91e2d296ff496910",
        "type": "ui_form",
        "z": "92c6d13e032d11d1",
        "g": "6779a5465ed285ba",
        "name": "",
        "label": "",
        "group": "b4bb52a205807f83",
        "order": 1,
        "width": 0,
        "height": 0,
        "options": [
            {
                "label": "Name",
                "value": "name",
                "type": "text",
                "required": true,
                "rows": null
            },
            {
                "label": "Model",
                "value": "model",
                "type": "text",
                "required": true,
                "rows": null
            },
            {
                "label": "Path",
                "value": "path",
                "type": "text",
                "required": false,
                "rows": null
            },
            {
                "label": "Ignore",
                "value": "ignore",
                "type": "switch",
                "required": true,
                "rows": null
            },
            {
                "label": "Unsupported",
                "value": "unsupported",
                "type": "switch",
                "required": false,
                "rows": null
            }
        ],
        "formValue": {
            "name": "",
            "model": "",
            "path": "",
            "ignore": false,
            "unsupported": false
        },
        "payload": "",
        "submit": "Save",
        "cancel": "",
        "topic": "topic",
        "topicType": "msg",
        "splitLayout": "",
        "className": "",
        "x": 650,
        "y": 2080,
        "wires": [
            [
                "a717b4fa0d115731"
            ]
        ]
    },
    {
        "id": "e757f5750e7be54b",
        "type": "link in",
        "z": "92c6d13e032d11d1",
        "g": "6779a5465ed285ba",
        "name": "",
        "links": [],
        "x": 315,
        "y": 2080,
        "wires": [
            [
                "9d51aa51e7f7966d"
            ]
        ]
    },
    {
        "id": "e470d2e6f4d8a074",
        "type": "comment",
        "z": "92c6d13e032d11d1",
        "g": "6779a5465ed285ba",
        "name": "Reset",
        "info": "",
        "x": 230,
        "y": 2080,
        "wires": []
    },
    {
        "id": "a717b4fa0d115731",
        "type": "function",
        "z": "92c6d13e032d11d1",
        "g": "6779a5465ed285ba",
        "name": "Update",
        "func": "var product = flow.get(\"product\");\nif(!product)\n    return;\n\nproduct.name = msg.payload.name;\nproduct.model = msg.payload.model;\nproduct.path = msg.payload.path;\nproduct.ignore = msg.payload.ignore;\n\nmsg.query = {\n    name: product.name\n}\n\nmsg.payload = product;\ndelete msg.payload._id;\nmsg.query = {\n    name: msg.payload.name\n}\n\nflow.set(\"product\",msg.payload);\nreturn msg;",
        "outputs": 1,
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "libs": [],
        "x": 840,
        "y": 2080,
        "wires": [
            [
                "ca4478ea416088b5",
                "e531e5588f35e2de"
            ]
        ]
    },
    {
        "id": "e531e5588f35e2de",
        "type": "mongodb out",
        "z": "92c6d13e032d11d1",
        "g": "6779a5465ed285ba",
        "mongodb": "d46f6f83035fe091",
        "name": "",
        "collection": "products",
        "payonly": false,
        "upsert": true,
        "multi": false,
        "operation": "update",
        "x": 1120,
        "y": 2120,
        "wires": []
    },
    {
        "id": "57fc4467c0823f42",
        "type": "link out",
        "z": "92c6d13e032d11d1",
        "g": "6779a5465ed285ba",
        "name": "",
        "mode": "link",
        "links": [
            "5c9e3fb9c3603308",
            "d4e9fe43e94de426"
        ],
        "x": 1645,
        "y": 2080,
        "wires": []
    },
    {
        "id": "5c9e3fb9c3603308",
        "type": "link in",
        "z": "92c6d13e032d11d1",
        "g": "49ce06069d302379",
        "name": "",
        "links": [
            "57fc4467c0823f42",
            "7620ef3f28d7d308",
            "7c482124bd29463d",
            "a4b4472a2a24818d",
            "5b885f6c348b9f40",
            "c7478fa9ad3a9b1f"
        ],
        "x": 305,
        "y": 1780,
        "wires": [
            [
                "439b6b7afdaf2ed6"
            ]
        ]
    },
    {
        "id": "2ac89a5f8ce54586",
        "type": "comment",
        "z": "92c6d13e032d11d1",
        "g": "49ce06069d302379",
        "name": "Refresh",
        "info": "",
        "x": 220,
        "y": 1780,
        "wires": []
    },
    {
        "id": "ca4478ea416088b5",
        "type": "delay",
        "z": "92c6d13e032d11d1",
        "g": "6779a5465ed285ba",
        "name": "",
        "pauseType": "delay",
        "timeout": "250",
        "timeoutUnits": "milliseconds",
        "rate": "1",
        "nbRateUnits": "1",
        "rateUnits": "second",
        "randomFirst": "1",
        "randomLast": "5",
        "randomUnits": "seconds",
        "drop": false,
        "allowrate": false,
        "outputs": 1,
        "x": 1330,
        "y": 2080,
        "wires": [
            [
                "57fc4467c0823f42"
            ]
        ]
    },
    {
        "id": "29013ea3bb39ab97",
        "type": "function",
        "z": "92c6d13e032d11d1",
        "g": "49ce06069d302379",
        "name": "Search",
        "func": "msg.payload = flow.get(\"products\");\n\nvar search = flow.get(\"search\");\nif( !search || search.length === 0 )\n    return msg;\n\nsearch = search.toUpperCase();\n\nvar list = [];\n\nmsg.payload.forEach( function(item){\n    for(var prop in item ) {\n        if( typeof item[prop] === \"string\" ) {\n            if( item[prop].toUpperCase().search(search) >= 0 ) {\n                list.push(item);\n                return;\n            }\n        }\n    }\n});\nmsg.payload = list;\nreturn msg;",
        "outputs": 1,
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "libs": [],
        "x": 440,
        "y": 1860,
        "wires": [
            [
                "fa3734aeae1ffb4c"
            ]
        ]
    },
    {
        "id": "b53b919f78756ea4",
        "type": "link in",
        "z": "92c6d13e032d11d1",
        "g": "49ce06069d302379",
        "name": "",
        "links": [
            "905f191c92bca309"
        ],
        "x": 295,
        "y": 1560,
        "wires": [
            [
                "701deefcc22556d0",
                "3bad05eb16d2a89e"
            ]
        ]
    },
    {
        "id": "7620ef3f28d7d308",
        "type": "link out",
        "z": "92c6d13e032d11d1",
        "g": "49ce06069d302379",
        "name": "",
        "mode": "link",
        "links": [
            "5c9e3fb9c3603308"
        ],
        "x": 1545,
        "y": 1520,
        "wires": []
    },
    {
        "id": "4b1f29594863957f",
        "type": "trigger",
        "z": "92c6d13e032d11d1",
        "g": "49ce06069d302379",
        "name": "",
        "op1": "",
        "op2": "",
        "op1type": "nul",
        "op2type": "date",
        "duration": "250",
        "extend": true,
        "overrideDelay": false,
        "units": "ms",
        "reset": "",
        "bytopic": "all",
        "topic": "topic",
        "outputs": 1,
        "x": 1380,
        "y": 1520,
        "wires": [
            [
                "7620ef3f28d7d308"
            ]
        ]
    },
    {
        "id": "701deefcc22556d0",
        "type": "change",
        "z": "92c6d13e032d11d1",
        "g": "49ce06069d302379",
        "name": "",
        "rules": [
            {
                "t": "delete",
                "p": "product",
                "pt": "flow"
            },
            {
                "t": "delete",
                "p": "search",
                "pt": "flow"
            }
        ],
        "action": "",
        "property": "",
        "from": "",
        "to": "",
        "reg": false,
        "x": 450,
        "y": 1560,
        "wires": [
            [
                "688d0bd1ad202159"
            ]
        ]
    },
    {
        "id": "6224c81c08fa9350",
        "type": "ui_text_input",
        "z": "92c6d13e032d11d1",
        "g": "49ce06069d302379",
        "name": "",
        "label": "Search",
        "tooltip": "",
        "group": "924f79a7514a3b73",
        "order": 2,
        "width": "5",
        "height": "1",
        "passthru": false,
        "mode": "text",
        "delay": 300,
        "topic": "topic",
        "sendOnBlur": true,
        "className": "",
        "topicType": "msg",
        "x": 780,
        "y": 1560,
        "wires": [
            [
                "7e751dcc4ef20cd9"
            ]
        ]
    },
    {
        "id": "688d0bd1ad202159",
        "type": "change",
        "z": "92c6d13e032d11d1",
        "g": "49ce06069d302379",
        "name": "Reset",
        "rules": [
            {
                "t": "set",
                "p": "payload",
                "pt": "msg",
                "to": "",
                "tot": "str"
            }
        ],
        "action": "",
        "property": "",
        "from": "",
        "to": "",
        "reg": false,
        "x": 640,
        "y": 1560,
        "wires": [
            [
                "6224c81c08fa9350"
            ]
        ]
    },
    {
        "id": "7e751dcc4ef20cd9",
        "type": "change",
        "z": "92c6d13e032d11d1",
        "g": "49ce06069d302379",
        "name": "",
        "rules": [
            {
                "t": "set",
                "p": "search",
                "pt": "flow",
                "to": "payload",
                "tot": "msg"
            }
        ],
        "action": "",
        "property": "",
        "from": "",
        "to": "",
        "reg": false,
        "x": 1110,
        "y": 1560,
        "wires": [
            [
                "66df4b4a30506404",
                "44907712d1c1994e"
            ]
        ]
    },
    {
        "id": "26b90b389375dc61",
        "type": "comment",
        "z": "92c6d13e032d11d1",
        "g": "49ce06069d302379",
        "name": "Reset",
        "info": "",
        "x": 220,
        "y": 1560,
        "wires": []
    },
    {
        "id": "9d51aa51e7f7966d",
        "type": "function",
        "z": "92c6d13e032d11d1",
        "g": "6779a5465ed285ba",
        "name": "Reset",
        "func": "msg.payload = {\n        \"name\":\"\",\n        \"model\":\"\",\n        \"path\": \"\"\n}\n\nreturn msg;",
        "outputs": 1,
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "libs": [],
        "x": 450,
        "y": 2080,
        "wires": [
            [
                "91e2d296ff496910"
            ]
        ]
    },
    {
        "id": "4af91d2cc9198e52",
        "type": "change",
        "z": "92c6d13e032d11d1",
        "g": "49ce06069d302379",
        "name": "",
        "rules": [
            {
                "t": "set",
                "p": "product",
                "pt": "flow",
                "to": "payload",
                "tot": "msg"
            }
        ],
        "action": "",
        "property": "",
        "from": "",
        "to": "",
        "reg": false,
        "x": 1140,
        "y": 1860,
        "wires": [
            [
                "9eeb713e9cad7cec"
            ]
        ]
    },
    {
        "id": "0e950ccbd6c26446",
        "type": "ui_switch",
        "z": "92c6d13e032d11d1",
        "g": "49ce06069d302379",
        "name": "",
        "label": "Ignored",
        "tooltip": "",
        "group": "924f79a7514a3b73",
        "order": 3,
        "width": "3",
        "height": "1",
        "passthru": true,
        "decouple": "false",
        "topic": "topic",
        "topicType": "msg",
        "style": "",
        "onvalue": "true",
        "onvalueType": "bool",
        "onicon": "",
        "oncolor": "",
        "offvalue": "false",
        "offvalueType": "bool",
        "officon": "",
        "offcolor": "",
        "animate": false,
        "className": "",
        "x": 780,
        "y": 1600,
        "wires": [
            [
                "daee77df1f4ff99b"
            ]
        ]
    },
    {
        "id": "daee77df1f4ff99b",
        "type": "change",
        "z": "92c6d13e032d11d1",
        "g": "49ce06069d302379",
        "name": "",
        "rules": [
            {
                "t": "set",
                "p": "ignore",
                "pt": "flow",
                "to": "payload",
                "tot": "msg"
            }
        ],
        "action": "",
        "property": "",
        "from": "",
        "to": "",
        "reg": false,
        "x": 1110,
        "y": 1600,
        "wires": [
            [
                "a4b4472a2a24818d"
            ]
        ]
    },
    {
        "id": "1c898e249d323db2",
        "type": "function",
        "z": "92c6d13e032d11d1",
        "name": "Incident",
        "func": "msg.payload = {\n    message: \"Axis PIA did not respond\",\n    timestamp: new Date(),\n    where: \"products@fred.ttc.lan\"\n}\nreturn msg;",
        "outputs": 1,
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "libs": [],
        "x": 1080,
        "y": 180,
        "wires": [
            [
                "070394441d71af27"
            ]
        ]
    },
    {
        "id": "070394441d71af27",
        "type": "link out",
        "z": "92c6d13e032d11d1",
        "name": "Incident",
        "mode": "link",
        "links": [
            "929acd7dd02ab6ea"
        ],
        "x": 1215,
        "y": 180,
        "wires": []
    },
    {
        "id": "85bfd5bbbb80c1de",
        "type": "function",
        "z": "92c6d13e032d11d1",
        "name": "Incident",
        "func": "msg.payload = {\n    message: \"Unable to upload products definition to api.aintegration.team\",\n    timestamp: new Date(),\n    where: \"products@fred.ttc.lan\"\n}\nreturn msg;",
        "outputs": 1,
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "libs": [],
        "x": 1500,
        "y": 1340,
        "wires": [
            [
                "9afb4788011f2435"
            ]
        ]
    },
    {
        "id": "9afb4788011f2435",
        "type": "link out",
        "z": "92c6d13e032d11d1",
        "name": "Incident",
        "mode": "link",
        "links": [
            "929acd7dd02ab6ea"
        ],
        "x": 1635,
        "y": 1340,
        "wires": []
    },
    {
        "id": "72289bebcc0dc616",
        "type": "switch",
        "z": "92c6d13e032d11d1",
        "name": "Error",
        "property": "statusCode",
        "propertyType": "msg",
        "rules": [
            {
                "t": "gte",
                "v": "300",
                "vt": "num"
            }
        ],
        "checkall": "true",
        "repair": false,
        "outputs": 1,
        "x": 1270,
        "y": 1340,
        "wires": [
            [
                "85bfd5bbbb80c1de"
            ]
        ]
    },
    {
        "id": "645e2287c1a030d7",
        "type": "debug",
        "z": "92c6d13e032d11d1",
        "name": "debug 27",
        "active": false,
        "tosidebar": true,
        "console": false,
        "tostatus": false,
        "complete": "false",
        "statusVal": "",
        "statusType": "auto",
        "x": 630,
        "y": 440,
        "wires": []
    },
    {
        "id": "12dd43f2be300033",
        "type": "inject",
        "z": "92c6d13e032d11d1",
        "name": "",
        "props": [
            {
                "p": "payload"
            },
            {
                "p": "topic",
                "vt": "str"
            }
        ],
        "repeat": "",
        "crontab": "",
        "once": false,
        "onceDelay": 0.1,
        "topic": "",
        "payload": "",
        "payloadType": "date",
        "x": 160,
        "y": 480,
        "wires": [
            [
                "81f050672111a172"
            ]
        ]
    },
    {
        "id": "439b6b7afdaf2ed6",
        "type": "function",
        "z": "92c6d13e032d11d1",
        "g": "49ce06069d302379",
        "name": "Query",
        "func": "msg.payload = {};\n\nif( flow.get(\"ignore\") === false)\n    msg.payload.ignore = false;\n\nif( flow.get(\"unsupported\") === false)\n    msg.payload.unsupported = false;\n\nif( flow.get(\"discontinued\") === false)\n    msg.payload.discontinued = false;\n\n    \nreturn msg;",
        "outputs": 1,
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "libs": [],
        "x": 430,
        "y": 1780,
        "wires": [
            [
                "bb156b26a354cd06"
            ]
        ]
    },
    {
        "id": "a4b4472a2a24818d",
        "type": "link out",
        "z": "92c6d13e032d11d1",
        "g": "49ce06069d302379",
        "name": "",
        "mode": "link",
        "links": [
            "5c9e3fb9c3603308"
        ],
        "x": 1245,
        "y": 1600,
        "wires": []
    },
    {
        "id": "1bc69c5cc3167098",
        "type": "debug",
        "z": "92c6d13e032d11d1",
        "g": "49ce06069d302379",
        "name": "debug 28",
        "active": true,
        "tosidebar": true,
        "console": false,
        "tostatus": false,
        "complete": "false",
        "statusVal": "",
        "statusType": "auto",
        "x": 1390,
        "y": 1860,
        "wires": []
    },
    {
        "id": "9cc7abd5f10f0ca1",
        "type": "ui_switch",
        "z": "92c6d13e032d11d1",
        "g": "49ce06069d302379",
        "name": "",
        "label": "Unsupported",
        "tooltip": "",
        "group": "924f79a7514a3b73",
        "order": 3,
        "width": "3",
        "height": "1",
        "passthru": true,
        "decouple": "false",
        "topic": "topic",
        "topicType": "msg",
        "style": "",
        "onvalue": "true",
        "onvalueType": "bool",
        "onicon": "",
        "oncolor": "",
        "offvalue": "false",
        "offvalueType": "bool",
        "officon": "",
        "offcolor": "",
        "animate": false,
        "className": "",
        "x": 790,
        "y": 1640,
        "wires": [
            [
                "be7449333e7408ed"
            ]
        ]
    },
    {
        "id": "be7449333e7408ed",
        "type": "change",
        "z": "92c6d13e032d11d1",
        "g": "49ce06069d302379",
        "name": "",
        "rules": [
            {
                "t": "set",
                "p": "unsupported",
                "pt": "flow",
                "to": "payload",
                "tot": "msg"
            }
        ],
        "action": "",
        "property": "",
        "from": "",
        "to": "",
        "reg": false,
        "x": 1080,
        "y": 1640,
        "wires": [
            [
                "a4b4472a2a24818d"
            ]
        ]
    },
    {
        "id": "44b0fe3f9f0ff82e",
        "type": "ui_switch",
        "z": "92c6d13e032d11d1",
        "g": "49ce06069d302379",
        "name": "",
        "label": "Discontinued",
        "tooltip": "",
        "group": "924f79a7514a3b73",
        "order": 3,
        "width": "3",
        "height": "1",
        "passthru": true,
        "decouple": "false",
        "topic": "topic",
        "topicType": "msg",
        "style": "",
        "onvalue": "true",
        "onvalueType": "bool",
        "onicon": "",
        "oncolor": "",
        "offvalue": "false",
        "offvalueType": "bool",
        "officon": "",
        "offcolor": "",
        "animate": false,
        "className": "",
        "x": 800,
        "y": 1680,
        "wires": [
            [
                "5fcbf319130f495d"
            ]
        ]
    },
    {
        "id": "5fcbf319130f495d",
        "type": "change",
        "z": "92c6d13e032d11d1",
        "name": "",
        "rules": [
            {
                "t": "set",
                "p": "discontinued",
                "pt": "flow",
                "to": "payload",
                "tot": "msg"
            }
        ],
        "action": "",
        "property": "",
        "from": "",
        "to": "",
        "reg": false,
        "x": 1090,
        "y": 1680,
        "wires": [
            [
                "a4b4472a2a24818d"
            ]
        ]
    },
    {
        "id": "7c0c87fa0234ed63",
        "type": "function",
        "z": "92c6d13e032d11d1",
        "name": "Pia Items",
        "func": "msg.headers = {};\nmsg.headers['Content-type'] = 'application/json';\nmsg.headers['Accept'] = 'application/json;charset=utf-8';\nmsg.headers['Authorization'] = 'apikey da6cac02-e554-44c5-8125-1281982c3cdb';\nmsg.url = \"http://www.axis.com/api/pia/v2/items?type=Categories\"\nreturn msg;\n",
        "outputs": 1,
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "libs": [],
        "x": 340,
        "y": 80,
        "wires": [
            [
                "7711598b40d00a11"
            ]
        ]
    },
    {
        "id": "7711598b40d00a11",
        "type": "http request",
        "z": "92c6d13e032d11d1",
        "name": "http://www.axis.com/api/pia/v2/items",
        "method": "GET",
        "ret": "obj",
        "paytoqs": "ignore",
        "url": "",
        "tls": "04c1803a51accb8f",
        "persist": false,
        "proxy": "",
        "authType": "",
        "senderr": false,
        "headers": [],
        "x": 590,
        "y": 80,
        "wires": [
            [
                "0c19e0024c084654",
                "b8ad793ba2ddef42"
            ]
        ]
    },
    {
        "id": "2a49b6366bdbba8e",
        "type": "inject",
        "z": "92c6d13e032d11d1",
        "name": "Pia Categories",
        "props": [
            {
                "p": "payload"
            },
            {
                "p": "topic",
                "vt": "str"
            }
        ],
        "repeat": "",
        "crontab": "",
        "once": false,
        "onceDelay": 0.1,
        "topic": "",
        "payload": "",
        "payloadType": "date",
        "x": 160,
        "y": 80,
        "wires": [
            [
                "7c0c87fa0234ed63"
            ]
        ]
    },
    {
        "id": "e6cc7e0ef7b87264",
        "type": "debug",
        "z": "92c6d13e032d11d1",
        "name": "debug 29",
        "active": false,
        "tosidebar": true,
        "console": false,
        "tostatus": false,
        "complete": "false",
        "statusVal": "",
        "statusType": "auto",
        "x": 1040,
        "y": 80,
        "wires": []
    },
    {
        "id": "0c19e0024c084654",
        "type": "function",
        "z": "92c6d13e032d11d1",
        "name": "function 1",
        "func": "var categories = {};\n\nmsg.payload.forEach(function(item){\n    categories[item.category] = true;\n})\n\nmsg.payload = categories;\nreturn msg;",
        "outputs": 1,
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "libs": [],
        "x": 860,
        "y": 80,
        "wires": [
            [
                "e6cc7e0ef7b87264"
            ]
        ]
    },
    {
        "id": "d36a572f7423a75c",
        "type": "debug",
        "z": "92c6d13e032d11d1",
        "name": "debug 30",
        "active": false,
        "tosidebar": true,
        "console": false,
        "tostatus": false,
        "complete": "false",
        "statusVal": "",
        "statusType": "auto",
        "x": 920,
        "y": 600,
        "wires": []
    },
    {
        "id": "27abb738cfa1934a",
        "type": "change",
        "z": "92c6d13e032d11d1",
        "name": "",
        "rules": [
            {
                "t": "set",
                "p": "url",
                "pt": "msg",
                "to": "https://api.aintegration.team/products/update",
                "tot": "str"
            }
        ],
        "action": "",
        "property": "",
        "from": "",
        "to": "",
        "reg": false,
        "x": 630,
        "y": 1340,
        "wires": [
            [
                "7f720e2014208fc0"
            ]
        ]
    },
    {
        "id": "f3201c8281fe064a",
        "type": "change",
        "z": "92c6d13e032d11d1",
        "g": "49ce06069d302379",
        "name": "",
        "rules": [
            {
                "t": "set",
                "p": "products",
                "pt": "flow",
                "to": "payload",
                "tot": "msg"
            }
        ],
        "action": "",
        "property": "",
        "from": "",
        "to": "",
        "reg": false,
        "x": 890,
        "y": 1780,
        "wires": [
            [
                "29013ea3bb39ab97"
            ]
        ]
    },
    {
        "id": "66df4b4a30506404",
        "type": "link out",
        "z": "92c6d13e032d11d1",
        "g": "49ce06069d302379",
        "name": "link out 4",
        "mode": "link",
        "links": [
            "e4ad4c127ace4380"
        ],
        "x": 1245,
        "y": 1560,
        "wires": []
    },
    {
        "id": "e4ad4c127ace4380",
        "type": "link in",
        "z": "92c6d13e032d11d1",
        "g": "49ce06069d302379",
        "name": "link in 4",
        "links": [
            "66df4b4a30506404"
        ],
        "x": 305,
        "y": 1860,
        "wires": [
            [
                "29013ea3bb39ab97"
            ]
        ]
    },
    {
        "id": "44907712d1c1994e",
        "type": "debug",
        "z": "92c6d13e032d11d1",
        "g": "49ce06069d302379",
        "name": "debug 31",
        "active": true,
        "tosidebar": true,
        "console": false,
        "tostatus": false,
        "complete": "false",
        "statusVal": "",
        "statusType": "auto",
        "x": 1430,
        "y": 1560,
        "wires": []
    },
    {
        "id": "907a993cbf76e43d",
        "type": "ui_button",
        "z": "92c6d13e032d11d1",
        "g": "6779a5465ed285ba",
        "name": "",
        "group": "b4bb52a205807f83",
        "order": 3,
        "width": 0,
        "height": 0,
        "passthru": false,
        "label": "Remove",
        "tooltip": "",
        "color": "",
        "bgcolor": "red",
        "className": "",
        "icon": "",
        "payload": "",
        "payloadType": "str",
        "topic": "topic",
        "topicType": "msg",
        "x": 460,
        "y": 2200,
        "wires": [
            [
                "37dd7fa98f7944f7"
            ]
        ]
    },
    {
        "id": "081c1ee930f47e9c",
        "type": "ui_template",
        "z": "92c6d13e032d11d1",
        "g": "6779a5465ed285ba",
        "group": "b4bb52a205807f83",
        "name": "Separator",
        "order": 2,
        "width": 0,
        "height": 0,
        "format": "<div ng-bind-html=\"msg.payload\"></div>",
        "storeOutMessages": true,
        "fwdInMessages": true,
        "resendOnRefresh": true,
        "templateScope": "local",
        "className": "",
        "x": 300,
        "y": 2200,
        "wires": [
            []
        ]
    },
    {
        "id": "37dd7fa98f7944f7",
        "type": "function",
        "z": "92c6d13e032d11d1",
        "g": "6779a5465ed285ba",
        "name": "function 2",
        "func": "var product = flow.get(\"product\");\nif(!product || !product.hasOwnProperty(\"name\") )\n    return;\n    \nmsg.payload = {\n    name: product.name\n}\nreturn msg;",
        "outputs": 1,
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "libs": [],
        "x": 650,
        "y": 2200,
        "wires": [
            [
                "2c3239f3ecc86fcf",
                "8f631bbc177ecd36",
                "627111281c4f5e55"
            ]
        ]
    },
    {
        "id": "2c3239f3ecc86fcf",
        "type": "debug",
        "z": "92c6d13e032d11d1",
        "g": "6779a5465ed285ba",
        "name": "debug 32",
        "active": true,
        "tosidebar": true,
        "console": false,
        "tostatus": false,
        "complete": "false",
        "statusVal": "",
        "statusType": "auto",
        "x": 1580,
        "y": 2200,
        "wires": []
    },
    {
        "id": "8f631bbc177ecd36",
        "type": "mongodb out",
        "z": "92c6d13e032d11d1",
        "g": "6779a5465ed285ba",
        "mongodb": "d46f6f83035fe091",
        "name": "",
        "collection": "products",
        "payonly": false,
        "upsert": true,
        "multi": false,
        "operation": "delete",
        "x": 880,
        "y": 2200,
        "wires": []
    },
    {
        "id": "627111281c4f5e55",
        "type": "delay",
        "z": "92c6d13e032d11d1",
        "g": "6779a5465ed285ba",
        "name": "",
        "pauseType": "delay",
        "timeout": "250",
        "timeoutUnits": "milliseconds",
        "rate": "1",
        "nbRateUnits": "1",
        "rateUnits": "second",
        "randomFirst": "1",
        "randomLast": "5",
        "randomUnits": "seconds",
        "drop": false,
        "allowrate": false,
        "outputs": 1,
        "x": 1190,
        "y": 2200,
        "wires": [
            [
                "c7478fa9ad3a9b1f"
            ]
        ]
    },
    {
        "id": "c7478fa9ad3a9b1f",
        "type": "link out",
        "z": "92c6d13e032d11d1",
        "g": "6779a5465ed285ba",
        "name": "",
        "mode": "link",
        "links": [
            "5c9e3fb9c3603308",
            "d4e9fe43e94de426"
        ],
        "x": 1395,
        "y": 2200,
        "wires": []
    },
    {
        "id": "095b7d7eb933b8fb",
        "type": "debug",
        "z": "92c6d13e032d11d1",
        "name": "debug 40",
        "active": true,
        "tosidebar": true,
        "console": false,
        "tostatus": false,
        "complete": "false",
        "statusVal": "",
        "statusType": "auto",
        "x": 970,
        "y": 1960,
        "wires": []
    },
    {
        "id": "1d0c9f0f0508c4b3",
        "type": "inject",
        "z": "92c6d13e032d11d1",
        "name": "Update all firmwares",
        "props": [
            {
                "p": "payload"
            },
            {
                "p": "topic",
                "vt": "str"
            }
        ],
        "repeat": "",
        "crontab": "",
        "once": false,
        "onceDelay": 0.1,
        "topic": "",
        "payload": "{\"ignore\":false,\"unsupported\":false}",
        "payloadType": "json",
        "x": 440,
        "y": 700,
        "wires": [
            [
                "3d4fc51f3da7633d"
            ]
        ]
    },
    {
        "id": "b8ad793ba2ddef42",
        "type": "debug",
        "z": "92c6d13e032d11d1",
        "name": "debug 79",
        "active": true,
        "tosidebar": true,
        "console": false,
        "tostatus": false,
        "complete": "false",
        "statusVal": "",
        "statusType": "auto",
        "x": 870,
        "y": 40,
        "wires": []
    },
    {
        "id": "df1cdd0c2faafc6f",
        "type": "http request",
        "z": "92c6d13e032d11d1",
        "name": "",
        "method": "GET",
        "ret": "txt",
        "paytoqs": "ignore",
        "url": "",
        "tls": "",
        "persist": false,
        "proxy": "",
        "authType": "",
        "senderr": false,
        "headers": [],
        "x": 950,
        "y": 1080,
        "wires": [
            [
                "7c4efbfce1ea326f"
            ]
        ]
    },
    {
        "id": "cb14da4a9c5c35d7",
        "type": "function",
        "z": "92c6d13e032d11d1",
        "name": "Axis FTP",
        "func": "msg.url = \"http://ftp.axis.com/pub_soft/\" + msg.payload.path;\nreturn msg;",
        "outputs": 1,
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "libs": [],
        "x": 740,
        "y": 1080,
        "wires": [
            [
                "df1cdd0c2faafc6f"
            ]
        ]
    },
    {
        "id": "7c4efbfce1ea326f",
        "type": "function",
        "z": "92c6d13e032d11d1",
        "name": "Latest LTS10",
        "func": "var rows = msg.payload.split(\"\\n\");\n\nvar list = [];\nrows.forEach(function(row) {\n    if( row[0] === '<' && row[1] === 'a') {\n        var link = row.match(/href=\"([^\"]*)/)[1].slice(0, -1).replace(/_/g, '.'); \n        list.push(link);\n    }\n})\n\nvar versionValue = 0;\nvar latest = null;\nlist.forEach(function(version){\n    var sub = version.split(\".\");\n    if( sub[0] !== \"10\")\n        return;\n    var value = (parseInt(sub[1]) * 1000) + parseInt(sub[2]);\n    if( value > versionValue) {\n        latest = version;\n        versionValue = value;\n    }\n});\n\nif( latest === null )\n    return;\n\nif(msg.product.lts === latest )\n    return;\n\nmsg.payload = latest;\n\nreturn msg;",
        "outputs": 1,
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "libs": [],
        "x": 1150,
        "y": 1080,
        "wires": [
            [
                "7a200194495b5a51"
            ]
        ]
    },
    {
        "id": "9f80a4e205f9444d",
        "type": "function",
        "z": "92c6d13e032d11d1",
        "name": "search",
        "func": "msg.payload = {\n    ignore: false,\n    unsupported: false\n}\nreturn msg;",
        "outputs": 1,
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "libs": [],
        "x": 300,
        "y": 1000,
        "wires": [
            [
                "cc07c772d34a67b8"
            ]
        ]
    },
    {
        "id": "cc07c772d34a67b8",
        "type": "mongodb in",
        "z": "92c6d13e032d11d1",
        "mongodb": "d46f6f83035fe091",
        "name": "",
        "collection": "products",
        "operation": "find",
        "x": 540,
        "y": 1000,
        "wires": [
            [
                "cd999639c9d12f6f",
                "0a7ef9db185fea1a"
            ]
        ]
    },
    {
        "id": "cd999639c9d12f6f",
        "type": "split",
        "z": "92c6d13e032d11d1",
        "name": "",
        "splt": "\\n",
        "spltType": "str",
        "arraySplt": 1,
        "arraySpltType": "len",
        "stream": false,
        "addname": "",
        "x": 350,
        "y": 1080,
        "wires": [
            [
                "73d75120f22ffe93"
            ]
        ]
    },
    {
        "id": "73d75120f22ffe93",
        "type": "change",
        "z": "92c6d13e032d11d1",
        "name": "",
        "rules": [
            {
                "t": "set",
                "p": "product",
                "pt": "msg",
                "to": "payload",
                "tot": "msg"
            }
        ],
        "action": "",
        "property": "",
        "from": "",
        "to": "",
        "reg": false,
        "x": 550,
        "y": 1080,
        "wires": [
            [
                "cb14da4a9c5c35d7"
            ]
        ]
    },
    {
        "id": "305f2aa2c0f18ae1",
        "type": "function",
        "z": "92c6d13e032d11d1",
        "name": "Update",
        "func": "\nif( msg.payload.split(\".\")[0] === \"10\") {\n    node.warn(\"LTS!\");\n    msg.payload = [\n        { name: msg.product.name },\n        {\n            '$set': {\n                latest: msg.payload,\n                lts: msg.payload,\n                timestamp: new Date().getTime()\n            }\n        },\n        {\n            upsert: false\n        }\n    ];\n} else {\n    msg.payload = [\n        { name: msg.product.name },\n        {\n            '$set': {\n                latest: msg.payload,\n                timestamp: new Date().getTime()\n            }\n        },\n        {\n            upsert: false\n        }\n    ];\n}\n\n\nreturn msg;\n",
        "outputs": 1,
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "libs": [],
        "x": 1720,
        "y": 820,
        "wires": [
            [
                "1e6d788e2fdb1763"
            ]
        ]
    },
    {
        "id": "1e6d788e2fdb1763",
        "type": "mongodb2 in",
        "z": "92c6d13e032d11d1",
        "service": "_ext_",
        "configNode": "45f7848e51e14c0b",
        "name": "",
        "collection": "products",
        "operation": "updateOne",
        "x": 2050,
        "y": 820,
        "wires": [
            []
        ]
    },
    {
        "id": "7a200194495b5a51",
        "type": "function",
        "z": "92c6d13e032d11d1",
        "name": "Update",
        "func": "msg.payload = [\n    { name: msg.product.name },\n    {\n        '$set': {\n            lts: msg.payload,\n            timestamp: new Date().getTime()\n        }\n    },\n    {\n        upsert: false\n    }\n];\n\nreturn msg;\n",
        "outputs": 1,
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "libs": [],
        "x": 1360,
        "y": 1080,
        "wires": [
            [
                "1f0b12382e88522b"
            ]
        ]
    },
    {
        "id": "1f0b12382e88522b",
        "type": "mongodb2 in",
        "z": "92c6d13e032d11d1",
        "service": "_ext_",
        "configNode": "45f7848e51e14c0b",
        "name": "",
        "collection": "products",
        "operation": "updateOne",
        "x": 1690,
        "y": 1080,
        "wires": [
            []
        ]
    },
    {
        "id": "180783e677394c08",
        "type": "link in",
        "z": "92c6d13e032d11d1",
        "name": "link in 7",
        "links": [
            "e18173ea7f61dbd6"
        ],
        "x": 95,
        "y": 1000,
        "wires": [
            [
                "9f80a4e205f9444d"
            ]
        ]
    },
    {
        "id": "ec1e4c7fcdcf896d",
        "type": "comment",
        "z": "92c6d13e032d11d1",
        "name": "Set Latest LTS 10",
        "info": "",
        "x": 170,
        "y": 940,
        "wires": []
    },
    {
        "id": "0a7ef9db185fea1a",
        "type": "trigger",
        "z": "92c6d13e032d11d1",
        "name": "",
        "op1": "",
        "op2": "0",
        "op1type": "nul",
        "op2type": "str",
        "duration": "2",
        "extend": true,
        "overrideDelay": false,
        "units": "min",
        "reset": "",
        "bytopic": "all",
        "topic": "topic",
        "outputs": 1,
        "x": 810,
        "y": 1000,
        "wires": [
            [
                "fced6812d0c7d162"
            ]
        ]
    },
    {
        "id": "fced6812d0c7d162",
        "type": "link out",
        "z": "92c6d13e032d11d1",
        "name": "link out 17",
        "mode": "link",
        "links": [
            "0484567a7361e863"
        ],
        "x": 935,
        "y": 1000,
        "wires": []
    },
    {
        "id": "8d5a13c844c579c4",
        "type": "inject",
        "z": "92c6d13e032d11d1",
        "name": "Collect props",
        "props": [
            {
                "p": "payload"
            },
            {
                "p": "topic",
                "vt": "str"
            }
        ],
        "repeat": "",
        "crontab": "",
        "once": false,
        "onceDelay": 0.1,
        "topic": "",
        "payload": "",
        "payloadType": "date",
        "x": 1730,
        "y": 120,
        "wires": [
            [
                "5895b0b1462494ed"
            ]
        ]
    },
    {
        "id": "5895b0b1462494ed",
        "type": "change",
        "z": "92c6d13e032d11d1",
        "name": "",
        "rules": [
            {
                "t": "set",
                "p": "props",
                "pt": "flow",
                "to": "{}",
                "tot": "json"
            },
            {
                "t": "set",
                "p": "payload",
                "pt": "msg",
                "to": "pia",
                "tot": "global"
            }
        ],
        "action": "",
        "property": "",
        "from": "",
        "to": "",
        "reg": false,
        "x": 1930,
        "y": 120,
        "wires": [
            [
                "35bcfea7f91a0464"
            ]
        ]
    },
    {
        "id": "35bcfea7f91a0464",
        "type": "split",
        "z": "92c6d13e032d11d1",
        "name": "",
        "splt": "\\n",
        "spltType": "str",
        "arraySplt": 1,
        "arraySpltType": "len",
        "stream": false,
        "addname": "",
        "x": 2140,
        "y": 120,
        "wires": [
            [
                "5fae11338703a9a3"
            ]
        ]
    },
    {
        "id": "5fae11338703a9a3",
        "type": "function",
        "z": "92c6d13e032d11d1",
        "name": "flow.props",
        "func": "var props = flow.get(\"props\") || {};\nfor( var prop in msg.payload.properties ) {\n    props[prop] = msg.payload.properties[prop];\n}\n\nflow.set(\"props\",props);\n\nreturn msg;",
        "outputs": 1,
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "libs": [],
        "x": 2300,
        "y": 120,
        "wires": [
            []
        ]
    },
    {
        "id": "df4d5ca226531023",
        "type": "inject",
        "z": "92c6d13e032d11d1",
        "name": "Collect props",
        "props": [
            {
                "p": "payload"
            },
            {
                "p": "topic",
                "vt": "str"
            }
        ],
        "repeat": "",
        "crontab": "",
        "once": false,
        "onceDelay": 0.1,
        "topic": "",
        "payload": "",
        "payloadType": "date",
        "x": 1710,
        "y": 200,
        "wires": [
            [
                "dc718a685f50e9d3"
            ]
        ]
    },
    {
        "id": "dc718a685f50e9d3",
        "type": "change",
        "z": "92c6d13e032d11d1",
        "name": "Search if has Prop",
        "rules": [
            {
                "t": "set",
                "p": "prop",
                "pt": "msg",
                "to": "SFPEnabler",
                "tot": "str"
            },
            {
                "t": "set",
                "p": "payload",
                "pt": "msg",
                "to": "pia",
                "tot": "global"
            }
        ],
        "action": "",
        "property": "",
        "from": "",
        "to": "",
        "reg": false,
        "x": 1920,
        "y": 200,
        "wires": [
            [
                "e039599556577b5b"
            ]
        ]
    },
    {
        "id": "e039599556577b5b",
        "type": "split",
        "z": "92c6d13e032d11d1",
        "name": "",
        "splt": "\\n",
        "spltType": "str",
        "arraySplt": 1,
        "arraySpltType": "len",
        "stream": false,
        "addname": "",
        "x": 2120,
        "y": 200,
        "wires": [
            [
                "36e893d8f5196317"
            ]
        ]
    },
    {
        "id": "36e893d8f5196317",
        "type": "function",
        "z": "92c6d13e032d11d1",
        "name": "flow.props",
        "func": "for( var prop in msg.payload.properties ) {\n    if( prop === msg.prop && msg.payload.properties[prop].length > 0 )    \n        node.send(msg);\n}\n",
        "outputs": 1,
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "libs": [],
        "x": 2280,
        "y": 200,
        "wires": [
            [
                "e445f72a7980a224"
            ]
        ]
    },
    {
        "id": "7830b3f2d84485bb",
        "type": "http in",
        "z": "92c6d13e032d11d1",
        "name": "",
        "url": "/props",
        "method": "get",
        "upload": false,
        "swaggerDoc": "",
        "x": 1710,
        "y": 320,
        "wires": [
            [
                "edb9186899738532",
                "b833e7fc2525f9db"
            ]
        ]
    },
    {
        "id": "edb9186899738532",
        "type": "function",
        "z": "92c6d13e032d11d1",
        "name": "List",
        "func": "var list = [];\n\nvar props = flow.get(\"props\");\nfor( var prop in props )\n    list.push(prop);\n\nmsg.payload = list;\nreturn msg;",
        "outputs": 1,
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "libs": [],
        "x": 1900,
        "y": 320,
        "wires": [
            [
                "5fee154209c111a0"
            ]
        ]
    },
    {
        "id": "e85ad56d1dad95f7",
        "type": "inject",
        "z": "92c6d13e032d11d1",
        "name": "",
        "props": [
            {
                "p": "payload"
            },
            {
                "p": "topic",
                "vt": "str"
            }
        ],
        "repeat": "",
        "crontab": "",
        "once": false,
        "onceDelay": 0.1,
        "topic": "",
        "payload": "",
        "payloadType": "date",
        "x": 1710,
        "y": 380,
        "wires": [
            [
                "edb9186899738532"
            ]
        ]
    },
    {
        "id": "5a2d9be2427054cd",
        "type": "debug",
        "z": "92c6d13e032d11d1",
        "name": "debug 91",
        "active": true,
        "tosidebar": true,
        "console": false,
        "tostatus": false,
        "complete": "false",
        "statusVal": "",
        "statusType": "auto",
        "x": 2260,
        "y": 380,
        "wires": []
    },
    {
        "id": "5fee154209c111a0",
        "type": "sort",
        "z": "92c6d13e032d11d1",
        "name": "",
        "order": "ascending",
        "as_num": false,
        "target": "payload",
        "targetType": "msg",
        "msgKey": "payload",
        "msgKeyType": "elem",
        "seqKey": "payload",
        "seqKeyType": "msg",
        "x": 2060,
        "y": 320,
        "wires": [
            [
                "5a2d9be2427054cd",
                "cb738a345d521d18"
            ]
        ]
    },
    {
        "id": "cb738a345d521d18",
        "type": "http response",
        "z": "92c6d13e032d11d1",
        "name": "",
        "statusCode": "",
        "headers": {},
        "x": 2230,
        "y": 320,
        "wires": []
    },
    {
        "id": "b833e7fc2525f9db",
        "type": "debug",
        "z": "92c6d13e032d11d1",
        "name": "debug 92",
        "active": true,
        "tosidebar": true,
        "console": false,
        "tostatus": false,
        "complete": "false",
        "statusVal": "",
        "statusType": "auto",
        "x": 1910,
        "y": 380,
        "wires": []
    },
    {
        "id": "e445f72a7980a224",
        "type": "debug",
        "z": "92c6d13e032d11d1",
        "name": "debug 93",
        "active": true,
        "tosidebar": true,
        "console": false,
        "tostatus": false,
        "complete": "false",
        "statusVal": "",
        "statusType": "auto",
        "x": 2470,
        "y": 200,
        "wires": []
    },
    {
        "id": "d46f6f83035fe091",
        "type": "mongodb",
        "hostname": "192.168.5.99",
        "topology": "direct",
        "connectOptions": "",
        "port": "27017",
        "db": "SIT",
        "name": ""
    },
    {
        "id": "04c1803a51accb8f",
        "type": "tls-config",
        "name": "Verify",
        "cert": "",
        "key": "",
        "ca": "",
        "certname": "",
        "keyname": "",
        "caname": "",
        "servername": "",
        "verifyservercert": true,
        "alpnprotocol": ""
    },
    {
        "id": "45f7848e51e14c0b",
        "type": "mongodb2",
        "uri": "mongodb://192.168.5.99:27017/SIT",
        "name": "",
        "options": "",
        "parallelism": "-1"
    },
    {
        "id": "e4723ca9669f877c",
        "type": "tls-config",
        "name": "Trust certificate",
        "cert": "",
        "key": "",
        "ca": "",
        "certname": "",
        "keyname": "",
        "caname": "",
        "servername": "",
        "verifyservercert": false,
        "alpnprotocol": ""
    },
    {
        "id": "924f79a7514a3b73",
        "type": "ui_group",
        "name": "Default",
        "tab": "dd0ae30412637277",
        "order": 1,
        "disp": true,
        "width": "20",
        "collapse": false,
        "className": ""
    },
    {
        "id": "b4bb52a205807f83",
        "type": "ui_group",
        "name": "Add/edit",
        "tab": "dd0ae30412637277",
        "order": 2,
        "disp": true,
        "width": "6",
        "collapse": false,
        "className": ""
    },
    {
        "id": "dd0ae30412637277",
        "type": "ui_tab",
        "name": "Products",
        "icon": "dashboard",
        "disabled": false,
        "hidden": false
    }
]
